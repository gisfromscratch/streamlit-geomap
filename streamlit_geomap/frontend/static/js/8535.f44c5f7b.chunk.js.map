{"version":3,"file":"static/js/8535.f44c5f7b.chunk.js","mappings":";8MAKA,SAASA,IACP,MAAM,SAAEC,GAAaC,KAChBD,GACHE,YAAYC,UAAUC,MAAMC,KAAKJ,KAErC,CACA,SAASK,EAAcC,GACMA,EAAMC,OACVR,UACrBO,EAAME,gBAEV,CACA,MAAMC,EAAqC,CAAC,YAAa,UAAW,SACpE,SAASC,EAAoCJ,GAChBA,EAAMC,OACVR,WACrBO,EAAMK,2BACNL,EAAME,iBAEV,CACA,MAAMI,EAAqB,CAAEC,SAAS,GACtC,SAASC,EAAsBC,GAC7B,GAAIA,EAAUhB,SAMZ,OALAgB,EAAUC,GAAGC,aAAa,gBAAiB,QACvCF,EAAUC,GAAGE,SAASC,SAASC,gBACjCD,SAASC,cAAcC,YAQ7B,SAA0BN,GACxBA,EAAUC,GAAGb,MAAQL,EAGUwB,EAFPP,EAAUC,GAGlCM,EAAQC,iBAAiB,cAAelB,EAAeO,GACvDH,EAAmCe,QAASlB,GAAUgB,EAAQC,iBAAiBjB,EAAOI,EAAqCE,IAF7H,IAAiCU,CADjC,CATIG,CAAiBV,IAcrB,SAA4BA,UACnBA,EAAUC,GAAGb,MAGcmB,EAFPP,EAAUC,GAGrCM,EAAQI,oBAAoB,cAAerB,EAAeO,GAC1DH,EAAmCe,QAASlB,GAAUgB,EAAQI,oBAAoBpB,EAAOI,EAAqCE,IAFhI,IAAoCU,CADpC,CAdEK,CAAmBZ,GACnBA,EAAUC,GAAGY,gBAAgB,gBAC/B,CAiBA,MAAMC,EACO,wBAEPC,EAAuBC,IAAA,IAAC,SAAEC,EAAQ,SAAEjC,GAAUgC,EAAA,OAAKE,EAAAA,EAAAA,IAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2CAAcC,EAAAA,EAAAA,IAAaP,GAAyB9B,EAAYiC,G,kDCrD7H,SAASK,EAAeC,EAAMC,EAAUC,GACtC,GAAIC,EAAAA,GACF,OAEF,MAAMC,EAGR,SAAqBJ,GACnB,MAAMK,UAAiCC,OAAOC,iBAC5CC,WAAAA,CAAYP,GACVQ,MAAMR,GACNvC,KAAKgD,cAAgB,GACrBhD,KAAKuC,SAAWA,CAClB,CACAU,OAAAA,CAAQ1C,EAAQiC,GAEd,OADAxC,KAAKgD,cAAcE,KAAK,CAAE3C,SAAQiC,YAC3BO,MAAME,QAAQ1C,EAAQiC,EAC/B,CACAW,SAAAA,CAAU5C,GACR,MAAM6C,EAAqBpD,KAAKgD,cAAcK,OAAQC,GAAaA,EAAS/C,SAAWA,GACvFP,KAAKgD,cAAgB,GACrBhD,KAAKuC,SAASQ,MAAMQ,cAAevD,MACnCA,KAAKwD,aACLJ,EAAmB5B,QAAS8B,GAAatD,KAAKiD,QAAQK,EAAS/C,OAAQ+C,EAASd,SAClF,EAEF,MACkB,iBAATF,EAA0BM,OAAOa,qBAAgC,aAATnB,EAAsBK,EAA2BC,OAAOc,cAE3H,CAzBmBC,CAAYrB,GAC7B,OAAO,IAAII,EAASH,EAAUC,EAChC,C,qECiCA,MAAMoB,EAAQC,OAAOC,IAAI,IAGnBC,EAAqBC,IACzB,IAAK,OAAAA,QAAA,IAAAA,OAAA,EAAAA,EAAgCC,KAAML,EAG3C,OAAQ,OAAAI,QAAA,IAAAA,OAAA,EAAAA,EAA+CE,cAiB5CC,EAAgBH,IAAA,CAC3BE,aAAkBF,EAClBC,EAAGL,IA4BQQ,EAAU,SACrBJ,GAAA,QAAAK,EAAAC,UAAAC,OACGN,EAAA,IAAAO,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAR,EAAAQ,EAAA,GAAAH,UAAAG,GAAA,MACc,CACjBP,aAAkBD,EAAOS,OACvB,CAACT,EAAKU,EAAGf,IAAQK,EA9BE,CAACD,IACtB,QAAI,IAAAA,EAAoBE,aACtB,OAAOF,EAAoBE,aAE3B,MAAUU,MAAA,kEAAAC,OAC0Db,EAAA,wGAGrE,EARoB,CA8BmBW,GAAoBX,EAAQJ,EAAM,GACxEI,EAAQ,IAEVC,EAAGL,EAAA,EAGCkB,EAAe,IAAIC,IAKZC,EACVhB,GACD,SAACC,GAAkC,QAAAgB,EAAAX,UAAAC,OAAAI,EAAA,IAAAH,MAAAS,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAP,EAAAO,EAAA,GAAAZ,UAAAY,GACjC,MAAMtB,EAAIe,EAAOJ,OACjB,IAAIJ,EACAC,EACJ,MAAMY,EAA+B,GAC/BG,EAAgC,GACtC,IAEIC,EAFAC,EAAI,EACJC,GAAA,EAGJ,KAAOD,EAAIzB,GAAG,CAKZ,IAJAwB,EAAInB,EAAQoB,GAKVA,EAAIzB,QAAA,KACFQ,EAAeO,EAAOU,GACvBlB,EAAcJ,EAAkBK,KAEjCgB,GAAKjB,EAAcF,IAAUoB,GAC7BC,GAAA,EAGED,IAAMzB,GACRuB,EAAcjC,KAAKkB,GAErBY,EAAc9B,KAAKkC,GACnBC,GACD,CAOD,GAJIA,IAAMzB,GACRoB,EAAc9B,KAAKe,EAAQL,IAGzB0B,EAAY,CACd,MAAMtB,EAAMgB,EAAcO,KAAK,qBAC/BtB,EAAUa,EAAaU,IAAIxB,MAMxBgB,EAAsBS,IAAMT,EAC7BF,EAAaY,IACX1B,EACCC,EAAUe,IAGfL,EAASQ,CACV,CACD,OAAOnB,EAAQC,KAAYU,EAAO,EASzBQ,EAAOH,EAAWhB,EAAAA,IAQZgB,EAAWf,EAAAA,IAQRe,EAAWL,EAAAA,G,mJCtLjC,MAAM9C,EACK,WAEL8D,EAAY,CAAC,EACbC,EAAe,CAAC,EAChBC,EAAY,CAChB1B,EAAG,GACH2B,EAAG,GACHhB,EAAG,IAEL,SAASiB,EAAchE,GAAkB,IAAjB,KAAEiE,EAAI,MAAEC,GAAOlE,EACrC,MAAMmE,EAAOL,EAAUI,GACjBE,EA2BR,SAA2BA,GACzB,MAAMC,GAAqBC,MAAMC,OAAOH,EAAKI,OAAO,KAC9CC,EAAQL,EAAKM,MAAM,KAEzB,GADmBD,EAAMjC,OAAS,EAClB,CACd,MAAMmC,EAA6B,SACnCP,EAAOK,EAAMG,IAAI,CAACC,EAAMC,IACfD,EAAKE,QAAQJ,EAA4B,SAAkBK,EAAOC,GAEvE,OADwC,IAAdH,GAA8B,IAAXG,EAEpCD,EAEFA,EAAME,aACf,IACC1B,KAAK,GACV,CACA,OAAOa,EAAoB,IAAHvB,OAAOsB,GAASA,CAC1C,CA5Cee,CAAkBlB,GACzBmB,EAA0C,MAAjChB,EAAKI,OAAOJ,EAAK5B,OAAS,GACnC6C,EAAWD,EAAShB,EAAKkB,UAAU,EAAGlB,EAAK5B,OAAS,GAAK4B,EAC/D,MAAO,GAAPtB,OAAUuC,GAAQvC,OAAGqB,GAAIrB,OAAGsC,EAAS,IAAM,GAC7C,CAoBA,SAASG,EAAuBC,GAC9B,OAAO5B,EAAU4B,EACnB,CAmBA,MAAMC,GAASC,EAAAA,EAAAA,IAAGvF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oeAClB,MAAMuF,UAAaC,EAAAA,GACjB7E,WAAAA,GACEC,SAASuB,WACTtE,KAAK4H,SAAU,EACf5H,KAAK6H,SAAU,EACf7H,KAAKgG,KAAO,KACZhG,KAAK8H,SAAU,EACf9H,KAAKiG,MAAQ,GACf,CAOA8B,iBAAAA,GAEE,GADAhF,MAAMgF,oBACF/H,KAAK8H,QAGP,OAFA9H,KAAK4H,SAAU,OACf5H,KAAKgI,mBAGFhI,KAAK4H,SACR5H,KAAKiI,iBAAiB,KACpBjI,KAAK4H,SAAU,EACf5H,KAAKgI,oBAGX,CACAE,UAAAA,CAAWC,IACLA,EAAQC,IAAI,UAAYpI,KAAKqI,YAA4B,OAAdrI,KAAKgG,OAAkBmC,EAAQC,IAAI,WAAapI,KAAKqI,YAA6B,MAAfrI,KAAKiG,SACrHjG,KAAKgI,kBAET,CACAM,oBAAAA,GAAuB,IAAAC,EACrBxF,MAAMuF,uBACmB,QAAzBC,EAAAvI,KAAKwI,4BAAoB,IAAAD,GAAzBA,EAA2B/E,aAC3BxD,KAAKwI,qBAAuB,IAC9B,CACA,sBAAMR,GACJ,MAAM,KAAEhC,EAAI,MAAEC,EAAK,QAAE2B,GAAY5H,KACjC,GAAIyC,EAAAA,KAAauD,IAAS4B,EACxB,OAEF,MAAMa,EAAiB,CAAEzC,OAAMC,SACzByC,EArEDpB,EAAuBvB,EAqEO0C,WAtFvCE,eAAyBC,GACvB,MAAMC,EAAgB9C,EAAe6C,GAC/BE,EAAiBxB,EAAuBuB,GAC9C,GAAIC,EACF,OAAOA,EAEJlD,EAAaiD,KAChBjD,EAAaiD,GAAiBE,OAAMC,EAAAA,EAAAA,GAAa,iBAADnE,OAAkBgE,EAAa,WAAUI,KAAMC,GAASA,EAAKC,QAAQC,MAAM,KACzHC,EAAO,EAAAC,MAAM,GAADzE,OAAI+D,EAAM5C,KAAI,MAAAnB,OAAK+D,EAAM3C,MAAK,0BACnC,MAGX,MAAMsD,QAAa3D,EAAaiD,GAEhC,OADAlD,EAAUkD,GAAiBU,EACpBA,CACT,CAuEgEC,CAAUf,GAClEzC,IAAShG,KAAKgG,OAGlBhG,KAAK0I,SAAWA,EAClB,CACAT,gBAAAA,CAAiB1F,GACfvC,KAAKwI,sBAAuBnG,EAAAA,EAAAA,GAAe,eAAiBoH,IAC1DA,EAAQjI,QAASkI,IACXA,EAAMC,iBACR3J,KAAKwI,qBAAqBhF,aAC1BxD,KAAKwI,qBAAuB,KAC5BjG,QAGH,CAAEqH,WAAY,SACZ5J,KAAKwI,qBAIVxI,KAAKwI,qBAAqBvF,QAAQjD,KAAKgB,IAHrCuB,GAIJ,CACAsH,MAAAA,GACE,MAAM,GAAE7I,EAAE,QAAE6G,EAAO,SAAEa,EAAQ,MAAEzC,EAAK,UAAE6D,GAAc9J,KAC9C+J,GAAMC,EAAAA,EAAAA,GAAchJ,GACpBkF,EAAOL,EAAUI,GACjBgE,IAAaH,EACbI,EAAQ,GAAGrF,OAAO6D,GAAY,IAIpC,OAHA1I,KAAKgB,GAAGmJ,YAAaC,EAAAA,EAAAA,IAAeH,GACpCjK,KAAKgB,GAAGqJ,UAAYJ,EAAWH,EAAY,KAC3C9J,KAAKgB,GAAGsJ,KAAOL,EAAW,MAAQ,MAC3BhI,EAAAA,EAAAA,IAAIsI,IAAAA,GAAApI,EAAAA,EAAAA,GAAA,uIAA+BC,EAAAA,EAAAA,IAAa,CACrD,CAACP,GAAsB,QAARkI,GAAiBlC,EAChC2C,KAAK,IACL,OAAA3F,OAAiDqB,EAAI,KAAArB,OAAIqB,GAAsDgE,EAAMvD,IAAK4C,IAAI,IAAAkB,EAAAC,EAAA,MAAqB,kBAATnB,GAAoBiB,EAAAA,EAAAA,IAAGG,IAAAA,GAAAxI,EAAAA,EAAAA,GAAA,qBAAe,OAAJoH,QAAI,IAAJA,EAAAA,EAAQqB,EAAAA,KAAeJ,EAAAA,EAAAA,IAAGK,IAAAA,GAAA1I,EAAAA,EAAAA,GAAA,iCAAiB,QAAjBsI,EAAWlB,EAAKuB,SAAC,IAAAL,EAAAA,EAAIG,EAAAA,GAAwD,QAAjDF,EAAa,YAAanB,EAAOA,EAAKwB,QAAU,SAAC,IAAAL,EAAAA,EAAKE,EAAAA,MAC5R,GACDI,EAjFKtD,GAUGuD,WAAa,CAAEvC,SAAU,CAAC,GAAI,CAAC,EAAG,CAAEwC,OAAO,IAAStD,QAAS,CAAC,GAAI,CAAC,EAAG,CAAEsD,OAAO,IAASrD,QAAS,CAAC,EAAG,CAAC,EAAG,CAAEsD,SAAS,EAAM7I,KAAM8I,UAAYpF,KAAM,CAAC,EAAG,CAAC,EAAG,CAAEmF,SAAS,IAASrD,QAAS,CAAC,EAAG,CAAC,EAAG,CAAEqD,SAAS,EAAM7I,KAAM8I,UAAYnF,MAAO,CAAC,EAAG,CAAC,EAAG,CAAEkF,SAAS,IAASrB,UAAW,GAGrRkB,EAAKxD,OAASA,GAqElB6D,EAAAA,EAAAA,GAAc,eAAgB3D,E,0FClJ9B,MAAM4D,EAAkB,4BAClBC,EAAsB,gCACtBC,EAAyB,mCACzBC,EAAe,gBACfC,EAAoC,IAAIC,QACxCC,EAAkC,IAAID,QACtCE,EAAsC,IAAIF,QAC1CG,EAAyC,IAAIH,QAC7CI,EAAsC,IAAIC,IAC1CC,EAAyBC,IAC7B,MAAM,GAAE3E,GAAO2E,EACTC,EAAW5E,IAAM6E,EAAAA,EAAAA,GAAkBF,EAAa,CAAEG,SAAU,GAAFxH,OAAK4G,EAAY,UAAA5G,OAAS0C,EAAE,QAC5F,GAAI4E,EACF,OAAOA,EAET,MAAMG,GAAcC,EAAAA,EAAAA,GAAkCL,EAAaT,GACnE,OAAKa,GAMP,SAAmCE,EAAON,GACxC,IAAIO,EACJ,MAAMC,EAAsC,gCACtCC,EAAYrM,IAChBA,EAAMK,2BACN,MAAMiM,EAAetM,EAAMsM,eAC3BH,EAAoBG,EAAaC,MAAMD,EAAaE,QAAQZ,GAAcU,EAAaE,QAAQN,KAEjGA,EAAMjL,iBAAiBmL,EAAqCC,EAAU,CAAEI,MAAM,IAC9Eb,EAAYc,cAAc,IAAIC,YAAYP,EAAqC,CAAEQ,UAAU,EAAMC,SAAS,KAC1GX,EAAM9K,oBAAoBgL,EAAqCC,GAC/D,MAAMS,EAAyBX,EAAkBpJ,OAAQrC,GAAOA,IAAOkL,GAAelL,IAAOwL,GAAOnJ,OAAQrC,IAAE,IAAAqM,EAAA,OAAe,QAAfA,EAAKrM,EAAGsM,eAAO,IAAAD,OAAA,EAAVA,EAAYE,SAAS,OACxI,OAAOH,EAAuB7I,OAAS,CACzC,CAlBEiJ,CAA0BlB,EAAaJ,GAC9B,KAEFI,GAgBT,SAASmB,EAAa1M,GACpB,IAAKA,EACH,OAEF,MAAM2M,EAAUzB,EAAsBlL,EAAUC,IAChD,GAAI4K,EAAgBxD,IAAIsF,IAAYA,IAAY3M,EAAU2M,UAAYA,GAAW3B,EAAoB3D,IAAIrH,GACvG,OAEF,MAAM4M,EAA2BC,EAAoBC,KAAK9M,GAC1D,GAAI2M,EAAS,CACX3M,EAAU2M,QAAUA,EACpB,MAAMI,EAAapC,EAAkBlG,IAAIkI,IAAY,GACrDI,EAAW5K,KAAKnC,GAChB2K,EAAkBhG,IAAIgI,EAASI,EAAWC,KAAKC,IAC1CpC,EAAgBxD,IAAIrH,EAAU2M,WACjC9B,EAAgBlG,IAAI3E,EAAU2M,QAASO,GACvClN,EAAU2M,QAAQnM,iBAAiB+J,EAAiB2C,IAEtDlC,EAAoBmC,OAAOnN,GAC3BI,SAASO,oBAAoB6J,EAAqBM,EAAoBrG,IAAIzE,IAC1E+K,EAAuBpG,IAAI3E,EAAW4M,GACtCxM,SAASI,iBAAiBiK,EAAwBmC,EACpD,MAAY5B,EAAoB3D,IAAIrH,KAClC4M,IACAxM,SAASO,oBAAoB8J,EAAwBM,EAAuBtG,IAAIzE,IAEpF,CACA,SAASoN,EAAgBpN,GACvB,IAAKA,EACH,OAOF,GALAgL,EAAoBmC,OAAOnN,GAC3BI,SAASO,oBAAoB6J,EAAqBM,EAAoBrG,IAAIzE,IAC1EI,SAASO,oBAAoB8J,EAAwBM,EAAuBtG,IAAIzE,IAChF8K,EAAoBqC,OAAOnN,GAC3B+K,EAAuBoC,OAAOnN,IACzBA,EAAU2M,QACb,OAEF,MAAMI,EAAapC,EAAkBlG,IAAIzE,EAAU2M,SACzB,IAAtBI,EAAWvJ,SACbxD,EAAU2M,QAAQhM,oBAAoB4J,EAAiBM,EAAgBpG,IAAIzE,EAAU2M,UACrF9B,EAAgBsC,OAAOnN,EAAU2M,UAEnChC,EAAkBhG,IAChB3E,EAAU2M,QACVI,EAAWzK,OAAQ+K,GAAcA,IAAcrN,GAAWgN,KAAKC,IAEjEjN,EAAU2M,QAAU,IACtB,CACA,SAASM,EAAepK,EAAGyK,GACzB,OAAOC,EAAAA,EAAAA,GAAS1K,EAAE5C,GAAIqN,EAAErN,KAAO,EAAI,CACrC,CACA,SAASuN,EAAaxN,GAAW,IAAAyN,EAC/B,OAAOzN,EAAUyL,QAA0B,QAArBgC,EAAIzN,EAAU2M,eAAO,IAAAc,GAAa,QAAbA,EAAjBA,EAAmBC,mBAAW,IAAAD,OAAA,EAA9BA,EAAgCE,SAAU,EACtE,CACA,SAAST,EAAa3N,GACpB,MAAMqO,EAAmBrO,EAAMsO,OAAOC,YAAYtO,OAC5CuN,EAAapC,EAAkBlG,IAAIxF,MACnC8O,EAAmBhB,EAAWiB,KAAMX,GAAcA,EAAUpN,KAAO2N,GAEzE,GAD8Bb,EAAWP,SAASuB,GAEhD,OAEF,MAAME,EAAiBlB,EAAW,GAC9BkB,EAAejP,UAGnBiP,EAAef,aAAa3N,EAC9B,CACA,SAAS2O,IACHlD,EAAoB3D,IAAIpI,OAC1ByN,EAAazN,KAEjB,CACA,SAAS4N,IACP7B,EAAoBmD,IAAIlP,MACxB,MAAMmP,EAAwBtD,EAAoBrG,IAAIxF,OAASiP,EAAiBpB,KAAK7N,MACrF6L,EAAoBnG,IAAI1F,KAAMmP,GAC9BhO,SAASI,iBAAiBgK,EAAqB4D,EACjD,CACAxG,eAAeyG,EAA2C5C,GAAO,IAAA6C,QACzD7C,EAAM8C,mBAEZ,GADuB5D,EAAkBtD,IAAIoE,GAE3C,OAEF,MAAM+C,EAAoC,QAAtBF,EAAG7C,EAAMgD,qBAAa,IAAAH,OAAA,EAAnBA,EAAqBI,eAAejD,EAAM1I,KAC5DyL,GAGLG,sBAAsB,KACpB,IAAK,MAAMtB,KAAarC,EACtB,GAAIqC,EAAUpN,KAAOuO,EAAgB,CACnC9B,EAAaW,GACb,KACF,GAGN,C,kDCvIA,MAAMuB,EAAqC,IAAI3D,IACzC4D,EAAY,CAChBC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,EACN1G,MAAO,EACP2G,IAAK,IAKP,SAASC,EAAiBC,GACxB,IAJF,SAAiBA,GACf,OAAOP,EAAUO,IAAUP,EAAUQ,EAAAA,EACvC,CAEOC,CAAQF,GACX,OAG2F,QAAA9L,EAAAC,UAAAC,OAL3D+L,EAAI,IAAA9L,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJ6L,EAAI7L,EAAA,GAAAH,UAAAG,GAMtC8L,QAAQJ,GAAO/P,KAAKJ,KAFE,YACH,6EACqCsQ,EAC1D,CACA,IAAIE,EACJ,MAAMnH,EAAS,CACbyG,MAAQW,GAAYP,EAAiB,QAASO,GAC9CV,KAAOU,GAAYP,EAAiB,OAAQO,GAC5CT,KAAOS,GAAYP,EAAiB,OAAQO,GAC5CnH,MAAQmH,GAAYP,EAAiB,QAASO,GAC9CZ,MAAQY,GAAYP,EAAiB,QAASO,GAC9CC,WAEF,SAAoBC,EAAO5O,GAAkD,IAAhD,UAAEhB,EAAS,KAAEoF,EAAI,UAAEyK,EAAS,eAAEC,GAAgB9O,EACzE,MAAM+O,EAAM,GAAHjM,OAAM8L,EAAO,KAAA9L,OAAgB,cAAZ8L,EAA0B,GAAK5P,GAAS8D,OAAGsB,GACrE,GAAIwJ,EAAmBvH,IAAI0I,GACzB,OAEFnB,EAAmBT,IAAI4B,GACvB,MAAMC,EAAmBvM,MAAMwM,QAAQJ,GACnCG,IAAqBP,IACvBA,EAAgB,IAAIS,KAAKC,WAAW,KAAM,CAAEC,MAAO,OAAQ7O,KAAM,iBAGnE4N,EAAiB,OADD,IAAHrL,OAAOsB,EAAI,MAAAtB,OAAK8L,EAAO,0CAAA9L,OAA4D,WAAnBgM,EAA8B,mBAAH,IAAAhM,OAA4BgM,GAAgB,KAAAhM,OAAI+L,EAAY,QAAH/L,OAAWkM,EAAmBP,EAAcY,OAAOR,EAAUjK,IAAK0K,GAAU,IAAAxM,OAASwM,EAAU,OAAQ,IAAHxM,OAAO+L,EAAS,KAAG,aAAc,IAExS,E,qICxCA,MAAMU,EAA2B,CAC/B,gBACA,uBACA,qBACA,qBAOF,MAAMC,EAA0B,oBAChC,SAASC,EAAYzQ,GACnB,MAAO,YAAaA,CACtB,CACA,MAAM0Q,EAAiC,IAAI9F,QACrC+F,EAAmC,IAAIC,QA6B7C,SAASC,EAAuB5Q,GAC9B,MAAoB,yBAAhBA,EAAG6Q,UACEtF,EAAAA,EAAAA,GAAkCvL,EAAI,8BAExCA,CACT,CACA,MAAM8Q,EAAe,IAAI7E,YAAY,iBAAkB,CAAEE,SAAS,EAAMD,UAAU,IAClF,SAAS6E,EAAezR,GAAO,IAAA0R,EAC7B,MAAMC,EAAmB,OAAL3R,QAAK,IAALA,OAAK,EAALA,EAAOC,OACrB2R,EAAgC,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaE,kBAClCC,EAAgBR,EAAkC,OAAXK,QAAW,IAAXA,OAAW,EAAXA,EAAaI,eAC1D,IAAKD,EACH,OAEF,MAAME,EAA4B,OAAbF,QAAa,IAAbA,GAAuB,QAAVJ,EAAbI,EAAeP,gBAAQ,IAAAG,OAAA,EAAvBA,EAAyBO,cACxCC,EAAgC,OAAZF,QAAY,IAAZA,OAAY,EAAZA,EAAc7L,MAAM,KAC9C,GAAI+L,EAAkBjO,OAAS,GAA8B,YAAzBiO,EAAkB,GACpD,OAEG,OAALlS,QAAK,IAALA,GAAAA,EAAOE,iBACH,aAAc4R,IAChBA,EAAcK,SAAsB,OAAXR,QAAW,IAAXA,OAAW,EAAXA,EAAaQ,UAExCL,EAAcpF,cAAc8E,GAlC9B,SAAkC/Q,EAASgB,GAA6B,IAA3B,OAAE2Q,EAAM,QAAEjC,EAAO,KAAEzK,GAAMjE,EAChE,WAAYhB,IACdA,EAAU2R,OAASA,GAEjB,mBAAoB3R,GAAiD,kBAA7BA,EAAU4R,iBACpD5R,EAAU4R,eAAiB3M,GAEzB,sBAAuBjF,IAAcA,EAAUoR,oBACjDpR,EAAUoR,kBAAoB1B,EAElC,CAyBEmC,CAAyBR,EAAe,CACtC3B,QAASyB,EACTlM,MAAM,EACN0M,OAAQ,YAEV,MAAMG,EApER,SAAqCP,GACnC,MAAMQ,EAAwBR,EAAa7L,MAAM,KAAKE,IAAI,CAACC,EAAMmM,IAAoB,IAAVA,EAAcnM,EAAO,GAAH/B,OAAM+B,EAAK,GAAGK,eAAapC,OAAG+B,EAAKiG,MAAM,KAAMtH,KAAK,IAEjJ,MAD6B,GAAHV,OAAMiO,GAAqBjO,OAAGyM,EAAyB/D,SAAS+E,GAAgB,QAAU,SAEtH,CAgE+BU,CAA4BV,GACzDF,EAAc7Q,iBAAiBsR,EAAsB,KAC/C,WAAYT,IACdA,EAAcM,OAAS,UAErB,mBAAoBN,IAAmD,KAAjCA,EAAcO,iBAA0D,IAAjCP,EAAcO,iBAC7FP,EAAcO,gBAAiB,GAE7B,sBAAuBP,GAAiBA,EAAcD,oBAAsBD,IAC9EE,EAAcD,kBAAoB,IAEhC,aAAcC,IAChBA,EAAcK,SAAsB,OAAXR,QAAW,IAAXA,OAAW,EAAXA,EAAaQ,WAEvC,CAAE1F,MAAM,GACb,CACA,SAASkG,EAAWlS,GAClB,MAAM,OAAEmS,GAAWnS,EACnB,QAAKmS,IAGLA,EAAO3R,iBAAiB,UAAWwQ,GAAgB,GACnDmB,EAAOC,gBACPD,EAAOxR,oBAAoB,UAAWqQ,GAAgB,GACtDrC,sBAAsB,KACpB,MAAM0D,EAAaF,EAAOG,iBAAiB,oBAC3C,IAAK,MAAMrS,KAAMoS,EACf,GAAM,OAAFpS,QAAE,IAAFA,GAAAA,EAAImR,kBAAmB,CACvB,OAAFnR,QAAE,IAAFA,GAAAA,EAAIsS,WACJ,KACF,KAGG,EACT,CACA,SAASC,EAAUxS,GAAW,IAAAyS,EACZ,QAAhBA,EAAAzS,EAAUmS,cAAM,IAAAM,GAAhBA,EAAkBC,OACpB,CACA,SAASC,EAAY3S,GACnB,MAAM,GAAEC,EAAE,MAAE2S,GAAU5S,EAChB6S,EAAiBC,EAAmB9S,GAC1C,IAAK6S,GAlGP,SAA0CE,EAAMC,GAE9C,IADwCxH,EAAAA,EAAAA,GAAkCwH,EAAgB1B,cAAe,UAEvG,OAAO,EAET,MAAM2B,EAAiC,uCACvC,IAAIC,GAAoC,EASxC,OARAH,EAAKvS,iBAAiByS,EAAiC1T,IACrD2T,EAAoC3T,EAAMsM,eAAesH,KAAM5S,GAAYoQ,EAAiBtJ,IAAI9G,IAChGhB,EAAM6T,mBACL,CAAEpH,MAAM,IACXgH,EAAgB/G,cAAc,IAAIC,YAAY+G,EAAgC,CAC5E7G,SAAS,EACTD,UAAU,KAEL+G,CACT,CAkFyBG,CAAiCR,EAAgB5S,GACtE,OAEFD,EAAUmS,OAASU,EACnB7S,EAAUsT,aAAeV,EACrBnC,EAAYzQ,KACdA,EAAUuT,eAAiBvT,EAAUwT,SAEvC,MAAMC,EAAmBC,EAAY5G,KAAK9M,GAC1C6S,EAAerS,iBAAiB,QAASiT,GACzC/C,EAAe/L,IAAI3E,EAAUC,GAAIwT,GACjC9C,EAAiBxC,IAAIlO,EACvB,CACA,SAAS6S,EAAmB9S,GAC1B,MAAM,GAAEC,EAAE,KAAE8S,GAAS/S,EACrB,OAAO+S,GAAO1H,EAAAA,EAAAA,GAAkBpL,EAAI,CAAEuG,GAAIuM,KAAUvH,EAAAA,EAAAA,GAAkCvL,EAAI,OAC5F,CACA,SAASyT,IAAc,IAAAC,EACjB,WAAY1U,OACdA,KAAK0S,OAAS,QAEZ,mBAAoB1S,OACtBA,KAAK2S,gBAAiB,GAEpB,sBAAuB3S,OACzBA,KAAKmS,kBAAoB,IAEvBX,EAAYxR,MACdA,KAAKuU,QAAUvU,KAAKsU,gBAGtBtU,KAAK2T,MAAQ3T,KAAKqU,aACF,QAAhBK,EAAA1U,KAAKyU,mBAAW,IAAAC,GAAhBA,EAAAtU,KAAAJ,MACF,CACA,SAAS2U,EAAe5T,GACtB,MAAM,GAAEC,EAAE,OAAEkS,GAAWnS,EACvB,IAAKmS,EACH,OAEF,MAAMsB,EAAmB/C,EAAejM,IAAIxE,GAC5CkS,EAAOxR,oBAAoB,QAAS8S,GACpC/C,EAAevD,OAAOlN,GACtBD,EAAUmS,OAAS,KACnBxB,EAAiBxD,OAAOlN,EAC1B,CAIA,MAAM4T,EAAgC,kCAChCC,EAA2BvU,IAC/BA,EAAMC,OAAOyM,cAAc,IAAIC,YAAY2H,EAA+B,CAAEzH,SAAS,MAEjF2H,EAAwCC,GAAUA,EAAMrT,oBAAoB,QAASmT,GAwD3F,SAASG,EAA2BjU,EAAWgU,EAAOpB,GAAO,IAAAsB,EAC3D,MAAM,aAAEZ,EAAY,SAAEtU,EAAQ,KAAE+T,EAAI,KAAE3N,EAAI,SAAE+O,GAAanU,EACzDgU,EAAMV,aAAeA,EACrBU,EAAMhV,SAAWA,EACjBgV,EAAM5O,KAAOA,EACb4O,EAAMG,SAAWA,EACjBH,EAAMI,UAAY,EACdrB,EACFiB,EAAM9T,aAAa,OAAQ6S,GAE3BiB,EAAMnT,gBAAgB,QAEpB4P,EAAYzQ,IACdgU,EAAMR,QAAUxT,EAAUwT,QAC1BQ,EAAMT,eAAiBvT,EAAUuT,eACjCS,EAAMpB,MAAQ5S,EAAUwT,QAAUZ,GAAS,KAAO,IAElDoB,EAAMpB,MAAQA,GAAS,GAEI,QAA7BsB,EAAAlU,EAAUqU,2BAAmB,IAAAH,GAA7BA,EAAA7U,KAAAW,EAAgCgU,GAChC,MAAMM,EAAsBzD,EAAuB7Q,EAAUC,IAC7D,GAAIqU,GAAuB,aAAcA,EACvC,IAAK,MAAMvE,KAAGwE,EAAAA,EAAAA,GAAA,GAAc,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOtC,UAC5B4C,EAAoB5C,SAAS3B,GAAOiE,EAAMtC,SAAS3B,EAGzD,CACA,MAAMyE,EAAsB7K,IAAmB,IAAlB,UAAE3J,GAAW2J,EAExC,OApFF,SAA6B3J,GAC3B,MAAM,GAAEC,EAAE,OAAEkS,EAAM,KAAE/M,EAAI,MAAEwN,GAAU5S,GAC9B,cAAEyO,GAAkBxO,EAC1B,GAAIyB,EAAAA,GACF,OAEF,MAAM+S,EAASxU,EAAGqS,iBAAiB,eAADxO,OAAgB0M,EAAuB,OACzE,IAAK2B,IAAW/M,EAKd,YAJAqP,EAAOhU,QAASuT,IACdD,EAAqCC,GACrCA,EAAMU,WAIV,MAAMC,EAASlR,MAAMwM,QAAQ2C,GAASA,EAAQ,CAACA,GACzCgC,EAAQ,GACRC,EAAuB,IAAI5J,IAajC,IAAI6J,EAZJL,EAAOhU,QAASuT,IACd,MAAMe,EAAaJ,EAAO3G,KAAMgH,GAE9BA,GAAOhB,EAAMpB,OAEG,MAAdmC,GACFF,EAAK1G,IAAI4G,GACTd,EAA2BjU,EAAWgU,EAAOe,IAE7CH,EAAMzS,KAAK6R,KAIfW,EAAOlU,QAASwU,IACd,GAAIJ,EAAKxN,IAAI4N,GACX,OAEF,IAAIjB,EAAQY,EAAMM,MACblB,IACHA,EAAQvF,EAAc0G,cAAc,SACpCnB,EAAM5K,WAAa,OACnB4K,EAAMoB,KAAO5E,GAEVsE,IACHA,EAAUrG,EAAc4G,0BAE1BP,EAAQQ,OAAOtB,GACfA,EAAMxT,iBAAiB,QAASsT,GAChCG,EAA2BjU,EAAWgU,EAAOiB,KAE3CH,GACF7U,EAAGqV,OAAOR,GAEZF,EAAMnU,QAASuT,IACbD,EAAqCC,GACrCA,EAAMU,UAEV,CA6BEL,CAAoBrU,IACbkB,EAAAA,EAAAA,IAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6BAAcoP,G,gFC3H3B,MAAMpN,EAAiCmS,CACrClS,EACAJ,KAEA,MAAMW,EAAWP,EAAOmS,KACxB,QAAI,IAAA5R,EACF,OAAO,EAET,IAAK,MAAMP,KAAOO,EAAA,KAAA6R,EAS4C,QAA3DA,EAAApS,EAA2DqS,YAAA,IAAAD,GAA3DA,EAAApW,KAAAgE,EACCJ,GAAA,GAIFG,EAA+BC,EAAKJ,EAEtC,QAAO,GASHD,EAAkCK,IACtC,IAAIJ,EAAQW,EACZ,EAAG,KAAA+R,EACD,QAAI,KAAC1S,EAASI,EAAIuS,MAChB,MAEFhS,EAAWX,EAAOuS,KAClB5R,EAASuJ,OAAO9J,GAChBA,EAAMJ,CACR,OAA4B,KAAnB,QAAmB0S,EAAnB/R,SAAA,IAAA+R,OAAA,EAAAA,EAAUxQ,QAGfjC,EAA6BG,IAGjC,IAAK,IAAIJ,EAASA,EAASI,EAAIuS,KAAWvS,EAAMJ,EAAQ,CACtD,IAAIW,EAAWX,EAAOuS,KACtB,QAAI,IAAA5R,EACFX,EAAOuS,KAA2B5R,EAAW,IAAIqH,SAC5C,GAAIrH,EAASyD,IAAIhE,GAGtB,MAEFO,EAASuK,IAAI9K,GACbgB,EAAqBpB,EACtB,GAUH,SAAS4S,EAAyCxS,QAAA,IAC5CpE,KAAKuW,MACPxS,EAA+B/D,MAC/BA,KAAK2W,KAAWvS,EAChBH,EAA0BjE,OAE1BA,KAAK2W,KAAWvS,CAEpB,CAuBA,SAASY,EAEPZ,GAEgB,IADhBJ,EAAAM,UAAAC,OAAA,QAAAsS,IAAAvS,UAAA,IAAAA,UAAA,GACAK,EAAAL,UAAAC,OAAA,QAAAsS,IAAAvS,UAAA,GAAAA,UAAA,GAAgB,EAEhB,MAAML,EAAQjE,KAAK8W,KACbF,EAAW5W,KAAKuW,KACtB,QAAI,IAAAK,GAA4C,IAAlBA,EAAS1Q,KAGvC,GAAIlC,EACF,GAAIQ,MAAMwM,QAAQ/M,GAIhB,IAAK,IAAIG,EAAIO,EAAeP,EAAIH,EAAMM,OAAQH,IAC5CD,EAA+BF,EAAMG,IAAA,GACrCL,EAA+BE,EAAMG,SAErB,MAATH,IAITE,EAA+BF,GAAA,GAC/BF,EAA+BE,SAGjCE,EAA+BnE,KAAMoE,EAEzC,CAKA,MAAMgB,EAAwBhB,IAAA,IAAA2S,EAAAC,EACvB5S,EAAkB9B,MAAQqC,EAAAA,GAASsS,QACnB,QAAlBF,EAAA3S,EAAkB8S,YAAA,IAAAH,IAAlB3S,EAAkB8S,KACjBlS,GACiB,QADjBgS,EACD5S,EAAkB+S,YAAA,IAAAH,IAAlB5S,EAAkB+S,KAA8BP,KAqB/C,MAAgBtR,UAAuBtB,EAAAA,GAA7ClB,WAAAA,GAAA,SAAAwB,WAYW,KAAwBiS,UAAA,CAgFlC,CAzEUa,IAAAA,CACPhT,EACAJ,EACAW,GAEA5B,MAAMqU,KAAahT,EAAMJ,EAAQW,GACjCV,EAA0BjE,MAC1BA,KAAKqX,YAAcjT,EAAKkT,IACzB,CAcQb,IAAAA,CACPrS,GACsB,IAAAmT,EAAAC,EAAA,IAAtBxT,IAAAM,UAAAC,OAAA,QAAAsS,IAAAvS,UAAA,KAAAA,UAAA,GAEIF,IAAgBpE,KAAKqX,cACvBrX,KAAKqX,YAAcjT,EACfA,EACG,QADHmT,EACFvX,KAAKyX,mBAAA,IAAAF,GAALA,EAAAnX,KAAAJ,MAEK,QAFAwX,EAELxX,KAAK0X,oBAAA,IAAAF,GAALA,EAAApX,KAAAJ,OAGAgE,IACFG,EAA+BnE,KAAMoE,GACrCL,EAA+B/D,MAElC,CAYD2X,QAAAA,CAAS3T,GACP,IAAII,EAAAA,EAAAA,IAAmBpE,KAAK4X,MAC1B5X,KAAK4X,KAAOC,KAAW7T,EAAOhE,UACzB,CAML,MAAMoE,EAAY,IAAKpE,KAAK4X,KAAOd,MACnC1S,EAAUpE,KAAK8X,MAAqB9T,EACnChE,KAAK4X,KAAyBC,KAAWzT,EAAWpE,KAAM,EAC5D,CACF,CAQS0X,YAAAA,GAAiB,CACjBD,WAAAA,GAAgB,ECtXf,MAAA9S,EAAYoT,IAAmB,IAAInB,EAKhD,MAAMA,GAmBN,MAAM7S,EAAmC,IAAI4H,QAqHhC3G,GAAMb,EAAAA,EAAAA,IA9GnB,cAA2BC,EAKzByF,MAAAA,CAAOzF,GACL,OAAOJ,EAAAA,EACR,CAEQgU,MAAAA,CAAO5T,EAAArC,GAAoB,IAAAkW,EAAA,IAAA9T,GAAApC,EAClC,MAAM4C,EAAaR,IAAQnE,KAAKkY,EAahC,OAZIvT,QAAA,IAAc3E,KAAKkY,GAGrBlY,KAAKmY,QAAA,IAEHxT,GAAc3E,KAAKoY,KAAuBpY,KAAKqY,MAGjDrY,KAAKkY,EAAO/T,EACZnE,KAAKsY,GAAgB,QAAhBL,EAAW7T,EAAK5B,eAAA,IAAAyV,OAAA,EAALA,EAAcM,KAC9BvY,KAAKmY,GAAiBnY,KAAKqY,GAAWjU,EAAK9C,UAEtC0C,EAAAA,EACR,CAEOmU,EAAAA,CAAgBnU,GAItB,GAHKhE,KAAKqX,cACRrT,OAAA,GAEuB,mBAAdhE,KAAKkY,EAAqB,KAAAM,EAUnC,MAAMpU,EAAe,QAAfoU,EAAUxY,KAAKsY,UAAA,IAAAE,EAAAA,EAAYC,WACjC,IAAItU,EACFJ,EAAiCyB,IAAIpB,QAAA,IACnCD,IACFA,EAAyB,IAAIwH,QAC7B5H,EAAiC2B,IAAItB,EAASD,SAAA,IAE5CA,EAAuBqB,IAAIxF,KAAKkY,IAClClY,KAAKkY,EAAK9X,KAAKJ,KAAKsY,QAAA,GAEtBnU,EAAuBuB,IAAI1F,KAAKkY,EAAMlU,QAAA,IAElCA,GACFhE,KAAKkY,EAAK9X,KAAKJ,KAAKsY,GAAUtU,EAEjC,MACEhE,KAAKkY,EAAsBvE,MAAQ3P,CAEvC,CAED,MAAAoU,GAAY,IAAAM,EAAAC,EAAAC,EACV,MAA4B,mBAAd5Y,KAAKkY,EAES,QAFTQ,EACf3U,EACGyB,IAAS,QAATmT,EAAI3Y,KAAKsY,UAAA,IAAAK,EAAAA,EAAYF,mBAAA,IAAAC,OAAA,EADxBA,EAEIlT,IAAIxF,KAAKkY,GACR,QADQU,EACb5Y,KAAKkY,SAAA,IAAAU,OAAA,EAALA,EAAWjF,KAChB,CAEQ+D,YAAAA,GAKH1X,KAAKoY,KAAuBpY,KAAKqY,IACnCrY,KAAKmY,QAAA,EAER,CAEQV,WAAAA,GAGPzX,KAAKmY,GAAgBnY,KAAKqY,GAC3B,G,oDCxHH,SAASQ,EAAaC,GACpB,MAA0B,MAAnBA,EAAyB,IAAM,GACxC,CASAnQ,eAAeoQ,EAAmBhY,SAC1BA,EAAUuO,yBACVvO,EAAUiY,cAClB,C","sources":["../node_modules/@esri/calcite-components/dist/chunks/interactive.js","../node_modules/@esri/calcite-components/dist/chunks/observers.js","../node_modules/lit-html/src/static.ts","../node_modules/@esri/calcite-components/dist/components/calcite-icon/customElement.js","../node_modules/@esri/calcite-components/dist/chunks/label.js","../node_modules/@esri/calcite-components/dist/chunks/logger.js","../node_modules/@esri/calcite-components/dist/chunks/form.js","../node_modules/lit-html/src/async-directive.ts","../node_modules/lit-html/src/directives/ref.ts","../node_modules/@esri/calcite-components/dist/chunks/component.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { html } from \"lit-html\";\nimport { safeClassMap } from \"@arcgis/lumina\";\nfunction interceptedClick() {\n  const { disabled } = this;\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\nfunction onPointerDown(event) {\n  const interactiveElement = event.target;\n  if (interactiveElement.disabled) {\n    event.preventDefault();\n  }\n}\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\nfunction onNonBubblingWhenDisabledMouseEvent(event) {\n  const interactiveElement = event.target;\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\nconst captureOnlyOptions = { capture: true };\nfunction updateHostInteraction(component) {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n    if (component.el.contains(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    blockInteraction(component);\n    return;\n  }\n  restoreInteraction(component);\n  component.el.removeAttribute(\"aria-disabled\");\n}\nfunction blockInteraction(component) {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\nfunction addInteractionListeners(element) {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) => element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nfunction restoreInteraction(component) {\n  delete component.el.click;\n  removeInteractionListeners(component.el);\n}\nfunction removeInteractionListeners(element) {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) => element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nconst CSS = {\n  container: \"interaction-container\"\n};\nconst InteractiveContainer = ({ children, disabled }) => html`<div class=${safeClassMap(CSS.container)} .inert=${disabled}>${children}</div>`;\nexport {\n  InteractiveContainer as I,\n  updateHostInteraction as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { isServer } from \"lit\";\nfunction createObserver(type, callback, options) {\n  if (isServer) {\n    return void 0;\n  }\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return function() {\n    return type === \"intersection\" ? window.IntersectionObserver : type === \"mutation\" ? ExtendedMutationObserver : window.ResizeObserver;\n  }();\n}\nexport {\n  createObserver as c\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\n\nimport {\n  html as coreHtml,\n  svg as coreSvg,\n  mathml as coreMathml,\n  TemplateResult,\n} from './lit-html.js';\n\nexport interface StaticValue {\n  /** The value to interpolate as-is into the template. */\n  _$litStatic$: string;\n\n  /**\n   * A value that can't be decoded from ordinary JSON, make it harder for\n   * an attacker-controlled data that goes through JSON.parse to produce a valid\n   * StaticValue.\n   */\n  r: typeof brand;\n}\n\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value: unknown): string | undefined => {\n  if ((value as Partial<StaticValue>)?.r !== brand) {\n    return undefined;\n  }\n  return (value as Partial<StaticValue>)?.['_$litStatic$'];\n};\n\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value: string): StaticValue => ({\n  ['_$litStatic$']: value,\n  r: brand,\n});\n\nconst textFromStatic = (value: StaticValue) => {\n  if (value['_$litStatic$'] !== undefined) {\n    return value['_$litStatic$'];\n  } else {\n    throw new Error(\n      `Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`\n    );\n  }\n};\n\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): StaticValue => ({\n  ['_$litStatic$']: values.reduce(\n    (acc, v, idx) => acc + textFromStatic(v as StaticValue) + strings[idx + 1],\n    strings[0]\n  ) as string,\n  r: brand,\n});\n\nconst stringsCache = new Map<string, TemplateStringsArray>();\n\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic =\n  (coreTag: typeof coreHtml | typeof coreSvg | typeof coreMathml) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult => {\n    const l = values.length;\n    let staticValue: string | undefined;\n    let dynamicValue: unknown;\n    const staticStrings: Array<string> = [];\n    const dynamicValues: Array<unknown> = [];\n    let i = 0;\n    let hasStatics = false;\n    let s: string;\n\n    while (i < l) {\n      s = strings[i];\n      // Collect any unsafeStatic values, and their following template strings\n      // so that we treat a run of template strings and unsafe static values as\n      // a single template string.\n      while (\n        i < l &&\n        ((dynamicValue = values[i]),\n        (staticValue = unwrapStaticValue(dynamicValue))) !== undefined\n      ) {\n        s += staticValue + strings[++i];\n        hasStatics = true;\n      }\n      // If the last value is static, we don't need to push it.\n      if (i !== l) {\n        dynamicValues.push(dynamicValue);\n      }\n      staticStrings.push(s);\n      i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n      staticStrings.push(strings[l]);\n    }\n\n    if (hasStatics) {\n      const key = staticStrings.join('$$lit$$');\n      strings = stringsCache.get(key)!;\n      if (strings === undefined) {\n        // Beware: in general this pattern is unsafe, and doing so may bypass\n        // lit's security checks and allow an attacker to execute arbitrary\n        // code and inject arbitrary content.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (staticStrings as any).raw = staticStrings;\n        stringsCache.set(\n          key,\n          (strings = staticStrings as unknown as TemplateStringsArray)\n        );\n      }\n      values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const mathml = withStatic(coreMathml);\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { g as getAssetPath, c as customElement } from \"../../chunks/runtime.js\";\nimport { isServer, nothing, svg, html } from \"lit\";\nimport { LitElement, safeClassMap } from \"@arcgis/lumina\";\nimport { g as getElementDir, t as toAriaBoolean } from \"../../chunks/dom.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { l as logger } from \"../../chunks/logger.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  flipRtl: \"flip-rtl\"\n};\nconst iconCache = {};\nconst requestCache = {};\nconst scaleToPx = {\n  s: 16,\n  m: 24,\n  l: 32\n};\nfunction generateIconId({ icon, scale }) {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\nasync function fetchIcon(props) {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`)).then((resp) => resp.json()).catch(() => {\n      logger.error(`${props.icon} (${props.scale}) icon failed to load`);\n      return \"\";\n    });\n  }\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n  return path;\n}\nfunction getCachedIconData(props) {\n  return getCachedIconDataByKey(generateIconId(props));\n}\nfunction getCachedIconDataByKey(id) {\n  return iconCache[id];\n}\nfunction normalizeIconName(name) {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n    name = parts.map((part, partIndex) => {\n      return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n        const isFirstCharInName = partIndex === 0 && offset === 0;\n        if (isFirstCharInName) {\n          return match;\n        }\n        return match.toUpperCase();\n      });\n    }).join(\"\");\n  }\n  return numberLeadingName ? `i${name}` : name;\n}\nconst styles = css`:host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Icon extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.visible = false;\n    this.flipRtl = false;\n    this.icon = null;\n    this.preload = false;\n    this.scale = \"m\";\n  }\n  static {\n    this.properties = { pathData: [16, {}, { state: true }], visible: [16, {}, { state: true }], flipRtl: [7, {}, { reflect: true, type: Boolean }], icon: [3, {}, { reflect: true }], preload: [7, {}, { reflect: true, type: Boolean }], scale: [3, {}, { reflect: true }], textLabel: 1 };\n  }\n  static {\n    this.styles = styles;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.preload) {\n      this.visible = true;\n      this.loadIconPathData();\n      return;\n    }\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"icon\") && (this.hasUpdated || this.icon !== null) || changes.has(\"scale\") && (this.hasUpdated || this.scale !== \"m\")) {\n      this.loadIconPathData();\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n  async loadIconPathData() {\n    const { icon, scale, visible } = this;\n    if (isServer || !icon || !visible) {\n      return;\n    }\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || await fetchIcon(fetchIconProps);\n    if (icon !== this.icon) {\n      return;\n    }\n    this.pathData = pathData;\n  }\n  waitUntilVisible(callback) {\n    this.intersectionObserver = createObserver(\"intersection\", (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.intersectionObserver.disconnect();\n          this.intersectionObserver = null;\n          callback();\n        }\n      });\n    }, { rootMargin: \"50px\" });\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n    this.intersectionObserver.observe(this.el);\n  }\n  render() {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    this.el.ariaHidden = toAriaBoolean(!semantic);\n    this.el.ariaLabel = semantic ? textLabel : null;\n    this.el.role = semantic ? \"img\" : null;\n    return html`<svg aria-hidden=true class=${safeClassMap({\n      [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n      svg: true\n    })} fill=currentColor height=100% viewBox=${`0 0 ${size} ${size}`} width=100% xmlns=http://www.w3.org/2000/svg>${paths.map((path) => typeof path === \"string\" ? svg`<path d=${path ?? nothing} />` : svg`<path d=${path.d ?? nothing} opacity=${(\"opacity\" in path ? path.opacity : 1) ?? nothing} />`)}</svg>`;\n  }\n}\ncustomElement(\"calcite-icon\", Icon);\nexport {\n  Icon\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { q as queryElementRoots, l as closestElementCrossShadowBoundary, m as isBefore } from \"./dom.js\";\nconst labelClickEvent = \"calciteInternalLabelClick\";\nconst labelConnectedEvent = \"calciteInternalLabelConnected\";\nconst labelDisconnectedEvent = \"calciteInternalLabelDisconnected\";\nconst labelTagName = \"calcite-label\";\nconst labelToLabelables = /* @__PURE__ */ new WeakMap();\nconst onLabelClickMap = /* @__PURE__ */ new WeakMap();\nconst onLabelConnectedMap = /* @__PURE__ */ new WeakMap();\nconst onLabelDisconnectedMap = /* @__PURE__ */ new WeakMap();\nconst unlabeledComponents = /* @__PURE__ */ new Set();\nconst findLabelForComponent = (componentEl) => {\n  const { id } = componentEl;\n  const forLabel = id && queryElementRoots(componentEl, { selector: `${labelTagName}[for=\"${id}\"]` });\n  if (forLabel) {\n    return forLabel;\n  }\n  const parentLabel = closestElementCrossShadowBoundary(componentEl, labelTagName);\n  if (!parentLabel || // labelable components within other custom elements are not considered labelable\n  hasAncestorCustomElements(parentLabel, componentEl)) {\n    return null;\n  }\n  return parentLabel;\n};\nfunction hasAncestorCustomElements(label, componentEl) {\n  let traversedElements;\n  const customElementAncestorCheckEventType = \"custom-element-ancestor-check\";\n  const listener = (event) => {\n    event.stopImmediatePropagation();\n    const composedPath = event.composedPath();\n    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));\n  };\n  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });\n  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));\n  label.removeEventListener(customElementAncestorCheckEventType, listener);\n  const ancestorCustomElements = traversedElements.filter((el) => el !== componentEl && el !== label).filter((el) => el.tagName?.includes(\"-\"));\n  return ancestorCustomElements.length > 0;\n}\nfunction connectLabel(component) {\n  if (!component) {\n    return;\n  }\n  const labelEl = findLabelForComponent(component.el);\n  if (onLabelClickMap.has(labelEl) && labelEl === component.labelEl || !labelEl && unlabeledComponents.has(component)) {\n    return;\n  }\n  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);\n  if (labelEl) {\n    component.labelEl = labelEl;\n    const labelables = labelToLabelables.get(labelEl) || [];\n    labelables.push(component);\n    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));\n    if (!onLabelClickMap.has(component.labelEl)) {\n      onLabelClickMap.set(component.labelEl, onLabelClick);\n      component.labelEl.addEventListener(labelClickEvent, onLabelClick);\n    }\n    unlabeledComponents.delete(component);\n    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);\n    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);\n  } else if (!unlabeledComponents.has(component)) {\n    boundOnLabelDisconnected();\n    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  }\n}\nfunction disconnectLabel(component) {\n  if (!component) {\n    return;\n  }\n  unlabeledComponents.delete(component);\n  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  onLabelConnectedMap.delete(component);\n  onLabelDisconnectedMap.delete(component);\n  if (!component.labelEl) {\n    return;\n  }\n  const labelables = labelToLabelables.get(component.labelEl);\n  if (labelables.length === 1) {\n    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));\n    onLabelClickMap.delete(component.labelEl);\n  }\n  labelToLabelables.set(\n    component.labelEl,\n    labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder)\n  );\n  component.labelEl = null;\n}\nfunction sortByDOMOrder(a, b) {\n  return isBefore(a.el, b.el) ? -1 : 1;\n}\nfunction getLabelText(component) {\n  return component.label || component.labelEl?.textContent?.trim() || \"\";\n}\nfunction onLabelClick(event) {\n  const labelClickTarget = event.detail.sourceEvent.target;\n  const labelables = labelToLabelables.get(this);\n  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);\n  const labelableChildClicked = labelables.includes(clickedLabelable);\n  if (labelableChildClicked) {\n    return;\n  }\n  const firstLabelable = labelables[0];\n  if (firstLabelable.disabled) {\n    return;\n  }\n  firstLabelable.onLabelClick(event);\n}\nfunction onLabelConnected() {\n  if (unlabeledComponents.has(this)) {\n    connectLabel(this);\n  }\n}\nfunction onLabelDisconnected() {\n  unlabeledComponents.add(this);\n  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);\n  onLabelConnectedMap.set(this, boundOnLabelConnected);\n  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);\n}\nasync function associateExplicitLabelToUnlabeledComponent(label) {\n  await label.componentOnReady();\n  const alreadyLabeled = labelToLabelables.has(label);\n  if (alreadyLabeled) {\n    return;\n  }\n  const forComponentEl = label.ownerDocument?.getElementById(label.for);\n  if (!forComponentEl) {\n    return;\n  }\n  requestAnimationFrame(() => {\n    for (const labelable of unlabeledComponents) {\n      if (labelable.el === forComponentEl) {\n        connectLabel(labelable);\n        break;\n      }\n    }\n  });\n}\nexport {\n  associateExplicitLabelToUnlabeledComponent as a,\n  labelDisconnectedEvent as b,\n  connectLabel as c,\n  disconnectLabel as d,\n  getLabelText as g,\n  labelConnectedEvent as l\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logLevel } from \"./runtime.js\";\nconst loggedDeprecations = /* @__PURE__ */ new Set();\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10\n};\nfunction willLog(level) {\n  return logLevels[level] >= logLevels[logLevel];\n}\nfunction forwardToConsole(level, ...data) {\n  if (!willLog(level)) {\n    return;\n  }\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\nlet listFormatter;\nconst logger = {\n  debug: (message) => forwardToConsole(\"debug\", message),\n  info: (message) => forwardToConsole(\"info\", message),\n  warn: (message) => forwardToConsole(\"warn\", message),\n  error: (message) => forwardToConsole(\"error\", message),\n  trace: (message) => forwardToConsole(\"trace\", message),\n  deprecated\n};\nfunction deprecated(context, { component, name, suggested, removalVersion }) {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n  loggedDeprecations.add(key);\n  const multiSuggestions = Array.isArray(suggested);\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n  forwardToConsole(\"warn\", message);\n}\nexport {\n  logger as l\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { html, isServer } from \"lit\";\nimport { q as queryElementRoots, l as closestElementCrossShadowBoundary } from \"./dom.js\";\nconst componentsWithInputEvent = [\n  \"calcite-input\",\n  \"calcite-input-number\",\n  \"calcite-input-text\",\n  \"calcite-text-area\"\n];\nfunction getClearValidationEventName(componentTag) {\n  const componentTagCamelCase = componentTag.split(\"-\").map((part, index) => index === 0 ? part : `${part[0].toUpperCase()}${part.slice(1)}`).join(\"\");\n  const clearValidationEvent = `${componentTagCamelCase}${componentsWithInputEvent.includes(componentTag) ? \"Input\" : \"Change\"}`;\n  return clearValidationEvent;\n}\nconst hiddenFormInputSlotName = \"hidden-form-input\";\nfunction isCheckable(component) {\n  return \"checked\" in component;\n}\nconst onFormResetMap = /* @__PURE__ */ new WeakMap();\nconst formComponentSet = /* @__PURE__ */ new WeakSet();\nfunction hasRegisteredFormComponentParent(form, formComponentEl) {\n  const hasParentComponentWithFormIdSet = closestElementCrossShadowBoundary(formComponentEl.parentElement, \"[form]\");\n  if (hasParentComponentWithFormIdSet) {\n    return true;\n  }\n  const formComponentRegisterEventName = \"calciteInternalFormComponentRegister\";\n  let hasRegisteredFormComponentParent2 = false;\n  form.addEventListener(formComponentRegisterEventName, (event) => {\n    hasRegisteredFormComponentParent2 = event.composedPath().some((element) => formComponentSet.has(element));\n    event.stopPropagation();\n  }, { once: true });\n  formComponentEl.dispatchEvent(new CustomEvent(formComponentRegisterEventName, {\n    bubbles: true,\n    composed: true\n  }));\n  return hasRegisteredFormComponentParent2;\n}\nfunction displayValidationMessage(component, { status, message, icon }) {\n  if (\"status\" in component) {\n    component.status = status;\n  }\n  if (\"validationIcon\" in component && typeof component.validationIcon !== \"string\") {\n    component.validationIcon = icon;\n  }\n  if (\"validationMessage\" in component && !component.validationMessage) {\n    component.validationMessage = message;\n  }\n}\nfunction getValidationComponent(el) {\n  if (el.nodeName === \"CALCITE-RADIO-BUTTON\") {\n    return closestElementCrossShadowBoundary(el, \"calcite-radio-button-group\");\n  }\n  return el;\n}\nconst invalidEvent = new CustomEvent(\"calciteInvalid\", { bubbles: true, composed: true });\nfunction invalidHandler(event) {\n  const hiddenInput = event?.target;\n  const hiddenInputMessage = hiddenInput?.validationMessage;\n  const formComponent = getValidationComponent(hiddenInput?.parentElement);\n  if (!formComponent) {\n    return;\n  }\n  const componentTag = formComponent?.nodeName?.toLowerCase();\n  const componentTagParts = componentTag?.split(\"-\");\n  if (componentTagParts.length < 2 || componentTagParts[0] !== \"calcite\") {\n    return;\n  }\n  event?.preventDefault();\n  if (\"validity\" in formComponent) {\n    formComponent.validity = hiddenInput?.validity;\n  }\n  formComponent.dispatchEvent(invalidEvent);\n  displayValidationMessage(formComponent, {\n    message: hiddenInputMessage,\n    icon: true,\n    status: \"invalid\"\n  });\n  const clearValidationEvent = getClearValidationEventName(componentTag);\n  formComponent.addEventListener(clearValidationEvent, () => {\n    if (\"status\" in formComponent) {\n      formComponent.status = \"idle\";\n    }\n    if (\"validationIcon\" in formComponent && (formComponent.validationIcon === \"\" || formComponent.validationIcon === true)) {\n      formComponent.validationIcon = false;\n    }\n    if (\"validationMessage\" in formComponent && formComponent.validationMessage === hiddenInputMessage) {\n      formComponent.validationMessage = \"\";\n    }\n    if (\"validity\" in formComponent) {\n      formComponent.validity = hiddenInput?.validity;\n    }\n  }, { once: true });\n}\nfunction submitForm(component) {\n  const { formEl } = component;\n  if (!formEl) {\n    return false;\n  }\n  formEl.addEventListener(\"invalid\", invalidHandler, true);\n  formEl.requestSubmit();\n  formEl.removeEventListener(\"invalid\", invalidHandler, true);\n  requestAnimationFrame(() => {\n    const invalidEls = formEl.querySelectorAll(\"[status=invalid]\");\n    for (const el of invalidEls) {\n      if (el?.validationMessage) {\n        el?.setFocus();\n        break;\n      }\n    }\n  });\n  return true;\n}\nfunction resetForm(component) {\n  component.formEl?.reset();\n}\nfunction connectForm(component) {\n  const { el, value } = component;\n  const associatedForm = findAssociatedForm(component);\n  if (!associatedForm || hasRegisteredFormComponentParent(associatedForm, el)) {\n    return;\n  }\n  component.formEl = associatedForm;\n  component.defaultValue = value;\n  if (isCheckable(component)) {\n    component.defaultChecked = component.checked;\n  }\n  const boundOnFormReset = onFormReset.bind(component);\n  associatedForm.addEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.set(component.el, boundOnFormReset);\n  formComponentSet.add(el);\n}\nfunction findAssociatedForm(component) {\n  const { el, form } = component;\n  return form ? queryElementRoots(el, { id: form }) : closestElementCrossShadowBoundary(el, \"form\");\n}\nfunction onFormReset() {\n  if (\"status\" in this) {\n    this.status = \"idle\";\n  }\n  if (\"validationIcon\" in this) {\n    this.validationIcon = false;\n  }\n  if (\"validationMessage\" in this) {\n    this.validationMessage = \"\";\n  }\n  if (isCheckable(this)) {\n    this.checked = this.defaultChecked;\n    return;\n  }\n  this.value = this.defaultValue;\n  this.onFormReset?.();\n}\nfunction disconnectForm(component) {\n  const { el, formEl } = component;\n  if (!formEl) {\n    return;\n  }\n  const boundOnFormReset = onFormResetMap.get(el);\n  formEl.removeEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.delete(el);\n  component.formEl = null;\n  formComponentSet.delete(el);\n}\nfunction afterConnectDefaultValueSet(component, value) {\n  component.defaultValue = value;\n}\nconst internalHiddenInputInputEvent = \"calciteInternalHiddenInputInput\";\nconst hiddenInputInputHandler = (event) => {\n  event.target.dispatchEvent(new CustomEvent(internalHiddenInputInputEvent, { bubbles: true }));\n};\nconst removeHiddenInputChangeEventListener = (input) => input.removeEventListener(\"input\", hiddenInputInputHandler);\nfunction syncHiddenFormInput(component) {\n  const { el, formEl, name, value } = component;\n  const { ownerDocument } = el;\n  if (isServer) {\n    return;\n  }\n  const inputs = el.querySelectorAll(`input[slot=\"${hiddenFormInputSlotName}\"]`);\n  if (!formEl || !name) {\n    inputs.forEach((input) => {\n      removeHiddenInputChangeEventListener(input);\n      input.remove();\n    });\n    return;\n  }\n  const values = Array.isArray(value) ? value : [value];\n  const extra = [];\n  const seen = /* @__PURE__ */ new Set();\n  inputs.forEach((input) => {\n    const valueMatch = values.find((val) => (\n      /* intentional non-strict equality check */\n      val == input.value\n    ));\n    if (valueMatch != null) {\n      seen.add(valueMatch);\n      defaultSyncHiddenFormInput(component, input, valueMatch);\n    } else {\n      extra.push(input);\n    }\n  });\n  let docFrag;\n  values.forEach((value2) => {\n    if (seen.has(value2)) {\n      return;\n    }\n    let input = extra.pop();\n    if (!input) {\n      input = ownerDocument.createElement(\"input\");\n      input.ariaHidden = \"true\";\n      input.slot = hiddenFormInputSlotName;\n    }\n    if (!docFrag) {\n      docFrag = ownerDocument.createDocumentFragment();\n    }\n    docFrag.append(input);\n    input.addEventListener(\"input\", hiddenInputInputHandler);\n    defaultSyncHiddenFormInput(component, input, value2);\n  });\n  if (docFrag) {\n    el.append(docFrag);\n  }\n  extra.forEach((input) => {\n    removeHiddenInputChangeEventListener(input);\n    input.remove();\n  });\n}\nfunction defaultSyncHiddenFormInput(component, input, value) {\n  const { defaultValue, disabled, form, name, required } = component;\n  input.defaultValue = defaultValue;\n  input.disabled = disabled;\n  input.name = name;\n  input.required = required;\n  input.tabIndex = -1;\n  if (form) {\n    input.setAttribute(\"form\", form);\n  } else {\n    input.removeAttribute(\"form\");\n  }\n  if (isCheckable(component)) {\n    input.checked = component.checked;\n    input.defaultChecked = component.defaultChecked;\n    input.value = component.checked ? value || \"on\" : \"\";\n  } else {\n    input.value = value || \"\";\n  }\n  component.syncHiddenFormInput?.(input);\n  const validationComponent = getValidationComponent(component.el);\n  if (validationComponent && \"validity\" in validationComponent) {\n    for (const key in { ...input?.validity }) {\n      validationComponent.validity[key] = input.validity[key];\n    }\n  }\n}\nconst HiddenFormInputSlot = ({ component }) => {\n  syncHiddenFormInput(component);\n  return html`<slot name=${hiddenFormInputSlotName}></slot>`;\n};\nexport {\n  HiddenFormInputSlot as H,\n  afterConnectDefaultValueSet as a,\n  connectForm as c,\n  disconnectForm as d,\n  findAssociatedForm as f,\n  internalHiddenInputInputEvent as i,\n  resetForm as r,\n  submitForm as s\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logger } from \"./logger.js\";\nfunction getIconScale(componentScale) {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\nfunction warnIfMissingRequiredProp(component, newProp, deprecatedProp) {\n  if (!component[newProp] && !component[deprecatedProp]) {\n    logger.warn(`[${component.el.localName}] \"${newProp.toString()}\" or \"${deprecatedProp.toString()}\" is required.`);\n  }\n}\nfunction isHidden(el) {\n  return el.hidden || el.itemHidden;\n}\nasync function componentFocusable(component) {\n  await component.componentOnReady();\n  await component.updateComplete;\n}\nexport {\n  componentFocusable as c,\n  getIconScale as g,\n  isHidden as i,\n  warnIfMissingRequiredProp as w\n};\n"],"names":["interceptedClick","disabled","this","HTMLElement","prototype","click","call","onPointerDown","event","target","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","component","el","setAttribute","contains","document","activeElement","blur","element","addEventListener","forEach","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","CSS","InteractiveContainer","_ref","children","html","_templateObject","_taggedTemplateLiteral","safeClassMap","createObserver","type","callback","options","isServer","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","observe","push","unobserve","newObservedEntries","filter","observed","takeRecords","disconnect","IntersectionObserver","ResizeObserver","getObserver","a","Symbol","for","o","t","r","_$litStatic$","s","i","_len","arguments","length","Array","_key","reduce","e","Error","concat","l","Map","n","_len2","_key2","u","c","$","f","join","get","raw","set","iconCache","requestCache","scaleToPx","m","generateIconId","icon","scale","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","normalizeIconName","filled","iconName","substring","getCachedIconDataByKey","id","styles","css","Icon","LitElement","visible","flipRtl","preload","connectedCallback","loadIconPathData","waitUntilVisible","willUpdate","changes","has","hasUpdated","disconnectedCallback","_this$intersectionObs","intersectionObserver","fetchIconProps","pathData","async","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","logger","error","path","fetchIcon","entries","entry","isIntersecting","rootMargin","render","textLabel","dir","getElementDir","semantic","paths","ariaHidden","toAriaBoolean","ariaLabel","role","_templateObject2","svg","_path$d","_ref2","_templateObject3","nothing","_templateObject4","d","opacity","_Icon","properties","state","reflect","Boolean","customElement","labelClickEvent","labelConnectedEvent","labelDisconnectedEvent","labelTagName","labelToLabelables","WeakMap","onLabelClickMap","onLabelConnectedMap","onLabelDisconnectedMap","unlabeledComponents","Set","findLabelForComponent","componentEl","forLabel","queryElementRoots","selector","parentLabel","closestElementCrossShadowBoundary","label","traversedElements","customElementAncestorCheckEventType","listener","composedPath","slice","indexOf","once","dispatchEvent","CustomEvent","composed","bubbles","ancestorCustomElements","_el$tagName","tagName","includes","hasAncestorCustomElements","connectLabel","labelEl","boundOnLabelDisconnected","onLabelDisconnected","bind","labelables","sort","sortByDOMOrder","onLabelClick","delete","disconnectLabel","labelable","b","isBefore","getLabelText","_component$labelEl","textContent","trim","labelClickTarget","detail","sourceEvent","clickedLabelable","find","firstLabelable","onLabelConnected","add","boundOnLabelConnected","associateExplicitLabelToUnlabeledComponent","_label$ownerDocument","componentOnReady","forComponentEl","ownerDocument","getElementById","requestAnimationFrame","loggedDeprecations","logLevels","trace","debug","info","warn","off","forwardToConsole","level","logLevel","willLog","data","console","listFormatter","message","deprecated","context","suggested","removalVersion","key","multiSuggestions","isArray","Intl","ListFormat","style","format","suggestion","componentsWithInputEvent","hiddenFormInputSlotName","isCheckable","onFormResetMap","formComponentSet","WeakSet","getValidationComponent","nodeName","invalidEvent","invalidHandler","_formComponent$nodeNa","hiddenInput","hiddenInputMessage","validationMessage","formComponent","parentElement","componentTag","toLowerCase","componentTagParts","validity","status","validationIcon","displayValidationMessage","clearValidationEvent","componentTagCamelCase","index","getClearValidationEventName","submitForm","formEl","requestSubmit","invalidEls","querySelectorAll","setFocus","resetForm","_component$formEl","reset","connectForm","value","associatedForm","findAssociatedForm","form","formComponentEl","formComponentRegisterEventName","hasRegisteredFormComponentParent2","some","stopPropagation","hasRegisteredFormComponentParent","defaultValue","defaultChecked","checked","boundOnFormReset","onFormReset","_this$onFormReset","disconnectForm","internalHiddenInputInputEvent","hiddenInputInputHandler","removeHiddenInputChangeEventListener","input","defaultSyncHiddenFormInput","_component$syncHidden","required","tabIndex","syncHiddenFormInput","validationComponent","_objectSpread","HiddenFormInputSlot","inputs","remove","values","extra","seen","docFrag","valueMatch","val","value2","pop","createElement","slot","createDocumentFragment","append","notifyChildrenConnectedChanged","_$AN","_i$_$AO","_$AO","_e","_$AM","h","undefined","_$AH","_i$_$AP","_i$_$AQ","CHILD","_$AP","_$AQ","_$AT","isConnected","_$AU","_this$reconnected","_this$disconnected","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","createRef","update","_i$options","G","rt","lt","ct","ht","host","_this$ht","globalThis","_o$get","_this$ht2","_this$G","getIconScale","componentScale","componentFocusable","updateComplete"],"sourceRoot":""}