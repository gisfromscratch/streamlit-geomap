{"version":3,"file":"static/js/5099.fbc11e45.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/chunks/Heading.js","../node_modules/lit-html/src/static.ts","../node_modules/@esri/calcite-components/dist/chunks/key.js","../node_modules/@esri/calcite-components/dist/chunks/resources2.js","../node_modules/tabbable/src/index.js","../node_modules/focus-trap/index.js","../node_modules/@esri/calcite-components/dist/chunks/useFocusTrap.js","../node_modules/@esri/calcite-components/dist/chunks/FloatingArrow.js","../node_modules/@esri/calcite-components/dist/components/calcite-popover/customElement.js","../node_modules/@esri/calcite-components/dist/chunks/array.js","../node_modules/@esri/calcite-components/dist/components/calcite-action-menu/customElement.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport { unsafeStatic, literal, html } from \"lit-html/static.js\";\nimport { safeClassMap } from \"@arcgis/lumina\";\nfunction constrainHeadingLevel(level) {\n  return Math.min(Math.max(Math.ceil(level), 1), 6);\n}\nconst Heading = ({ children, ...props }) => {\n  const DynamicHtmlTag = props.level ? unsafeStatic(`h${props.level}`) : literal`div`;\n  return keyed(props.key, html`<${DynamicHtmlTag} class=${safeClassMap(props.class)}>${children}</${DynamicHtmlTag}>`);\n};\nexport {\n  Heading as H,\n  constrainHeadingLevel as c\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// Any new exports need to be added to the export statement in\n// `packages/lit/src/index.all.ts`.\n\nimport {\n  html as coreHtml,\n  svg as coreSvg,\n  mathml as coreMathml,\n  TemplateResult,\n} from './lit-html.js';\n\nexport interface StaticValue {\n  /** The value to interpolate as-is into the template. */\n  _$litStatic$: string;\n\n  /**\n   * A value that can't be decoded from ordinary JSON, make it harder for\n   * an attacker-controlled data that goes through JSON.parse to produce a valid\n   * StaticValue.\n   */\n  r: typeof brand;\n}\n\n/**\n * Prevents JSON injection attacks.\n *\n * The goals of this brand:\n *   1) fast to check\n *   2) code is small on the wire\n *   3) multiple versions of Lit in a single page will all produce mutually\n *      interoperable StaticValues\n *   4) normal JSON.parse (without an unusual reviver) can not produce a\n *      StaticValue\n *\n * Symbols satisfy (1), (2), and (4). We use Symbol.for to satisfy (3), but\n * we don't care about the key, so we break ties via (2) and use the empty\n * string.\n */\nconst brand = Symbol.for('');\n\n/** Safely extracts the string part of a StaticValue. */\nconst unwrapStaticValue = (value: unknown): string | undefined => {\n  if ((value as Partial<StaticValue>)?.r !== brand) {\n    return undefined;\n  }\n  return (value as Partial<StaticValue>)?.['_$litStatic$'];\n};\n\n/**\n * Wraps a string so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Note that this function is unsafe to use on untrusted content, as it will be\n * directly parsed into HTML. Do not pass user input to this function\n * without sanitizing it.\n *\n * Static values can be changed, but they will cause a complete re-render\n * since they effectively create a new template.\n */\nexport const unsafeStatic = (value: string): StaticValue => ({\n  ['_$litStatic$']: value,\n  r: brand,\n});\n\nconst textFromStatic = (value: StaticValue) => {\n  if (value['_$litStatic$'] !== undefined) {\n    return value['_$litStatic$'];\n  } else {\n    throw new Error(\n      `Value passed to 'literal' function must be a 'literal' result: ${value}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`\n    );\n  }\n};\n\n/**\n * Tags a string literal so that it behaves like part of the static template\n * strings instead of a dynamic value.\n *\n * The only values that may be used in template expressions are other tagged\n * `literal` results or `unsafeStatic` values (note that untrusted content\n * should never be passed to `unsafeStatic`).\n *\n * Users must take care to ensure that adding the static string to the template\n * results in well-formed HTML, or else templates may break unexpectedly.\n *\n * Static values can be changed, but they will cause a complete re-render since\n * they effectively create a new template.\n */\nexport const literal = (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): StaticValue => ({\n  ['_$litStatic$']: values.reduce(\n    (acc, v, idx) => acc + textFromStatic(v as StaticValue) + strings[idx + 1],\n    strings[0]\n  ) as string,\n  r: brand,\n});\n\nconst stringsCache = new Map<string, TemplateStringsArray>();\n\n/**\n * Wraps a lit-html template tag (`html` or `svg`) to add static value support.\n */\nexport const withStatic =\n  (coreTag: typeof coreHtml | typeof coreSvg | typeof coreMathml) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult => {\n    const l = values.length;\n    let staticValue: string | undefined;\n    let dynamicValue: unknown;\n    const staticStrings: Array<string> = [];\n    const dynamicValues: Array<unknown> = [];\n    let i = 0;\n    let hasStatics = false;\n    let s: string;\n\n    while (i < l) {\n      s = strings[i];\n      // Collect any unsafeStatic values, and their following template strings\n      // so that we treat a run of template strings and unsafe static values as\n      // a single template string.\n      while (\n        i < l &&\n        ((dynamicValue = values[i]),\n        (staticValue = unwrapStaticValue(dynamicValue))) !== undefined\n      ) {\n        s += staticValue + strings[++i];\n        hasStatics = true;\n      }\n      // If the last value is static, we don't need to push it.\n      if (i !== l) {\n        dynamicValues.push(dynamicValue);\n      }\n      staticStrings.push(s);\n      i++;\n    }\n    // If the last value isn't static (which would have consumed the last\n    // string), then we need to add the last string.\n    if (i === l) {\n      staticStrings.push(strings[l]);\n    }\n\n    if (hasStatics) {\n      const key = staticStrings.join('$$lit$$');\n      strings = stringsCache.get(key)!;\n      if (strings === undefined) {\n        // Beware: in general this pattern is unsafe, and doing so may bypass\n        // lit's security checks and allow an attacker to execute arbitrary\n        // code and inject arbitrary content.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (staticStrings as any).raw = staticStrings;\n        stringsCache.set(\n          key,\n          (strings = staticStrings as unknown as TemplateStringsArray)\n        );\n      }\n      values = dynamicValues;\n    }\n    return coreTag(strings, ...values);\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const html = withStatic(coreHtml);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const svg = withStatic(coreSvg);\n\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * Includes static value support from `lit-html/static.js`.\n */\nexport const mathml = withStatic(coreMathml);\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nfunction isActivationKey(key) {\n  return key === \"Enter\" || key === \" \";\n}\nconst numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nexport {\n  isActivationKey as i,\n  numberKeys as n\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nconst CSS = {\n  menu: \"menu\",\n  defaultTrigger: \"default-trigger\"\n};\nconst SLOTS = {\n  tooltip: \"tooltip\",\n  trigger: \"trigger\"\n};\nconst ICONS = {\n  menu: \"ellipsis\"\n};\nconst activeAttr = \"data-active\";\nexport {\n  CSS as C,\n  ICONS as I,\n  SLOTS as S,\n  activeAttr as a\n};\n","// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n","import {\n  tabbable,\n  focusable,\n  isFocusable,\n  isTabbable,\n  getTabIndex,\n} from 'tabbable';\n\nconst activeFocusTraps = {\n  activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      const activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap._setPausedState(true);\n      }\n    }\n\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n\n  deactivateTrap(trapStack, trap) {\n    const trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n\n    if (\n      trapStack.length > 0 &&\n      !trapStack[trapStack.length - 1]._isManuallyPaused()\n    ) {\n      trapStack[trapStack.length - 1]._setPausedState(false);\n    }\n  },\n};\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e?.key === 'Escape' || e?.key === 'Esc' || e?.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e?.key === 'Tab' || e?.keyCode === 9;\n};\n\n// checks for TAB by default\nconst isKeyForward = function (e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nconst isKeyBackward = function (e) {\n  return isTabEvent(e) && e.shiftKey;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst getActualTarget = function (event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function'\n    ? event.composedPath()[0]\n    : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nconst internalTrapStack = [];\n\nconst createFocusTrap = function (elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  const doc = userOptions?.document || document;\n\n  const trapStack = userOptions?.trapStack || internalTrapStack;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward,\n    isKeyBackward,\n    ...userOptions,\n  };\n\n  const state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [], // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    manuallyPaused: false,\n\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  const findContainerIndex = function (element, event) {\n    const composedPath =\n      typeof event?.composedPath === 'function'\n        ? event.composedPath()\n        : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(\n      ({ container, tabbableNodes }) =>\n        container.contains(element) ||\n        // fall back to explicit tabbable search which will take into consideration any\n        //  web components if the `tabbableOptions.getShadowRoot` option was used for\n        //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n        //  look inside web components even if open)\n        composedPath?.includes(container) ||\n        tabbableNodes.find((node) => node === element)\n    );\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  const getNodeForOption = function (\n    optionName,\n    { hasFallback = false, params = [] } = {}\n  ) {\n    let optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue(...params);\n    }\n\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\n        `\\`${optionName}\\` was specified but was not a node, or did not return a node`\n      );\n    }\n\n    let node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\n          `\\`${optionName}\\` appears to be an invalid selector; error=\"${err.message}\"`\n        );\n      }\n\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\n            `\\`${optionName}\\` as selector refers to no known node`\n          );\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node = getNodeForOption('initialFocus', { hasFallback: true });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n\n    if (\n      node === undefined ||\n      (node && !isFocusable(node, config.tabbableOptions))\n    ) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        const firstTabbableGroup = state.tabbableGroups[0];\n        const firstTabbableNode =\n          firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.containerGroups = state.containers.map((container) => {\n      const tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      const focusableNodes = focusable(container, config.tabbableOptions);\n\n      const firstTabbableNode =\n        tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      const lastTabbableNode =\n        tabbableNodes.length > 0\n          ? tabbableNodes[tabbableNodes.length - 1]\n          : undefined;\n\n      const firstDomTabbableNode = focusableNodes.find((node) =>\n        isTabbable(node)\n      );\n      const lastDomTabbableNode = focusableNodes\n        .slice()\n        .reverse()\n        .find((node) => isTabbable(node));\n\n      const posTabIndexesFound = !!tabbableNodes.find(\n        (node) => getTabIndex(node) > 0\n      );\n\n      return {\n        container,\n        tabbableNodes,\n        focusableNodes,\n\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound,\n\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode,\n\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode,\n\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode(node, forward = true) {\n          const nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes\n                .slice(focusableNodes.indexOf(node) + 1)\n                .find((el) => isTabbable(el));\n            }\n\n            return focusableNodes\n              .slice(0, focusableNodes.indexOf(node))\n              .reverse()\n              .find((el) => isTabbable(el));\n          }\n\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        },\n      };\n    });\n\n    state.tabbableGroups = state.containerGroups.filter(\n      (group) => group.tabbableNodes.length > 0\n    );\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (\n      state.containerGroups.find((g) => g.posTabIndexesFound) &&\n      state.containerGroups.length > 1\n    ) {\n      throw new Error(\n        \"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\"\n      );\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  const getActiveElement = function (el) {\n    const activeElement = el.activeElement;\n\n    if (!activeElement) {\n      return;\n    }\n\n    if (\n      activeElement.shadowRoot &&\n      activeElement.shadowRoot.activeElement !== null\n    ) {\n      return getActiveElement(activeElement.shadowRoot);\n    }\n\n    return activeElement;\n  };\n\n  const tryFocus = function (node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === getActiveElement(document)) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement],\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  const findNextNavNode = function ({ target, event, isBackward = false }) {\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findContainerIndex(target, event);\n      const containerGroup =\n        containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = state.tabbableGroups.findIndex(\n          ({ firstTabbableNode }) => target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target, false)))\n        ) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n\n          destinationNode =\n            getTabIndex(target) >= 0\n              ? destinationGroup.lastTabbableNode\n              : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = state.tabbableGroups.findIndex(\n          ({ lastTabbableNode }) => target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target, config.tabbableOptions) &&\n              !isTabbable(target, config.tabbableOptions) &&\n              !containerGroup.nextTabbableNode(target)))\n        ) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n\n          destinationNode =\n            getTabIndex(target) >= 0\n              ? destinationGroup.firstTabbableNode\n              : destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate,\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  const checkFocusIn = function (event) {\n    const target = getActualTarget(event);\n    const targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      let nextNode; // next node to focus, if we find one\n      let navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          const mruContainerIdx = findContainerIndex(\n            state.mostRecentlyFocusedNode\n          );\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          const { tabbableNodes } = state.containerGroups[mruContainerIdx];\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            const mruTabIdx = tabbableNodes.findIndex(\n              (node) => node === state.mostRecentlyFocusedNode\n            );\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (\n            !state.containerGroups.some((g) =>\n              g.tabbableNodes.some((n) => getTabIndex(n) > 0)\n            )\n          ) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent),\n        });\n      }\n\n      if (nextNode) {\n        tryFocus(nextNode);\n      } else {\n        tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkKeyNav = function (event, isBackward = false) {\n    state.recentNavEvent = event;\n\n    const destinationNode = findNextNavNode({ event, isBackward });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkTabKey = function (event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  const checkEscapeKey = function (event) {\n    if (\n      isEscapeEvent(event) &&\n      valueOrHandler(config.escapeDeactivates, event) !== false\n    ) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n\n  const checkClick = function (e) {\n    const target = getActualTarget(e);\n\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  const checkDomRemoval = function (mutations) {\n    const isFocusedNodeRemoved = mutations.some(function (mutation) {\n      const removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  const mutationObserver =\n    typeof window !== 'undefined' && 'MutationObserver' in window\n      ? new MutationObserver(checkDomRemoval)\n      : undefined;\n\n  const updateObservedNodes = function () {\n    if (!mutationObserver) {\n      return;\n    }\n\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true,\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n\n    get paused() {\n      return state.paused;\n    },\n\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = getActiveElement(doc);\n\n      onActivate?.();\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate?.();\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      const options = {\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus,\n        ...deactivateOptions,\n      };\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n\n      const onDeactivate = getOption(options, 'onDeactivate');\n      const onPostDeactivate = getOption(options, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      const returnFocus = getOption(\n        options,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      onDeactivate?.();\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate?.();\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause(pauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      state.manuallyPaused = true;\n\n      return this._setPausedState(true, pauseOptions);\n    },\n\n    unpause(unpauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      state.manuallyPaused = false;\n\n      if (trapStack[trapStack.length - 1] !== this) {\n        return this;\n      }\n\n      return this._setPausedState(false, unpauseOptions);\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      updateObservedNodes();\n\n      return this;\n    },\n  };\n\n  Object.defineProperties(trap, {\n    _isManuallyPaused: {\n      value() {\n        return state.manuallyPaused;\n      },\n    },\n    _setPausedState: {\n      value(paused, options) {\n        if (state.paused === paused) {\n          return this;\n        }\n\n        state.paused = paused;\n        if (paused) {\n          const onPause = getOption(options, 'onPause');\n          const onPostPause = getOption(options, 'onPostPause');\n          onPause?.();\n\n          removeListeners();\n          updateObservedNodes();\n\n          onPostPause?.();\n        } else {\n          const onUnpause = getOption(options, 'onUnpause');\n          const onPostUnpause = getOption(options, 'onPostUnpause');\n\n          onUnpause?.();\n\n          updateTabbableNodes();\n          addListeners();\n          updateObservedNodes();\n\n          onPostUnpause?.();\n        }\n\n        return this;\n      },\n    },\n  });\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { makeGenericController } from \"@arcgis/lumina/controllers\";\nimport { createFocusTrap } from \"focus-trap\";\nimport { p as tabbableOptions, b as focusElement } from \"./dom.js\";\nimport { f as focusTrapStack } from \"./runtime.js\";\nconst outsideClickDeactivated = /* @__PURE__ */ new WeakSet();\nfunction createFocusTrapOptions(hostEl, options) {\n  const fallbackFocus = options?.fallbackFocus || hostEl;\n  const clickOutsideDeactivates = options?.clickOutsideDeactivates ?? true;\n  return {\n    fallbackFocus,\n    setReturnFocus: (el) => {\n      if (!outsideClickDeactivated.has(hostEl)) {\n        focusElement(el);\n      }\n      return false;\n    },\n    ...options,\n    // the following options are not overridable\n    document: hostEl.ownerDocument,\n    tabbableOptions,\n    trapStack: focusTrapStack,\n    clickOutsideDeactivates: (event) => {\n      if (!outsideClickDeactivated.has(hostEl)) {\n        outsideClickDeactivated.add(hostEl);\n      }\n      return typeof clickOutsideDeactivates === \"function\" ? clickOutsideDeactivates(event) : clickOutsideDeactivates;\n    },\n    onPostDeactivate: () => {\n      outsideClickDeactivated.delete(hostEl);\n    }\n  };\n}\nfunction getEffectiveContainerElements(targetEl, { focusTrapOptions }, extraContainers) {\n  if (!focusTrapOptions?.extraContainers && !extraContainers) {\n    return targetEl;\n  }\n  return [targetEl, ...toContainerArray(focusTrapOptions?.extraContainers), ...toContainerArray(extraContainers)];\n}\nfunction toContainerArray(containers = []) {\n  return Array.isArray(containers) ? containers : [containers];\n}\nconst useFocusTrap = (options) => {\n  return makeGenericController((component, controller) => {\n    let focusTrap;\n    let focusTrapEl;\n    let effectiveContainers;\n    const internalFocusTrapOptions = options.focusTrapOptions;\n    controller.onConnected(() => {\n      if (component[options.triggerProp] && focusTrap) {\n        utils.activate();\n      }\n    });\n    controller.onUpdate((changes) => {\n      if (component.hasUpdated && changes.has(\"focusTrapDisabled\")) {\n        if (component.focusTrapDisabled) {\n          utils.deactivate();\n        } else {\n          utils.activate();\n        }\n      }\n    });\n    controller.onDisconnected(() => utils.deactivate());\n    const utils = {\n      activate: () => {\n        const targetEl = focusTrapEl || component.el;\n        if (!targetEl.isConnected) {\n          return;\n        }\n        if (!focusTrap) {\n          const effectiveFocusTrapOptions = {\n            ...internalFocusTrapOptions,\n            ...component.focusTrapOptions\n          };\n          effectiveContainers ||= getEffectiveContainerElements(targetEl, component);\n          focusTrap = createFocusTrap(effectiveContainers, createFocusTrapOptions(targetEl, effectiveFocusTrapOptions));\n        }\n        if (typeof component.focusTrapDisabledOverride === \"function\" ? !component.focusTrapDisabledOverride() : !component.focusTrapDisabled) {\n          focusTrap.activate();\n        }\n      },\n      deactivate: () => focusTrap?.deactivate(),\n      overrideFocusTrapEl: (el) => {\n        if (focusTrap) {\n          throw new Error(\"Focus trap already created\");\n        }\n        focusTrapEl = el;\n      },\n      setExtraContainers: (extraContainers) => {\n        const targetEl = focusTrapEl || component.el;\n        effectiveContainers = getEffectiveContainerElements(targetEl, component, extraContainers);\n      },\n      updateContainerElements: () => {\n        return focusTrap?.updateContainerElements(effectiveContainers);\n      }\n    };\n    return utils;\n  });\n};\nexport {\n  useFocusTrap as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport { nothing, svg, html } from \"lit-html\";\nimport { safeClassMap } from \"@arcgis/lumina\";\nconst CSS = {\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\"\n};\nconst DEFAULTS = {\n  width: 12,\n  height: 6,\n  strokeWidth: 1\n};\nconst FloatingArrow = ({ floatingLayout, key, ref: ref$1 }) => {\n  const { width, height, strokeWidth } = DEFAULTS;\n  const svgX = width / 2;\n  const isVertical = floatingLayout === \"vertical\";\n  const dValue = `M0,0 H${width} L${width - svgX},${height} Q${svgX},${height} ${svgX},${height} Z`;\n  return keyed(key, html`<svg aria-hidden=true class=${safeClassMap(CSS.arrow)} height=${width} viewBox=${`0 0 ${width} ${width + (!isVertical ? strokeWidth : 0)}`} width=${width + (isVertical ? strokeWidth : 0)} ${ref(ref$1)}>${svg`${svg`<path class=${safeClassMap(CSS.arrowStroke)} d=${dValue ?? nothing} fill=none stroke-width=${strokeWidth + 1} />` || \"\"}<path d=${dValue ?? nothing} stroke=none />`}</svg>`);\n};\nexport {\n  FloatingArrow as F\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { keyed } from \"lit-html/directives/keyed.js\";\nimport { html } from \"lit\";\nimport { createRef, ref } from \"lit-html/directives/ref.js\";\nimport { LitElement, createEvent, safeClassMap, setAttribute } from \"@arcgis/lumina\";\nimport { d as defaultOffsetDistance, r as reposition, a as disconnectFloatingUI, f as filterValidFlipPlacements, c as connectFloatingUI, h as hideFloatingUI, F as FloatingCSS } from \"../../chunks/floating-ui.js\";\nimport { u as isKeyboardTriggeredClick, h as focusFirstTabbable, t as toAriaBoolean, q as queryElementRoots } from \"../../chunks/dom.js\";\nimport { g as guid } from \"../../chunks/guid.js\";\nimport { o as onToggleOpenCloseComponent } from \"../../chunks/openCloseComponent.js\";\nimport { H as Heading } from \"../../chunks/Heading.js\";\nimport { c as componentFocusable, g as getIconScale } from \"../../chunks/component.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { F as FloatingArrow } from \"../../chunks/FloatingArrow.js\";\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\nimport { u as useFocusTrap } from \"../../chunks/useFocusTrap.js\";\nimport { i as isActivationKey } from \"../../chunks/key.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nclass PopoverManager {\n  constructor() {\n    this.registeredElements = /* @__PURE__ */ new Map();\n    this.registeredElementCount = 0;\n    this.queryPopover = (composedPath) => {\n      const { registeredElements } = this;\n      const registeredElement = composedPath.find((pathEl) => registeredElements.has(pathEl));\n      return registeredElements.get(registeredElement);\n    };\n    this.togglePopovers = (event) => {\n      const composedPath = event.composedPath();\n      const togglePopover = this.queryPopover(composedPath);\n      if (togglePopover && !togglePopover.triggerDisabled) {\n        togglePopover.open = !togglePopover.open;\n      }\n      Array.from(this.registeredElements.values()).filter(\n        (popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover)\n      ).forEach((popover) => popover.open = false);\n    };\n    this.keyDownHandler = (event) => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (event.key === \"Escape\") {\n        this.closeAllPopovers();\n      } else if (isActivationKey(event.key)) {\n        this.togglePopovers(event);\n      }\n    };\n    this.clickHandler = (event) => {\n      if (isKeyboardTriggeredClick(event) || event.defaultPrevented) {\n        return;\n      }\n      this.togglePopovers(event);\n    };\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  registerElement(referenceEl, popover) {\n    this.registeredElementCount++;\n    this.registeredElements.set(referenceEl, popover);\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n  unregisterElement(referenceEl) {\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n  closeAllPopovers() {\n    Array.from(this.registeredElements.values()).forEach((popover) => popover.open = false);\n  }\n  addListeners() {\n    window.addEventListener(\"click\", this.clickHandler);\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n  removeListeners() {\n    window.removeEventListener(\"click\", this.clickHandler);\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\nconst CSS = {\n  positionContainer: \"position-container\",\n  container: \"container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  heading: \"heading\"\n};\nconst defaultPopoverPlacement = \"auto\";\nconst ARIA_CONTROLS = \"aria-controls\";\nconst ARIA_EXPANDED = \"aria-expanded\";\nconst styles = css`:host{display:contents;--calcite-floating-ui-z-index: var(--calcite-popover-z-index, var(--calcite-z-index-popup))}.position-container{inline-size:max-content;display:none;max-inline-size:100vw;max-block-size:100vh;inset-block-start:0;left:0;z-index:var(--calcite-floating-ui-z-index)}.position-container .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:inset,left,opacity;opacity:0;box-shadow:0 0 16px #00000029;z-index:var(--calcite-z-index);border-radius:.25rem}.position-container[data-placement^=bottom] .calcite-floating-ui-anim{inset-block-start:-5px}.position-container[data-placement^=top] .calcite-floating-ui-anim{inset-block-start:5px}.position-container[data-placement^=left] .calcite-floating-ui-anim{left:5px}.position-container[data-placement^=right] .calcite-floating-ui-anim{left:-5px}.position-container[data-placement] .calcite-floating-ui-anim--active{opacity:1;inset-block-start:0;left:0}.calcite-floating-ui-arrow{pointer-events:none;position:absolute;z-index:calc(var(--calcite-z-index) * -1);fill:var(--calcite-color-foreground-1)}.calcite-floating-ui-arrow__stroke{stroke:var(--calcite-color-border-3)}:host([scale=s]) .heading{padding:.5rem .75rem;font-size:var(--calcite-font-size--1);line-height:1.375}:host([scale=m]) .heading{padding:.75rem 1rem;font-size:var(--calcite-font-size-0);line-height:1.375}:host([scale=l]) .heading{padding:1rem 1.25rem;font-size:var(--calcite-font-size-1);line-height:1.375}.position-container .calcite-floating-ui-anim{border-width:1px;border-style:solid;background-color:var(--calcite-popover-background-color, var(--calcite-color-foreground-1));border-color:var(--calcite-popover-border-color, var(--calcite-color-border-3));border-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round))}.calcite-floating-ui-arrow{fill:var(--calcite-popover-background-color, var(--calcite-color-foreground-1))}.calcite-floating-ui-arrow__stroke{stroke:var(--calcite-popover-border-color, var(--calcite-color-border-3))}.header{display:flex;flex:1 1 auto;align-items:stretch;justify-content:flex-start;border-width:0px;border-bottom-width:1px;border-style:solid;border-block-end-color:var(--calcite-popover-border-color, var(--calcite-color-border-3))}.heading{margin:0;display:block;flex:1 1 auto;align-self:center;white-space:normal;font-weight:var(--calcite-font-weight-medium);word-wrap:break-word;word-break:break-word;color:var(--calcite-popover-text-color, var(--calcite-color-text-1))}.header-container{position:relative;display:flex;height:100%;flex-direction:row;flex-wrap:nowrap;border-radius:.25rem;color:var(--calcite-popover-text-color, var(--calcite-color-text-1))}.header-container.has-header{flex-direction:column}.content{display:flex;height:100%;width:100%;flex-direction:column;flex-wrap:nowrap;align-self:center;word-wrap:break-word;word-break:break-word}.close-button-container{display:flex;overflow:hidden;flex:0 0 auto;border-start-end-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));border-end-end-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));--calcite-action-corner-radius-start-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));--calcite-action-corner-radius-end-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp))}::slotted(calcite-panel),::slotted(calcite-flow){height:100%}:host([hidden]){display:none}[hidden]{display:none}`;\nconst manager = new PopoverManager();\nclass Popover extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.closeButtonEl = createRef();\n    this.focusTrap = useFocusTrap({\n      triggerProp: \"open\",\n      focusTrapOptions: {\n        allowOutsideClick: true,\n        escapeDeactivates: (event) => {\n          if (!event.defaultPrevented) {\n            this.open = false;\n            event.preventDefault();\n          }\n          return false;\n        }\n      }\n    })(this);\n    this.guid = `calcite-popover-${guid()}`;\n    this.hasLoaded = false;\n    this.mutationObserver = createObserver(\"mutation\", () => this.focusTrap.updateContainerElements());\n    this.transitionProp = \"opacity\";\n    this.messages = useT9n();\n    this.floatingLayout = \"vertical\";\n    this.autoClose = false;\n    this.closable = false;\n    this.flipDisabled = false;\n    this.focusTrapDisabled = false;\n    this.offsetDistance = defaultOffsetDistance;\n    this.offsetSkidding = 0;\n    this.open = false;\n    this.overlayPositioning = \"absolute\";\n    this.placement = defaultPopoverPlacement;\n    this.pointerDisabled = false;\n    this.scale = \"m\";\n    this.triggerDisabled = false;\n    this.calcitePopoverBeforeClose = createEvent({ cancelable: false });\n    this.calcitePopoverBeforeOpen = createEvent({ cancelable: false });\n    this.calcitePopoverClose = createEvent({ cancelable: false });\n    this.calcitePopoverOpen = createEvent({ cancelable: false });\n  }\n  static {\n    this.properties = { floatingLayout: [16, {}, { state: true }], referenceEl: [16, {}, { state: true }], autoClose: [7, {}, { reflect: true, type: Boolean }], closable: [7, {}, { reflect: true, type: Boolean }], flipDisabled: [7, {}, { reflect: true, type: Boolean }], flipPlacements: [0, {}, { attribute: false }], focusTrapDisabled: [7, {}, { reflect: true, type: Boolean }], focusTrapOptions: [0, {}, { attribute: false }], heading: 1, headingLevel: [11, {}, { type: Number, reflect: true }], label: 1, messageOverrides: [0, {}, { attribute: false }], offsetDistance: [11, {}, { type: Number, reflect: true }], offsetSkidding: [11, {}, { reflect: true, type: Number }], open: [7, {}, { reflect: true, type: Boolean }], overlayPositioning: [3, {}, { reflect: true }], placement: [3, {}, { reflect: true }], pointerDisabled: [7, {}, { reflect: true, type: Boolean }], referenceElement: 1, scale: [3, {}, { reflect: true }], triggerDisabled: [7, {}, { reflect: true, type: Boolean }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  async reposition(delayed = false) {\n    const { referenceEl, placement, overlayPositioning, flipDisabled, filteredFlipPlacements, offsetDistance, offsetSkidding, arrowEl, floatingEl } = this;\n    return reposition(this, {\n      floatingEl,\n      referenceEl,\n      overlayPositioning,\n      placement,\n      flipDisabled,\n      flipPlacements: filteredFlipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type: \"popover\"\n    }, delayed);\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    this.requestUpdate();\n    focusFirstTabbable(this.el);\n  }\n  async updateFocusTrapElements() {\n    this.focusTrap.updateContainerElements();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.setFilteredPlacements();\n    requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n  }\n  willUpdate(changes) {\n    if (changes.has(\"flipPlacements\")) {\n      this.flipPlacementsHandler();\n    }\n    if (changes.has(\"open\") && (this.hasUpdated || this.open !== false)) {\n      this.openHandler();\n    }\n    if (changes.has(\"offsetDistance\") && (this.hasUpdated || this.offsetDistance !== defaultOffsetDistance) || changes.has(\"offsetSkidding\") && (this.hasUpdated || this.offsetSkidding !== 0) || changes.has(\"overlayPositioning\") && (this.hasUpdated || this.overlayPositioning !== \"absolute\") || changes.has(\"placement\") && (this.hasUpdated || this.placement !== defaultPopoverPlacement)) {\n      this.reposition(true);\n    }\n    if (changes.has(\"referenceElement\")) {\n      this.referenceElementHandler();\n    }\n  }\n  loaded() {\n    if (this.referenceElement && !this.referenceEl) {\n      this.setUpReferenceElement();\n    }\n    this.hasLoaded = true;\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.mutationObserver?.disconnect();\n    this.removeReferences();\n    disconnectFloatingUI(this);\n  }\n  flipPlacementsHandler() {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n  openHandler() {\n    onToggleOpenCloseComponent(this);\n    this.reposition(true);\n    this.setExpandedAttr();\n  }\n  referenceElementHandler() {\n    this.setUpReferenceElement();\n    this.reposition(true);\n  }\n  setFloatingEl(el) {\n    this.floatingEl = el;\n    if (el) {\n      requestAnimationFrame(() => this.setUpReferenceElement());\n    }\n  }\n  setTransitionEl(el) {\n    if (!el) {\n      return;\n    }\n    this.transitionEl = el;\n  }\n  setFilteredPlacements() {\n    const { el, flipPlacements } = this;\n    this.filteredFlipPlacements = flipPlacements ? filterValidFlipPlacements(flipPlacements, el) : null;\n  }\n  setUpReferenceElement(warn = true) {\n    this.removeReferences();\n    this.referenceEl = this.getReferenceElement();\n    connectFloatingUI(this);\n    const { el, referenceElement, referenceEl } = this;\n    if (warn && referenceElement && !referenceEl) {\n      console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n        el\n      });\n    }\n    this.addReferences();\n  }\n  getId() {\n    return this.el.id || this.guid;\n  }\n  setExpandedAttr() {\n    const { referenceEl, open } = this;\n    if (!referenceEl) {\n      return;\n    }\n    if (\"setAttribute\" in referenceEl) {\n      referenceEl.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n    }\n  }\n  addReferences() {\n    const { referenceEl } = this;\n    if (!referenceEl) {\n      return;\n    }\n    const id = this.getId();\n    if (\"setAttribute\" in referenceEl) {\n      referenceEl.setAttribute(ARIA_CONTROLS, id);\n    }\n    manager.registerElement(referenceEl, this.el);\n    this.setExpandedAttr();\n  }\n  removeReferences() {\n    const { referenceEl } = this;\n    if (!referenceEl) {\n      return;\n    }\n    if (\"removeAttribute\" in referenceEl) {\n      referenceEl.removeAttribute(ARIA_CONTROLS);\n      referenceEl.removeAttribute(ARIA_EXPANDED);\n    }\n    manager.unregisterElement(referenceEl);\n  }\n  getReferenceElement() {\n    const { referenceElement, el } = this;\n    return (typeof referenceElement === \"string\" ? queryElementRoots(el, { id: referenceElement }) : referenceElement) || null;\n  }\n  hide() {\n    this.open = false;\n  }\n  onBeforeOpen() {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n  onOpen() {\n    this.calcitePopoverOpen.emit();\n    this.focusTrap.activate();\n  }\n  onBeforeClose() {\n    this.calcitePopoverBeforeClose.emit();\n  }\n  onClose() {\n    this.calcitePopoverClose.emit();\n    hideFloatingUI(this);\n    this.focusTrap.deactivate();\n  }\n  storeArrowEl(el) {\n    this.arrowEl = el;\n    this.reposition(true);\n  }\n  renderCloseButton() {\n    const { messages, closable } = this;\n    return closable ? keyed(CSS.closeButtonContainer, html`<div class=${safeClassMap(CSS.closeButtonContainer)}><calcite-action appearance=transparent class=${safeClassMap(CSS.closeButton)} @click=${this.hide} .scale=${this.scale} .text=${messages.close} ${ref(this.closeButtonEl)}><calcite-icon icon=x .scale=${getIconScale(this.scale)}></calcite-icon></calcite-action></div>`) : null;\n  }\n  renderHeader() {\n    const { heading, headingLevel } = this;\n    const headingNode = heading ? Heading({ class: CSS.heading, level: headingLevel, children: heading }) : null;\n    return headingNode ? keyed(CSS.header, html`<div class=${safeClassMap(CSS.header)}>${headingNode}${this.renderCloseButton()}</div>`) : null;\n  }\n  render() {\n    const { referenceEl, heading, label, open, pointerDisabled, floatingLayout } = this;\n    const displayed = referenceEl && open;\n    const hidden = !displayed;\n    const arrowNode = !pointerDisabled ? keyed(\"floating-arrow\", FloatingArrow({ floatingLayout, ref: this.storeArrowEl })) : null;\n    this.el.inert = hidden;\n    this.el.ariaLabel = label;\n    this.el.ariaLive = \"polite\";\n    setAttribute(this.el, \"id\", this.getId());\n    this.el.role = \"dialog\";\n    return html`<div class=${safeClassMap(CSS.positionContainer)} ${ref(this.setFloatingEl)}><div class=${safeClassMap({\n      [CSS.container]: true,\n      [FloatingCSS.animation]: true,\n      [FloatingCSS.animationActive]: displayed\n    })} ${ref(this.setTransitionEl)}>${arrowNode}<div class=${safeClassMap({\n      [CSS.hasHeader]: !!heading,\n      [CSS.headerContainer]: true\n    })}>${this.renderHeader()}<div class=${safeClassMap(CSS.content)}><slot></slot></div>${!heading ? this.renderCloseButton() : null}</div></div></div>`;\n  }\n}\ncustomElement(\"calcite-popover\", Popover);\nexport {\n  Popover\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nfunction getRoundRobinIndex(index, total) {\n  return (index + total) % total;\n}\nexport {\n  getRoundRobinIndex as g\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { ref } from \"lit-html/directives/ref.js\";\nimport { html, nothing } from \"lit\";\nimport { LitElement, createEvent, safeClassMap } from \"@arcgis/lumina\";\nimport { g as getRoundRobinIndex } from \"../../chunks/array.js\";\nimport { b as focusElement, t as toAriaBoolean } from \"../../chunks/dom.js\";\nimport { g as guid } from \"../../chunks/guid.js\";\nimport { i as isActivationKey } from \"../../chunks/key.js\";\nimport { c as componentFocusable } from \"../../chunks/component.js\";\nimport { a as activeAttr, S as SLOTS, I as ICONS, C as CSS } from \"../../chunks/resources2.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst styles = css`:host{box-sizing:border-box;display:flex;flex-direction:column;font-size:var(--calcite-font-size-1)}::slotted(calcite-action-group:not(:last-of-type)){border-block-end-width:var(--calcite-border-width-sm)}.default-trigger{position:relative;block-size:100%;flex:0 1 auto;align-self:stretch}slot[name=trigger]::slotted(calcite-action),calcite-action::slotted([slot=trigger]){position:relative;block-size:100%;flex:0 1 auto;align-self:stretch}.menu{display:flex;max-block-size:45vh;flex-direction:column;flex-wrap:nowrap;overflow-y:auto;overflow-x:hidden;outline:2px solid transparent;outline-offset:2px;gap:var(--calcite-action-menu-items-space, 0)}:host([hidden]){display:none}[hidden]{display:none}`;\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\nclass ActionMenu extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.guid = `calcite-action-menu-${guid()}`;\n    this.actionElements = [];\n    this.menuButtonClick = () => {\n      this.toggleOpen();\n    };\n    this.menuButtonId = `${this.guid}-menu-button`;\n    this.menuButtonKeyDown = (event) => {\n      const { key } = event;\n      const { actionElements, activeMenuItemIndex, open } = this;\n      if (!actionElements.length) {\n        return;\n      }\n      if (isActivationKey(key)) {\n        event.preventDefault();\n        if (!open) {\n          this.toggleOpen();\n          return;\n        }\n        const action = actionElements[activeMenuItemIndex];\n        if (action) {\n          action.click();\n        } else {\n          this.toggleOpen(false);\n        }\n      }\n      if (key === \"Tab\") {\n        this.open = false;\n        return;\n      }\n      if (key === \"Escape\") {\n        this.toggleOpen(false);\n        event.preventDefault();\n        return;\n      }\n      this.handleActionNavigation(event, key, actionElements);\n    };\n    this.menuId = `${this.guid}-menu`;\n    this._open = false;\n    this.updateAction = (action, index) => {\n      const { guid: guid2, activeMenuItemIndex } = this;\n      const id = `${guid2}-action-${index}`;\n      action.tabIndex = -1;\n      action.setAttribute(\"role\", \"menuitem\");\n      if (!action.id) {\n        action.id = id;\n      }\n      action.toggleAttribute(activeAttr, index === activeMenuItemIndex);\n    };\n    this.activeMenuItemIndex = -1;\n    this.appearance = \"solid\";\n    this.expanded = false;\n    this.overlayPositioning = \"absolute\";\n    this.placement = \"auto\";\n    this.scale = \"m\";\n    this.calciteActionMenuOpen = createEvent({ cancelable: false });\n  }\n  static {\n    this.properties = { activeMenuItemIndex: [16, {}, { state: true }], menuButtonEl: [16, {}, { state: true }], appearance: [3, {}, { reflect: true }], expanded: [7, {}, { reflect: true, type: Boolean }], flipPlacements: [0, {}, { attribute: false }], label: 1, open: [7, {}, { reflect: true, type: Boolean }], overlayPositioning: [3, {}, { reflect: true }], placement: [3, {}, { reflect: true }], scale: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  get open() {\n    return this._open;\n  }\n  set open(open) {\n    const oldOpen = this._open;\n    if (open !== oldOpen) {\n      this._open = open;\n      this.openHandler(open);\n    }\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    return focusElement(this.menuButtonEl);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.connectMenuButtonEl();\n  }\n  willUpdate(changes) {\n    if (changes.has(\"expanded\") && (this.hasUpdated || this.expanded !== false)) {\n      this.expandedHandler();\n    }\n    if (changes.has(\"activeMenuItemIndex\") && (this.hasUpdated || this.activeMenuItemIndex !== -1)) {\n      this.updateActions(this.actionElements);\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.disconnectMenuButtonEl();\n  }\n  expandedHandler() {\n    this.open = false;\n    this.setTooltipReferenceElement();\n  }\n  openHandler(open) {\n    if (this.menuButtonEl) {\n      this.menuButtonEl.active = open;\n    }\n    if (this.popoverEl) {\n      this.popoverEl.open = open;\n    }\n    this.activeMenuItemIndex = this.open ? 0 : -1;\n    this.calciteActionMenuOpen.emit();\n    this.setTooltipReferenceElement();\n  }\n  connectMenuButtonEl() {\n    const { menuButtonId, menuId, open, label } = this;\n    const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n    if (this.menuButtonEl === menuButtonEl) {\n      return;\n    }\n    this.disconnectMenuButtonEl();\n    this.menuButtonEl = menuButtonEl;\n    this.setTooltipReferenceElement();\n    if (!menuButtonEl) {\n      return;\n    }\n    menuButtonEl.active = open;\n    menuButtonEl.setAttribute(\"aria-controls\", menuId);\n    menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n    menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n    if (!menuButtonEl.id) {\n      menuButtonEl.id = menuButtonId;\n    }\n    if (!menuButtonEl.label) {\n      menuButtonEl.label = label;\n    }\n    if (!menuButtonEl.text) {\n      menuButtonEl.text = label;\n    }\n    menuButtonEl.addEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n  }\n  disconnectMenuButtonEl() {\n    const { menuButtonEl } = this;\n    if (!menuButtonEl) {\n      return;\n    }\n    menuButtonEl.removeEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n    this.menuButtonEl = null;\n  }\n  setMenuButtonEl(event) {\n    const actions = event.target.assignedElements({\n      flatten: true\n    }).filter((el) => el?.matches(\"calcite-action\"));\n    this.slottedMenuButtonEl = actions[0];\n    this.connectMenuButtonEl();\n  }\n  setDefaultMenuButtonEl(el) {\n    this.defaultMenuButtonEl = el;\n    if (el) {\n      this.connectMenuButtonEl();\n    }\n  }\n  setPopoverEl(el) {\n    if (!el) {\n      return;\n    }\n    this.popoverEl = el;\n    el.open = this.open;\n  }\n  handleCalciteActionClick() {\n    this.open = false;\n    this.setFocus();\n  }\n  updateTooltip(event) {\n    const tooltips = event.target.assignedElements({\n      flatten: true\n    }).filter((el) => el?.matches(\"calcite-tooltip\"));\n    this.tooltipEl = tooltips[0];\n    this.setTooltipReferenceElement();\n  }\n  setTooltipReferenceElement() {\n    const { tooltipEl, expanded, menuButtonEl, open } = this;\n    if (tooltipEl) {\n      tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n    }\n  }\n  updateActions(actions) {\n    actions?.forEach(this.updateAction);\n  }\n  handleDefaultSlotChange(event) {\n    const actions = event.target.assignedElements({\n      flatten: true\n    }).reduce((previousValue, currentValue) => {\n      if (currentValue?.matches(\"calcite-action\")) {\n        previousValue.push(currentValue);\n        return previousValue;\n      }\n      if (currentValue?.matches(\"calcite-action-group\")) {\n        return previousValue.concat(Array.from(currentValue.querySelectorAll(\"calcite-action\")));\n      }\n      return previousValue;\n    }, []);\n    this.actionElements = actions.filter((action) => !action.disabled && !action.hidden);\n  }\n  isValidKey(key, supportedKeys) {\n    return !!supportedKeys.find((k) => k === key);\n  }\n  handleActionNavigation(event, key, actions) {\n    if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n      return;\n    }\n    event.preventDefault();\n    if (!this.open) {\n      this.toggleOpen();\n      if (key === \"Home\" || key === \"ArrowDown\") {\n        this.activeMenuItemIndex = 0;\n      }\n      if (key === \"End\" || key === \"ArrowUp\") {\n        this.activeMenuItemIndex = actions.length - 1;\n      }\n      return;\n    }\n    if (key === \"Home\") {\n      this.activeMenuItemIndex = 0;\n    }\n    if (key === \"End\") {\n      this.activeMenuItemIndex = actions.length - 1;\n    }\n    const currentIndex = this.activeMenuItemIndex;\n    if (key === \"ArrowUp\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n    }\n    if (key === \"ArrowDown\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n    }\n  }\n  toggleOpen(value = !this.open) {\n    this.open = value;\n  }\n  handlePopoverOpen(event) {\n    event.stopPropagation();\n    this.open = true;\n    this.setFocus();\n  }\n  handlePopoverClose(event) {\n    event.stopPropagation();\n    this.open = false;\n  }\n  renderMenuButton() {\n    const { appearance, label, scale, expanded } = this;\n    const menuButtonSlot = html`<slot name=${SLOTS.trigger} @slotchange=${this.setMenuButtonEl}><calcite-action .appearance=${appearance} class=${safeClassMap(CSS.defaultTrigger)} .icon=${ICONS.menu} .scale=${scale} .text=${label} .textEnabled=${expanded} ${ref(this.setDefaultMenuButtonEl)}></calcite-action></slot>`;\n    return menuButtonSlot;\n  }\n  renderMenuItems() {\n    const { actionElements, activeMenuItemIndex, menuId, menuButtonEl, label, placement, overlayPositioning, flipPlacements } = this;\n    const activeAction = actionElements[activeMenuItemIndex];\n    const activeDescendantId = activeAction?.id || null;\n    return html`<calcite-popover auto-close .flipPlacements=${flipPlacements} focus-trap-disabled .label=${label} offset-distance=0 @calcitePopoverClose=${this.handlePopoverClose} @calcitePopoverOpen=${this.handlePopoverOpen} .overlayPositioning=${overlayPositioning} .placement=${placement} pointer-disabled .referenceElement=${menuButtonEl} trigger-disabled ${ref(this.setPopoverEl)}><div aria-activedescendant=${activeDescendantId ?? nothing} aria-labelledby=${menuButtonEl?.id ?? nothing} class=${safeClassMap(CSS.menu)} id=${menuId ?? nothing} @click=${this.handleCalciteActionClick} role=menu tabindex=-1><slot @slotchange=${this.handleDefaultSlotChange}></slot></div></calcite-popover>`;\n  }\n  render() {\n    return html`${this.renderMenuButton()}${this.renderMenuItems()}<slot name=${SLOTS.tooltip} @slotchange=${this.updateTooltip}></slot>`;\n  }\n}\ncustomElement(\"calcite-action-menu\", ActionMenu);\nexport {\n  ActionMenu\n};\n"],"names":["Heading","_ref","children","props","_objectWithoutProperties","_excluded","DynamicHtmlTag","level","unsafeStatic","concat","literal","_templateObject","_taggedTemplateLiteral","keyed","key","html","_templateObject2","safeClassMap","class","a","Symbol","for","o","t","r","_$litStatic$","s","i","_len","arguments","length","Array","_key","reduce","e","Error","l","Map","n","_len2","_key2","u","c","$","f","push","join","get","raw","set","isActivationKey","numberKeys","CSS","menu","defaultTrigger","SLOTS","tooltip","trigger","ICONS","activeAttr","candidateSelectors","candidateSelector","NoElement","Element","matches","prototype","msMatchesSelector","webkitMatchesSelector","getRootNode","element","_element$getRootNode","call","ownerDocument","isInert","node","lookUp","_node$getAttribute","inertAtt","getAttribute","parentNode","getCandidates","el","includeContainer","filter","candidates","slice","apply","querySelectorAll","unshift","getCandidatesIteratively","elements","options","elementsToCheck","from","shift","tagName","assigned","assignedElements","nestedCandidates","flatten","scopeParent","includes","shadowRoot","getShadowRoot","validShadowRoot","shadowRootFilter","_nestedCandidates","hasTabIndex","isNaN","parseInt","getTabIndex","tabIndex","test","_node$getAttribute2","attValue","isContentEditable","sortOrderedTabbables","b","documentOrder","isInput","isNonTabbableRadio","type","isRadio","name","radioSet","radioScope","form","queryRadios","window","escape","err","console","error","message","checked","nodes","getCheckedRadio","isTabbableRadio","isZeroArea","_node$getBoundingClie","getBoundingClientRect","width","height","isHidden","displayCheck","getComputedStyle","visibility","nodeUnderDetails","parentElement","originalNode","rootNode","assignedSlot","host","_nodeRoot","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","nodeRoot","nodeRootHost","attached","contains","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isNodeAttached","getClientRects","isNodeMatchingSelectorFocusable","disabled","isHiddenInput","some","child","isDetailsWithSummary","item","isDisabledFromFieldset","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","forEach","isScope","candidateTabindex","getSortOrderTabIndex","content","sort","acc","sortable","isTabbable","focusableCandidateSelector","isFocusable","activeFocusTraps","trapStack","trap","activeTrap","_setPausedState","trapIndex","indexOf","splice","_isManuallyPaused","isTabEvent","keyCode","isKeyForward","shiftKey","isKeyBackward","delay","fn","setTimeout","valueOrHandler","value","params","getActualTarget","event","target","composedPath","internalTrapStack","createFocusTrap","userOptions","doc","document","config","_objectSpread2","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","containerGroups","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","manuallyPaused","delayInitialFocusTimer","undefined","recentNavEvent","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","findIndex","container","tabbableNodes","find","getNodeForOption","_ref2","_ref2$hasFallback","hasFallback","_ref2$params","optionValue","_toConsumableArray","querySelector","getInitialFocusNode","tabbableOptions","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","bind","tabbable","focusableNodes","focusable","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","reverse","posTabIndexesFound","nextTabbableNode","forward","nodeIdx","group","g","_getActiveElement","_tryFocus","focus","preventScroll","toLowerCase","select","isSelectableInput","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref3","_ref3$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref4","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref5","_destinationGroupIndex","_destinationGroup","checkPointerDown","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","nextNode","stopImmediatePropagation","navAcrossContainers","mruContainerIdx","mruTabIdx","checkTabKey","checkKeyNav","checkEscapeKey","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","mutationObserver","MutationObserver","mutations","mutation","removedNodes","updateObservedNodes","disconnect","observe","subtree","childList","activate","activateOptions","this","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","then","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","clearTimeout","finishDeactivation","pause","pauseOptions","unpause","unpauseOptions","updateContainerElements","containerElements","elementsAsArray","Boolean","Object","defineProperties","onPause","onPostPause","onUnpause","onPostUnpause","outsideClickDeactivated","WeakSet","getEffectiveContainerElements","targetEl","extraContainers","focusTrapOptions","toContainerArray","isArray","useFocusTrap","makeGenericController","component","controller","focusTrap","focusTrapEl","effectiveContainers","internalFocusTrapOptions","onConnected","triggerProp","utils","onUpdate","changes","hasUpdated","has","focusTrapDisabled","onDisconnected","isConnected","effectiveFocusTrapOptions","_objectSpread","hostEl","_options$clickOutside","fallbackFocus","setReturnFocus","focusElement","focusTrapStack","add","delete","createFocusTrapOptions","focusTrapDisabledOverride","_focusTrap","overrideFocusTrapEl","setExtraContainers","_focusTrap2","DEFAULTS","strokeWidth","FloatingArrow","floatingLayout","ref","ref$1","svgX","isVertical","dValue","svg","_templateObject3","nothing","defaultPopoverPlacement","ARIA_CONTROLS","ARIA_EXPANDED","styles","css","manager","constructor","registeredElements","registeredElementCount","queryPopover","registeredElement","pathEl","togglePopovers","togglePopover","triggerDisabled","open","values","popover","autoClose","keyDownHandler","defaultPrevented","closeAllPopovers","clickHandler","isKeyboardTriggeredClick","registerElement","referenceEl","unregisterElement","Popover","LitElement","super","closeButtonEl","createRef","guid","hasLoaded","createObserver","transitionProp","messages","useT9n","closable","flipDisabled","offsetDistance","defaultOffsetDistance","offsetSkidding","overlayPositioning","placement","pointerDisabled","scale","calcitePopoverBeforeClose","createEvent","cancelable","calcitePopoverBeforeOpen","calcitePopoverClose","calcitePopoverOpen","reposition","delayed","filteredFlipPlacements","arrowEl","floatingEl","flipPlacements","setFocus","componentFocusable","requestUpdate","focusFirstTabbable","updateFocusTrapElements","connectedCallback","_this$mutationObserve","setFilteredPlacements","requestAnimationFrame","setUpReferenceElement","willUpdate","flipPlacementsHandler","openHandler","referenceElementHandler","loaded","referenceElement","disconnectedCallback","_this$mutationObserve2","removeReferences","disconnectFloatingUI","onToggleOpenCloseComponent","setExpandedAttr","setFloatingEl","setTransitionEl","transitionEl","filterValidFlipPlacements","warn","getReferenceElement","connectFloatingUI","addReferences","getId","id","setAttribute","toAriaBoolean","removeAttribute","queryElementRoots","hide","onBeforeOpen","emit","onOpen","onBeforeClose","onClose","hideFloatingUI","storeArrowEl","renderCloseButton","close","getIconScale","renderHeader","heading","headingLevel","headingNode","render","label","displayed","hidden","arrowNode","inert","ariaLabel","ariaLive","role","_templateObject4","FloatingCSS","animation","animationActive","getRoundRobinIndex","index","total","_Popover","properties","reflect","attribute","Number","messageOverrides","customElement","SUPPORTED_MENU_NAV_KEYS","ActionMenu","actionElements","menuButtonClick","toggleOpen","menuButtonId","menuButtonKeyDown","activeMenuItemIndex","action","click","handleActionNavigation","menuId","_open","updateAction","guid2","toggleAttribute","appearance","expanded","calciteActionMenuOpen","menuButtonEl","connectMenuButtonEl","expandedHandler","updateActions","disconnectMenuButtonEl","setTooltipReferenceElement","popoverEl","slottedMenuButtonEl","defaultMenuButtonEl","text","setMenuButtonEl","actions","setDefaultMenuButtonEl","setPopoverEl","handleCalciteActionClick","updateTooltip","tooltips","tooltipEl","handleDefaultSlotChange","previousValue","currentValue","isValidKey","supportedKeys","k","currentIndex","Math","max","handlePopoverOpen","stopPropagation","handlePopoverClose","renderMenuButton","renderMenuItems","_menuButtonEl$id","activeAction","activeDescendantId","_ActionMenu"],"sourceRoot":""}