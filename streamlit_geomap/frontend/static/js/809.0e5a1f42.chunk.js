"use strict";(self.webpackChunkstreamlit_geomap_frontend=self.webpackChunkstreamlit_geomap_frontend||[]).push([[809],{20123:(n,e,o)=>{o.d(e,{V:()=>a});var t=o(69728),r=o(87003);class a extends r.n{constructor(n,e){super(n,"vec4",t.c.Draw,(o,t,r)=>o.setUniform4fv(n,e(t,r)))}}},46702:(n,e,o)=>{var t;o.d(e,{x:()=>t}),function(n){n[n.TRANSPARENT=0]="TRANSPARENT",n[n.OPAQUE=1]="OPAQUE"}(t||(t={}))},50809:(n,e,o)=>{o.d(e,{Cc:()=>f,CC:()=>m,RF:()=>A});var t=o(89379),r=o(69539),a=(o(81806),o(76931)),l=o(55855);var c=o(46702),i=(o(4212),o(14522),o(59581),o(34981),o(81449),o(20123),o(86955),o(69728),o(87003));i.n;var s;o(27374),o(61785),o(66470);!function(n){n[n.Uniform=0]="Uniform",n[n.Varying=1]="Varying",n[n.COUNT=2]="COUNT"}(s||(s={}));var d,u;o(59046),o(89299),o(72468),o(5517),o(42759),o(72106),o(23687);function A(n){return n&&n.enabled&&(function(n){return"extrude"===n.type}(n)||function(n){return"fill"===n.type}(n))&&null!=n.edges}function f(n,e){return function(n,e){if(null==n)return null;const o=null!=n.color?(0,l.ci)(r.A.toUnitRGBA(n.color)):(0,l.fA)(0,0,0,0),c=(0,a.Lz)(n.size),i=(0,a.Lz)(n.extensionLength);switch(n.type){case"solid":return m((0,t.A)({color:o,size:c,extensionLength:i},e));case"sketch":return function(n){return(0,t.A)((0,t.A)((0,t.A)({},v),n),{},{type:d.Sketch})}((0,t.A)({color:o,size:c,extensionLength:i},e));default:return}}(function(n){return n&&n.enabled&&n.edges||null}(n),e)}function m(n){return(0,t.A)((0,t.A)((0,t.A)({},p),n),{},{type:d.Solid})}!function(n){n[n.Solid=0]="Solid",n[n.Sketch=1]="Sketch",n[n.Mixed=2]="Mixed",n[n.COUNT=3]="COUNT"}(d||(d={})),function(n){n[n.REGULAR=0]="REGULAR",n[n.SILHOUETTE=1]="SILHOUETTE"}(u||(u={}));const p={color:(0,l.fA)(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:c.x.OPAQUE,hasSlicePlane:!1},v={color:(0,l.fA)(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:c.x.OPAQUE,hasSlicePlane:!1}},51990:(n,e,o)=>{o.d(e,{Eb:()=>a,_j:()=>l,k5:()=>t});var t,r=o(15941);function a(n){switch(n){case"multiply":default:return t.Multiply;case"ignore":return t.Ignore;case"replace":return t.Replace;case"tint":return t.Tint}}function l(n,e,o){if(null==n||e===t.Ignore)return o[0]=255,o[1]=255,o[2]=255,void(o[3]=255);const a=(0,r.qE)(Math.round(n[3]*i),0,i),l=0===a||e===t.Tint?0:e===t.Replace?s:d;o[0]=(0,r.qE)(Math.round(n[0]*c),0,c),o[1]=(0,r.qE)(Math.round(n[1]*c),0,c),o[2]=(0,r.qE)(Math.round(n[2]*c),0,c),o[3]=a+l}!function(n){n[n.Multiply=1]="Multiply",n[n.Ignore=2]="Ignore",n[n.Replace=3]="Replace",n[n.Tint=4]="Tint"}(t||(t={}));const c=255,i=85,s=i,d=2*i},59046:(n,e,o)=>{o.d(e,{W:()=>l,Y:()=>u});var t,r,a,l,c=o(57528),i=o(4212),s=o(86955),d=o(66470);function u(n,e){switch(e.normalType){case l.Compressed:n.attributes.add(d.r.NORMALCOMPRESSED,"vec2"),n.vertex.code.add((0,s.H)(t||(t=(0,c.A)(["vec3 decompressNormal(vec2 normal) {\nfloat z = 1.0 - abs(normal.x) - abs(normal.y);\nreturn vec3(normal + sign(normal) * min(z, 0.0), z);\n}\nvec3 normalModel() {\nreturn decompressNormal(normalCompressed);\n}"]))));break;case l.Attribute:n.attributes.add(d.r.NORMAL,"vec3"),n.vertex.code.add((0,s.H)(r||(r=(0,c.A)(["vec3 normalModel() {\nreturn normal;\n}"]))));break;case l.ScreenDerivative:n.fragment.code.add((0,s.H)(a||(a=(0,c.A)(["vec3 screenDerivativeNormal(vec3 positionView) {\nreturn normalize(cross(dFdx(positionView), dFdy(positionView)));\n}"]))));break;default:(0,i.Xb)(e.normalType);case l.COUNT:}}!function(n){n[n.Attribute=0]="Attribute",n[n.Compressed=1]="Compressed",n[n.ScreenDerivative=2]="ScreenDerivative",n[n.COUNT=3]="COUNT"}(l||(l={}))},59581:(n,e,o)=>{o.d(e,{A:()=>c});var t,r=o(57528),a=o(51990),l=o(86955);function c(n){n.vertex.code.add((0,l.H)(t||(t=(0,r.A)(["\n    vec4 decodeSymbolColor(vec4 symbolColor, out int colorMixMode) {\n      float symbolAlpha = 0.0;\n\n      const float maxTint = 85.0;\n      const float maxReplace = 170.0;\n      const float scaleAlpha = 3.0;\n\n      if (symbolColor.a > maxReplace) {\n        colorMixMode = ",";\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxReplace);\n      } else if (symbolColor.a > maxTint) {\n        colorMixMode = ",";\n        symbolAlpha = scaleAlpha * (symbolColor.a - maxTint);\n      } else if (symbolColor.a > 0.0) {\n        colorMixMode = ",";\n        symbolAlpha = scaleAlpha * symbolColor.a;\n      } else {\n        colorMixMode = ",";\n        symbolAlpha = 0.0;\n      }\n\n      return vec4(symbolColor.r, symbolColor.g, symbolColor.b, symbolAlpha);\n    }\n  "])),l.H.int(a.k5.Multiply),l.H.int(a.k5.Replace),l.H.int(a.k5.Tint),l.H.int(a.k5.Multiply)))}},81449:(n,e,o)=>{o.d(e,{W:()=>i});var t,r,a,l=o(57528),c=o(86955);function i(n){n.code.add((0,c.H)(t||(t=(0,l.A)(["const float MAX_RGBA_FLOAT =\n255.0 / 256.0 +\n255.0 / 256.0 / 256.0 +\n255.0 / 256.0 / 256.0 / 256.0 +\n255.0 / 256.0 / 256.0 / 256.0 / 256.0;\nconst vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\nvec4 float2rgba(const float value) {\nfloat valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\nvec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\nconst float toU8AsFloat = 1.0 / 255.0;\nreturn fixedPointU8 * toU8AsFloat;\n}"])))),n.code.add((0,c.H)(r||(r=(0,l.A)(["const vec4 RGBA_TO_FLOAT_FACTORS = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgbaTofloat(vec4 rgba) {\nreturn dot(rgba, RGBA_TO_FLOAT_FACTORS);\n}"])))),n.code.add((0,c.H)(a||(a=(0,l.A)(["const vec4 uninterpolatedRGBAToFloatFactors = vec4(\n1.0 / 256.0,\n1.0 / 256.0 / 256.0,\n1.0 / 256.0 / 256.0 / 256.0,\n1.0 / 256.0 / 256.0 / 256.0 / 256.0\n);\nfloat uninterpolatedRGBAToFloat(vec4 rgba) {\nreturn (dot(round(rgba * 255.0), uninterpolatedRGBAToFloatFactors) - 0.5) * 2.0;\n}"]))))}}}]);
//# sourceMappingURL=809.0e5a1f42.chunk.js.map