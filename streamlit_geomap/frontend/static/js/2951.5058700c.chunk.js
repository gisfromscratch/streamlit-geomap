"use strict";(self.webpackChunkstreamlit_geomap_frontend=self.webpackChunkstreamlit_geomap_frontend||[]).push([[2951],{1420:(e,r,t)=>{t.d(r,{g:()=>c});var i=t(89379),s=t(35143),a=t(91967),o=t(34154),n=t(46053),l=(t(81806),t(76460),t(47249),t(85842)),y=t(68002),u=t(46530),p=t(65419);const d={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let c=class extends a.A{constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map(e=>{const r=(0,u.f)(this.floors,e);return e.toExportImageJSON(r)});return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&(0,p.Sk)(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.removeHandles("layer"),e&&this.addHandles([e.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("sublayer-update",e=>this.notifyChange(d[e.propertyName]))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map(e=>e.id).join(","):"show:-1":null}get layerDefs(){var e;const r=!(null===(e=this.floors)||void 0===e||!e.length),t=this.visibleSublayers.filter(e=>null!=e.definitionExpression||r&&null!=e.floorInfo);return t.length?JSON.stringify(t.reduce((e,r)=>{const t=(0,u.f)(this.floors,r),i=(0,o.mA)(t,r.definitionExpression);return null!=i&&(e[r.id]=i),e},{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const r=this.layer.sublayers,t=this.scale,i=r=>{r.visible&&(0===t||(0,y.zx)(t,r.minScale,r.maxScale))&&(r.sublayers?r.sublayers.forEach(i):e.unshift(r))};r&&r.forEach(i);const s=this._get("visibleSublayers");return!s||s.length!==e.length||s.some((r,t)=>e[t]!==r)?e:s}toJSON(){const e=this.layer;let r={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?r.dynamicLayers=this.dynamicLayers:r=(0,i.A)((0,i.A)({},r),{},{layers:this.layers,layerDefs:this.layerDefs}),r}};(0,s._)([(0,n.MZ)({readOnly:!0})],c.prototype,"dynamicLayers",null),(0,s._)([(0,n.MZ)()],c.prototype,"floors",void 0),(0,s._)([(0,n.MZ)({readOnly:!0})],c.prototype,"hasDynamicLayers",null),(0,s._)([(0,n.MZ)()],c.prototype,"layer",null),(0,s._)([(0,n.MZ)({readOnly:!0})],c.prototype,"layers",null),(0,s._)([(0,n.MZ)({readOnly:!0})],c.prototype,"layerDefs",null),(0,s._)([(0,n.MZ)({type:Number})],c.prototype,"scale",void 0),(0,s._)([(0,n.MZ)({readOnly:!0})],c.prototype,"version",null),(0,s._)([(0,n.MZ)({readOnly:!0})],c.prototype,"visibleSublayers",null),c=(0,s._)([(0,l.$)("esri.layers.support.ExportImageParameters")],c)},46530:(e,r,t)=>{function i(e){var r;const t=e.layer;return"floorInfo"in t&&null!==(r=t.floorInfo)&&void 0!==r&&r.floorField&&"floors"in e.view?a(e.view.floors,t.floorInfo.floorField):null}function s(e,r){var t;return"floorInfo"in r&&null!==(t=r.floorInfo)&&void 0!==t&&t.floorField?a(e,r.floorInfo.floorField):null}function a(e,r){if(null===e||void 0===e||!e.length)return null;const t=e.filter(e=>""!==e).map(e=>"'".concat(e,"'"));return t.push("''"),"".concat(r," IN (").concat(t.join(","),") OR ").concat(r," IS NULL")}t.d(r,{E:()=>i,f:()=>s})},82951:(e,r,t)=>{t.r(r),t.d(r,{default:()=>q});var i=t(89379),s=t(35143),a=t(3825),o=t(50076),n=t(27741),l=t(77717),y=t(50346),u=t(46053),p=t(40565),d=(t(81806),t(47249),t(28379)),c=t(85842),h=t(17707),m=t(49140),v=t(76797),g=t(68002),f=t(80963),b=t(25515),S=t(12406),_=t(36648),A=t(19502),x=t(65624),M=t(31362),I=t(11270),O=t(94729),w=t(21617),Z=t(5682),L=t(73907),P=t(78817),E=t(95363),T=t(1420),F=t(16852),D=t(39568),N=t(65419),V=t(38278),j=t(731),J=t(48718),R=t(67478),k=t(61701);let U=class extends((0,x.dM)((0,P.e)((0,Z.j)((0,L.I)((0,_.V)((0,A.b)((0,I.q)((0,O.A)((0,l.P)((0,w.J)((0,S.p)((0,M.d)(b.A))))))))))))){constructor(){super(...arguments),this._exportImageParameters=new T.g({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.elevationInfo=new j.A({mode:"on-the-ground"}),this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null,this._debouncedSaveOperations=(0,y.sg)(async(e,r,i)=>{const{save:s,saveAs:a}=await t.e(6300).then(t.bind(t,56300));switch(e){case k.X.SAVE:return s(this,r);case k.X.SAVE_AS:return a(this,i,r)}})}normalizeCtorArgs(e,r){return"string"==typeof e?(0,i.A)({url:e},r):e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(y.QP).then(()=>this._fetchService(r))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){const t=r.supportedImageFormatTypes;return t&&t.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,t,s){var a,o;if(!this.loaded||!e)return;const n=e.slice().reverse().flatten(e=>{let{sublayers:r}=e;return r&&r.toArray().reverse()}).toArray();let l=!1;const y=(0,m.aB)(s.origin);let u;if(null!==(a=this.capabilities)&&void 0!==a&&a.operations.supportsExportMap&&null!==(o=this.capabilities)&&void 0!==o&&null!==(o=o.exportMap)&&void 0!==o&&o.supportsDynamicLayers)if(y===m.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;l=(0,N.Zx)(n,e,m.Gr.SERVICE)}else if(y>m.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");l=(0,N.Zx)(n,e.sublayers,(0,m.aB)(e.origin)),u=e.originWithPartialOverrides}const p=[],d=(0,i.A)((0,i.A)({writeSublayerStructure:l},s),{},{minimumWritableOrigin:u});let c=l||this.hasVisibleLayersForOrigin(y);n.forEach(e=>{const r=e.write({},d);p.push(r),c=c||"user"===e.originOf("visible")}),p.some(e=>Object.keys(e).length>1)&&(r.layers=p),c&&(r.visibleLayers=n.filter(e=>e.visible).map(e=>e.id))}createExportImageParameters(e,r,t,s){var a,o;const n=(null===s||void 0===s?void 0:s.pixelRatio)||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=null!==(a=null===s||void 0===s?void 0:s.floors)&&void 0!==a?a:null,this._exportImageParameters.scale=(0,g.X_)({extent:e,width:r})*n;const l=this._exportImageParameters.toJSON(),y=null===s||void 0===s||!s.rotation||this.version<10.3?{}:{rotation:-s.rotation},u=null===(o=e)||void 0===o?void 0:o.spatialReference,p=(0,f.YX)(u);l.dpi*=n;const d={};if(null!==s&&void 0!==s&&s.timeExtent){const{start:e,end:r}=s.timeExtent.toJSON();d.time=e&&r&&e===r?""+e:"".concat(null!==e&&void 0!==e?e:"null",",").concat(null!==r&&void 0!==r?r:"null")}else this.timeInfo&&!this.timeInfo.hasLiveData&&(d.time="null,null");return(0,i.A)((0,i.A)((0,i.A)({bbox:e?e.xmin+","+e.ymin+","+e.xmax+","+e.ymax:void 0,bboxSR:p,imageSR:p,size:r+","+t},l),y),d)}async fetchImage(e,r,t,i){const{data:s}=await this._fetchImage("image",e,r,t,i);return s}async fetchImageBitmap(e,r,t,i){const{data:s,url:a}=await this._fetchImage("blob",e,r,t,i);return(0,F.m)(s,a,null===i||void 0===i?void 0:i.signal)}async fetchRecomputedExtents(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const r=(0,i.A)((0,i.A)({},e),{},{query:(0,i.A)((0,i.A)({returnUpdates:!0,f:"json"},this.customParameters),{},{token:this.apiKey})}),{data:t}=await(0,a.A)(this.url,r),{extent:s,fullExtent:o,timeExtent:n}=t,l=s||o;return{fullExtent:l&&v.A.fromJSON(l),timeExtent:n&&J.T.fromJSON({start:n[0],end:n[1]})}}loadAll(){return(0,n.g)(this,e=>{e(this.allSublayers),e(this.subtables)})}async save(e){return this._debouncedSaveOperations(k.X.SAVE,e)}async saveAs(e,r){return this._debouncedSaveOperations(k.X.SAVE_AS,r,e)}serviceSupportsSpatialReference(e){return(0,V.D)(this,e)}async _fetchImage(e,r,t,s,n){var l,u,p;const d={responseType:e,signal:null!==(l=null===n||void 0===n?void 0:n.signal)&&void 0!==l?l:null,query:(0,i.A)((0,i.A)((0,i.A)((0,i.A)((0,i.A)({},this.parsedUrl.query),this.createExportImageParameters(r,t,s,n)),{},{f:"image"},this.refreshParameters),this.customParameters),{},{token:this.apiKey})},c=this.parsedUrl.path+"/export";if(null!=(null===(u=d.query)||void 0===u?void 0:u.dynamicLayers)&&(null===(p=this.capabilities)||void 0===p||null===(p=p.exportMap)||void 0===p||!p.supportsDynamicLayers))throw new o.A("mapimagelayer:dynamiclayer-not-supported","service ".concat(this.url," doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source."),{query:d.query});try{const{data:e}=await(0,a.A)(c,d);return{data:e,url:c}}catch(h){if((0,y.zf)(h))throw h;throw new o.A("mapimagelayer:image-fetch-error","Unable to load image: ".concat(c),{error:h})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:t}=await(0,a.A)(this.parsedUrl.path,{query:(0,i.A)((0,i.A)((0,i.A)({f:"json"},this.parsedUrl.query),this.customParameters),{},{token:this.apiKey}),signal:e});t&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){var r;return!(null==e||null===(r=this.sublayersSourceJSON[e])||void 0===r||!r.visibleLayers)}};(0,s._)([(0,u.MZ)((0,R.P6)("dateFieldsTimeReference"))],U.prototype,"dateFieldsTimeZone",void 0),(0,s._)([(0,u.MZ)({type:Boolean})],U.prototype,"datesInUnknownTimezone",void 0),(0,s._)([(0,u.MZ)()],U.prototype,"dpi",void 0),(0,s._)([(0,u.MZ)()],U.prototype,"elevationInfo",void 0),(0,s._)([(0,u.MZ)()],U.prototype,"gdbVersion",void 0),(0,s._)([(0,u.MZ)()],U.prototype,"imageFormat",void 0),(0,s._)([(0,d.w)("imageFormat",["supportedImageFormatTypes"])],U.prototype,"readImageFormat",null),(0,s._)([(0,u.MZ)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],U.prototype,"imageMaxHeight",void 0),(0,s._)([(0,u.MZ)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],U.prototype,"imageMaxWidth",void 0),(0,s._)([(0,u.MZ)()],U.prototype,"imageTransparency",void 0),(0,s._)([(0,u.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],U.prototype,"isReference",void 0),(0,s._)([(0,u.MZ)({json:{read:!1,write:!1}})],U.prototype,"labelsVisible",void 0),(0,s._)([(0,u.MZ)({type:["ArcGISMapServiceLayer"]})],U.prototype,"operationalLayerType",void 0),(0,s._)([(0,u.MZ)({json:{read:!1,write:!1}})],U.prototype,"popupEnabled",void 0),(0,s._)([(0,u.MZ)((0,R.P6)("preferredTimeReference"))],U.prototype,"preferredTimeZone",void 0),(0,s._)([(0,u.MZ)()],U.prototype,"sourceJSON",void 0),(0,s._)([(0,u.MZ)({json:{write:{ignoreOrigin:!0}}})],U.prototype,"sublayers",void 0),(0,s._)([(0,h.K)("sublayers",{layers:{type:[D.A]},visibleLayers:{type:[p.jz]}})],U.prototype,"writeSublayers",null),(0,s._)([(0,u.MZ)({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],U.prototype,"listMode",void 0),(0,s._)([(0,u.MZ)({json:{read:!1},readOnly:!0,value:"map-image"})],U.prototype,"type",void 0),(0,s._)([(0,u.MZ)(E.OZ)],U.prototype,"url",void 0),U=(0,s._)([(0,c.$)("esri.layers.MapImageLayer")],U);const q=U}}]);
//# sourceMappingURL=2951.5058700c.chunk.js.map