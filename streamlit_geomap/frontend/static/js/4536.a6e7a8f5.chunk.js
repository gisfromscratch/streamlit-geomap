"use strict";(self.webpackChunkstreamlit_geomap_frontend=self.webpackChunkstreamlit_geomap_frontend||[]).push([[4536],{4763:(t,e,n)=>{n.d(e,{C:()=>O,FB:()=>o,ig:()=>R,m7:()=>A,ui:()=>m,vt:()=>f});var o,i,r,s=n(97467),h=n(34761),a=n(20664),l=n(9392),d=n(43047),u=n(55855),c=n(49595),_=n(13927),T=n(75762);function f(t){return t?[(0,_.vt)(t[0]),(0,_.vt)(t[1]),(0,_.vt)(t[2]),(0,_.vt)(t[3]),(0,_.vt)(t[4]),(0,_.vt)(t[5])]:[(0,_.vt)(),(0,_.vt)(),(0,_.vt)(),(0,_.vt)(),(0,_.vt)(),(0,_.vt)()]}function O(t,e){for(let n=0;n<b;n++)(0,_.C)(t[n],e[n]);return t}function m(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:g;const s=(0,h.lw)(T.Rc.get(),e,t);(0,h.B8)(s,s);for(let o=0;o<p;++o){const t=(0,d.t)(T.Km.get(),F[o],s);(0,a.i)(r[o],t[0]/t[3],t[1]/t[3],t[2]/t[3])}!function(t,e){(0,_.Cr)(e[i.FAR_BOTTOM_LEFT],e[i.NEAR_BOTTOM_LEFT],e[i.NEAR_TOP_LEFT],t[o.LEFT]),(0,_.Cr)(e[i.NEAR_BOTTOM_RIGHT],e[i.FAR_BOTTOM_RIGHT],e[i.FAR_TOP_RIGHT],t[o.RIGHT]),(0,_.Cr)(e[i.FAR_BOTTOM_LEFT],e[i.FAR_BOTTOM_RIGHT],e[i.NEAR_BOTTOM_RIGHT],t[o.BOTTOM]),(0,_.Cr)(e[i.NEAR_TOP_LEFT],e[i.NEAR_TOP_RIGHT],e[i.FAR_TOP_RIGHT],t[o.TOP]),(0,_.Cr)(e[i.NEAR_BOTTOM_LEFT],e[i.NEAR_BOTTOM_RIGHT],e[i.NEAR_TOP_RIGHT],t[o.NEAR]),(0,_.Cr)(e[i.FAR_BOTTOM_RIGHT],e[i.FAR_BOTTOM_LEFT],e[i.FAR_TOP_LEFT],t[o.FAR])}(n,r)}function A(t,e){for(let n=0;n<b;n++){const o=t[n];if(o[0]*e[0]+o[1]*e[1]+o[2]*e[2]+o[3]>=e[3])return!1}return!0}function R(t,e){for(let n=0;n<b;n++){const o=t[n];if(!(0,_.b6)(o,e))return!1}return!0}(r=o||(o={}))[r.LEFT=0]="LEFT",r[r.RIGHT=1]="RIGHT",r[r.BOTTOM=2]="BOTTOM",r[r.TOP=3]="TOP",r[r.NEAR=4]="NEAR",r[r.FAR=5]="FAR",function(t){t[t.NEAR_BOTTOM_LEFT=0]="NEAR_BOTTOM_LEFT",t[t.NEAR_BOTTOM_RIGHT=1]="NEAR_BOTTOM_RIGHT",t[t.NEAR_TOP_RIGHT=2]="NEAR_TOP_RIGHT",t[t.NEAR_TOP_LEFT=3]="NEAR_TOP_LEFT",t[t.FAR_BOTTOM_LEFT=4]="FAR_BOTTOM_LEFT",t[t.FAR_BOTTOM_RIGHT=5]="FAR_BOTTOM_RIGHT",t[t.FAR_TOP_RIGHT=6]="FAR_TOP_RIGHT",t[t.FAR_TOP_LEFT=7]="FAR_TOP_LEFT"}(i||(i={}));i.FAR_BOTTOM_RIGHT,i.NEAR_BOTTOM_RIGHT,i.NEAR_BOTTOM_LEFT,i.FAR_BOTTOM_LEFT,i.NEAR_BOTTOM_LEFT,i.NEAR_BOTTOM_RIGHT,i.NEAR_TOP_RIGHT,i.NEAR_TOP_LEFT,i.FAR_BOTTOM_RIGHT,i.FAR_BOTTOM_LEFT,i.FAR_TOP_LEFT,i.FAR_TOP_RIGHT,i.NEAR_BOTTOM_RIGHT,i.FAR_BOTTOM_RIGHT,i.FAR_TOP_RIGHT,i.NEAR_TOP_RIGHT,i.FAR_BOTTOM_LEFT,i.NEAR_BOTTOM_LEFT,i.NEAR_TOP_LEFT,i.FAR_TOP_LEFT,i.FAR_TOP_LEFT,i.NEAR_TOP_LEFT,i.NEAR_TOP_RIGHT,i.FAR_TOP_RIGHT;const b=6,p=8,F=[(0,u.fA)(-1,-1,-1,1),(0,u.fA)(1,-1,-1,1),(0,u.fA)(1,1,-1,1),(0,u.fA)(-1,1,-1,1),(0,u.fA)(-1,-1,1,1),(0,u.fA)(1,-1,1,1),(0,u.fA)(1,1,1,1),(0,u.fA)(-1,1,1,1)],g=(new s.I(c.vt),[(0,l.vt)(),(0,l.vt)(),(0,l.vt)(),(0,l.vt)(),(0,l.vt)(),(0,l.vt)(),(0,l.vt)(),(0,l.vt)()])},49595:(t,e,n)=>{n.d(e,{$e:()=>h,j1:()=>a,mO:()=>l,vt:()=>s});var o=n(97467),i=n(20664),r=n(95925);function s(t){return t?{ray:(0,r.vt)(t.ray),c0:t.c0,c1:t.c1}:{ray:(0,r.vt)(),c0:0,c1:Number.MAX_VALUE}}function h(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s();return(0,r.C)(t,e.ray),e.c0=0,e.c1=Number.MAX_VALUE,e}function a(t,e){return d(t,t.c0,e)}function l(t,e){return d(t,t.c1,e)}function d(t,e,n){return(0,i.f)(n,t.ray.origin,(0,i.g)(n,t.ray.direction,e))}new o.I(()=>s())},94536:(t,e,n)=>{n.d(e,{A:()=>c});var o,i=n(3789),r=n(30015),s=n(20664),h=n(9392),a=n(4763),l=n(95925),d=n(78315),u=n(86994);class c{get bounds(){return this._root.bounds}get halfSize(){return this._root.halfSize}get root(){return this._root.node}get maximumObjectsPerNode(){return this._maximumObjectsPerNode}get maximumDepth(){return this._maximumDepth}get objectCount(){return this._objectCount}constructor(t,e){this.objectToBoundingSphere=t,this._maximumObjectsPerNode=10,this._maximumDepth=20,this._degenerateObjects=new Set,this._root=new _,this._objectCount=0,e&&(void 0!==e.maximumObjectsPerNode&&(this._maximumObjectsPerNode=e.maximumObjectsPerNode),void 0!==e.maximumDepth&&(this._maximumDepth=e.maximumDepth))}destroy(){this._degenerateObjects.clear(),_.clearPool(),v[0]=null,L.prune(),w.prune()}add(t){const e=Array.from(t);this._grow(e);const n=_.acquire();for(const o of e)++this._objectCount,this._isDegenerate(o)?this._degenerateObjects.add(o):(n.init(this._root),this._add(o,n));_.release(n)}remove(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._objectCount-=t.length;const n=_.acquire();for(const o of t){const t=null!==e&&void 0!==e?e:(0,d.e)(this.objectToBoundingSphere(o),H);N(t[3])?(n.init(this._root),O(o,t,n)):this._degenerateObjects.delete(o)}_.release(n),this._shrink()}update(t,e){if(!N(e[3])&&this._isDegenerate(t))return;const n=function(t){return v[0]=t,v}(t);this.remove(n,e),this.add(n)}forEachAlongRay(t,e,n){const o=(0,l.LV)(t,e);T(this._root,t=>{if(!function(t,e){return p((0,d.a)(e.bounds),2*-e.halfSize,P),p((0,d.a)(e.bounds),2*e.halfSize,I),(0,u.O_)(t.origin,t.direction,P,I)}(o,t))return!1;const e=t.node;return e.terminals.forAll(t=>{this._intersectsObject(o,t)&&n(t)}),null!==e.residents&&e.residents.forAll(t=>{this._intersectsObject(o,t)&&n(t)}),!0})}forEachAlongRayWithVerticalOffset(t,e,n,o){const i=(0,l.LV)(t,e);T(this._root,t=>{if(!function(t,e,n){return p((0,d.a)(e.bounds),2*-e.halfSize,P),p((0,d.a)(e.bounds),2*e.halfSize,I),n.applyToMinMax(P,I),(0,u.O_)(t.origin,t.direction,P,I)}(i,t,o))return!1;const e=t.node;return e.terminals.forAll(t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)}),null!==e.residents&&e.residents.forAll(t=>{this._intersectsObjectWithOffset(i,t,o)&&n(t)}),!0})}forEach(t){T(this._root,e=>{const n=e.node;return n.terminals.forAll(t),null!==n.residents&&n.residents.forAll(t),!0}),this._degenerateObjects.forEach(t)}forEachDegenerateObject(t){this._degenerateObjects.forEach(t)}findClosest(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>!0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1/0,r=1/0,h=1/0,l=null;const u=g(t,e),c=s=>{if(--i,!o(s))return;const u=this.objectToBoundingSphere(s);if(!(0,a.m7)(n,u))return;const c=E(t,e,(0,d.a)(u)),_=c-u[3],T=c+u[3];_<r&&(r=_,h=T,l=s)};return f(this._root,o=>{if(i<=0||!(0,a.m7)(n,o.bounds))return!1;if((0,s.g)(j,u,o.halfSize),(0,s.f)(j,j,(0,d.a)(o.bounds)),E(t,e,j)>h)return!1;const r=o.node;return r.terminals.forAll(t=>c(t)),null!==r.residents&&r.residents.forAll(t=>c(t)),!0},t,e),l}forEachInDepthRange(t,e,n,o,i,r,h){let l=-1/0,u=1/0;const _={setRange:t=>{n===c.DepthOrder.FRONT_TO_BACK?(l=Math.max(l,t.near),u=Math.min(u,t.far)):(l=Math.max(l,-t.far),u=Math.min(u,-t.near))}};_.setRange(o);const T=E(e,n,t),O=g(e,n),m=g(e,-n),A=t=>{if(!h(t))return;const o=this.objectToBoundingSphere(t),s=(0,d.a)(o),c=E(e,n,s)-T,f=c-o[3],O=c+o[3];f>u||O<l||!(0,a.m7)(r,o)||i(t,_)};f(this._root,t=>{if(!(0,a.m7)(r,t.bounds))return!1;if((0,s.g)(j,O,t.halfSize),(0,s.f)(j,j,(0,d.a)(t.bounds)),E(e,n,j)-T>u)return!1;if((0,s.g)(j,m,t.halfSize),(0,s.f)(j,j,(0,d.a)(t.bounds)),E(e,n,j)-T<l)return!1;const o=t.node;return o.terminals.forAll(t=>A(t)),null!==o.residents&&o.residents.forAll(t=>A(t)),!0},e,n)}forEachNode(t){T(this._root,e=>t(e.node,e.bounds,e.halfSize,e.depth))}forEachNeighbor(t,e){const n=(0,d.g)(e),o=(0,d.a)(e),i=e=>{const i=this.objectToBoundingSphere(e),r=(0,d.g)(i),h=n+r;return!((0,s.s)((0,d.a)(i),o)-h*h<=0)||t(e)};let r=!0;const h=t=>{r&&(r=i(t))};T(this._root,t=>{const e=(0,d.g)(t.bounds),i=n+e;if((0,s.s)((0,d.a)(t.bounds),o)-i*i>0)return!1;const a=t.node;return a.terminals.forAll(h),r&&null!==a.residents&&a.residents.forAll(h),r}),r&&this.forEachDegenerateObject(h)}_intersectsObject(t,e){const n=this.objectToBoundingSphere(e);return!(n[3]>0)||(0,d.k)(n,t)}_intersectsObjectWithOffset(t,e,n){const o=this.objectToBoundingSphere(e);return!(o[3]>0)||(0,d.k)(n.applyToBoundingSphere(o),t)}_add(t,e){e.advanceTo(this.objectToBoundingSphere(t))?e.node.terminals.push(t):(e.node.residents.push(t),e.node.residents.length>this._maximumObjectsPerNode&&e.depth<this._maximumDepth&&this._split(e))}_split(t){const e=t.node.residents;t.node.residents=null;for(let n=0;n<e.length;n++){const o=_.acquire().init(t);this._add(e.at(n),o),_.release(o)}}_grow(t){if(F(t,t=>this.objectToBoundingSphere(t),z),N(z[3])&&!this._fitsInsideTree(z))if(A(this._root.node))(0,d.e)(z,this._root.bounds),this._root.halfSize=1.25*this._root.bounds[3],this._root.updateBoundsRadiusFromHalfSize();else{const t=this._rootBoundsForRootAsSubNode(z);this._placingRootViolatesMaxDepth(t)?this._rebuildTree(z,t):this._growRootAsSubNode(t),_.release(t)}}_rebuildTree(t,e){(0,s.c)((0,d.a)(G),(0,d.a)(e.bounds)),G[3]=e.halfSize,F([t,G],t=>t,C);const n=_.acquire().init(this._root);this._root.initFrom(null,C,C[3]),this._root.increaseHalfSize(1.25),T(n,t=>(this.add(t.node.terminals.data),null!==t.node.residents&&this.add(t.node.residents.data),!0)),_.release(n)}_placingRootViolatesMaxDepth(t){const e=Math.log(t.halfSize/this._root.halfSize)*Math.LOG2E;let n=0;return T(this._root,t=>(n=Math.max(n,t.depth),n+e<=this._maximumDepth)),n+e>this._maximumDepth}_rootBoundsForRootAsSubNode(t){const e=t[3],n=t;let o=-1/0;const i=this._root.bounds,r=this._root.halfSize;for(let h=0;h<3;h++){const t=i[h]-r-(n[h]-e),s=n[h]+e-(i[h]+r),a=Math.max(0,Math.ceil(t/(2*r))),l=Math.max(0,Math.ceil(s/(2*r)))+1,d=2**Math.ceil(Math.log(a+l)*Math.LOG2E);o=Math.max(o,d),D[h].min=a,D[h].max=l}for(let h=0;h<3;h++){let t=D[h].min,e=D[h].max;const n=(o-(t+e))/2;t+=Math.ceil(n),e+=Math.floor(n);const s=i[h]-r-t*r*2;x[h]=s+(e+t)*r}const s=o*r;return x[3]=s*S,_.acquire().initFrom(null,x,s,0)}_growRootAsSubNode(t){const e=this._root.node;(0,s.c)((0,d.a)(z),(0,d.a)(this._root.bounds)),z[3]=this._root.halfSize,this._root.init(t),t.advanceTo(z,null,!0),t.node.children=e.children,t.node.residents=e.residents,t.node.terminals=e.terminals}_shrink(){for(;;){const t=this._findShrinkIndex();if(-1===t)break;this._root.advance(t),this._root.depth=0}}_findShrinkIndex(){if(0!==this._root.node.terminals.length||this._root.isLeaf())return-1;let t=null;const e=this._root.node.children;let n=0,o=0;for(;o<e.length&&null==t;)n=o++,t=e[n];for(;o<e.length;)if(e[o++])return-1;return n}_isDegenerate(t){return!N(this.objectToBoundingSphere(t)[3])}_fitsInsideTree(t){const e=this._root.bounds,n=this._root.halfSize;return t[3]<=n&&t[0]>=e[0]-n&&t[0]<=e[0]+n&&t[1]>=e[1]-n&&t[1]<=e[1]+n&&t[2]>=e[2]-n&&t[2]<=e[2]+n}toJSON(){const{maximumDepth:t,maximumObjectsPerNode:e,_objectCount:n}=this,o=this._nodeToJSON(this._root.node);return{maximumDepth:t,maximumObjectsPerNode:e,objectCount:n,root:{bounds:this._root.bounds,halfSize:this._root.halfSize,depth:this._root.depth,node:o}}}_nodeToJSON(t){var e,n;const o=t.children.map(t=>t?this._nodeToJSON(t):null),i=null===(e=t.residents)||void 0===e?void 0:e.map(t=>this.objectToBoundingSphere(t)),r=null===(n=t.terminals)||void 0===n?void 0:n.map(t=>this.objectToBoundingSphere(t));return{children:o,residents:i,terminals:r}}static fromJSON(t){const e=new c(t=>t,{maximumDepth:t.maximumDepth,maximumObjectsPerNode:t.maximumObjectsPerNode});return e._objectCount=t.objectCount,e._root.initFrom(t.root.node,t.root.bounds,t.root.halfSize,t.root.depth),e}}class _{constructor(){this.bounds=(0,d.c)(),this.halfSize=0,this.initFrom(null,null,0,0)}init(t){return this.initFrom(t.node,t.bounds,t.halfSize,t.depth)}initFrom(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.depth;return this.node=null!=t?t:_.createEmptyNode(),e&&(0,d.e)(e,this.bounds),this.halfSize=n,this.depth=o,this}increaseHalfSize(t){this.halfSize*=t,this.updateBoundsRadiusFromHalfSize()}updateBoundsRadiusFromHalfSize(){this.bounds[3]=this.halfSize*S}advance(t){let e=this.node.children[t];e||(e=_.createEmptyNode(),this.node.children[t]=e),this.node=e,this.halfSize/=2,this.depth++;const n=M[t];return this.bounds[0]+=n[0]*this.halfSize,this.bounds[1]+=n[1]*this.halfSize,this.bounds[2]+=n[2]*this.halfSize,this.updateBoundsRadiusFromHalfSize(),this}advanceTo(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];for(;;){if(this.isTerminalFor(t))return e&&e(this,-1),!0;if(this.isLeaf()){if(!n)return e&&e(this,-1),!1;this.node.residents=null}const o=this._childIndex(t);e&&e(this,o),this.advance(o)}}isLeaf(){return null!=this.node.residents}isTerminalFor(t){return t[3]>this.halfSize/2}_childIndex(t){const e=this.bounds;return(e[0]<t[0]?1:0)+(e[1]<t[1]?2:0)+(e[2]<t[2]?4:0)}static createEmptyNode(){return{children:[null,null,null,null,null,null,null,null],terminals:new r.A({shrink:!0}),residents:new r.A({shrink:!0})}}static acquire(){return _._pool.acquire()}static release(t){_._pool.release(t)}static clearPool(){_._pool.prune()}}function T(t,e){let n=_.acquire().init(t);const o=[n];for(;0!==o.length;){if(n=o.pop(),e(n)&&!n.isLeaf())for(let t=0;t<n.node.children.length;t++)n.node.children[t]&&o.push(_.acquire().init(n).advance(t));_.release(n)}}function f(t,e,n){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:c.DepthOrder.FRONT_TO_BACK,i=_.acquire().init(t);const r=[i];for(function(t,e,n){if(!w.length)for(let o=0;o<8;++o)w.push({index:0,distance:0});for(let o=0;o<8;++o){const n=M[o];w.data[o].index=o,w.data[o].distance=E(t,e,n)}w.sort((t,e)=>t.distance-e.distance);for(let o=0;o<8;++o)n[o]=w.data[o].index}(n,o,y);0!==r.length;){if(i=r.pop(),e(i)&&!i.isLeaf())for(let t=7;t>=0;--t){const e=y[t];i.node.children[e]&&r.push(_.acquire().init(i).advance(e))}_.release(i)}}function O(t,e,n){L.clear();const o=n.advanceTo(e,(t,e)=>{L.push(t.node),L.push(e)})?n.node.terminals:n.node.residents;if(o.removeUnordered(t),0===o.length)for(let i=L.length-2;i>=0&&m(L.data[i],L.data[i+1]);i-=2);}function m(t,e){return e>=0&&(t.children[e]=null),!!A(t)&&(null===t.residents&&(t.residents=new r.A({shrink:!0})),!0)}function A(t){if(0!==t.terminals.length)return!1;if(null!==t.residents)return 0===t.residents.length;for(let e=0;e<t.children.length;e++)if(t.children[e])return!1;return!0}function R(t,e){t[0]=Math.min(t[0],e[0]-e[3]),t[1]=Math.min(t[1],e[1]-e[3]),t[2]=Math.min(t[2],e[2]-e[3])}function b(t,e){t[0]=Math.max(t[0],e[0]+e[3]),t[1]=Math.max(t[1],e[1]+e[3]),t[2]=Math.max(t[2],e[2]+e[3])}function p(t,e,n){n[0]=t[0]+e,n[1]=t[1]+e,n[2]=t[2]+e}function F(t,e,n){P[0]=1/0,P[1]=1/0,P[2]=1/0,I[0]=-1/0,I[1]=-1/0,I[2]=-1/0;for(const o of t){const t=e(o);N(t[3])&&(R(P,t),b(I,t))}(0,s.m)((0,d.a)(n),P,I,.5),n[3]=Math.max(I[0]-P[0],I[1]-P[1],I[2]-P[2])/2}function g(t,e){let n,o=1/0;for(let i=0;i<8;++i){const r=E(t,e,B[i]);r<o&&(o=r,n=B[i])}return n}function E(t,e,n){return e*(t[0]*n[0]+t[1]*n[1]+t[2]*n[2])}function N(t){return!isNaN(t)&&t!==-1/0&&t!==1/0&&t>0}(o=_)._pool=new i.A(o),function(t){var e;(e=t.DepthOrder||(t.DepthOrder={}))[e.FRONT_TO_BACK=1]="FRONT_TO_BACK",e[e.BACK_TO_FRONT=-1]="BACK_TO_FRONT"}(c||(c={}));const M=[(0,h.fA)(-1,-1,-1),(0,h.fA)(1,-1,-1),(0,h.fA)(-1,1,-1),(0,h.fA)(1,1,-1),(0,h.fA)(-1,-1,1),(0,h.fA)(1,-1,1),(0,h.fA)(-1,1,1),(0,h.fA)(1,1,1)],B=[(0,h.fA)(-1,-1,-1),(0,h.fA)(-1,-1,1),(0,h.fA)(-1,1,-1),(0,h.fA)(-1,1,1),(0,h.fA)(1,-1,-1),(0,h.fA)(1,-1,1),(0,h.fA)(1,1,-1),(0,h.fA)(1,1,1)],S=Math.sqrt(3),v=[null];const x=(0,d.c)(),j=(0,h.vt)(),P=(0,h.vt)(),I=(0,h.vt)(),L=new r.A,H=(0,d.c)(),z=(0,d.c)(),G=(0,d.c)(),C=(0,d.c)(),D=[{min:0,max:0},{min:0,max:0},{min:0,max:0}],w=new r.A,y=[0,0,0,0,0,0,0,0]}}]);
//# sourceMappingURL=4536.a6e7a8f5.chunk.js.map