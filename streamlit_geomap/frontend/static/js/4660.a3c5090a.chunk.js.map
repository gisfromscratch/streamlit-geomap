{"version":3,"file":"static/js/4660.a3c5090a.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/chunks/interactive.js","../node_modules/@esri/calcite-components/dist/chunks/observers.js","../node_modules/@esri/calcite-components/dist/components/calcite-icon/customElement.js","../node_modules/@esri/calcite-components/dist/chunks/logger.js","../node_modules/lit-html/src/async-directive.ts","../node_modules/lit-html/src/directives/ref.ts","../node_modules/@esri/calcite-components/dist/components/calcite-dropdown-item/customElement.js","../node_modules/@esri/calcite-components/dist/chunks/resources6.js","../node_modules/@esri/calcite-components/dist/chunks/component.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { html } from \"lit-html\";\nimport { safeClassMap } from \"@arcgis/lumina\";\nfunction interceptedClick() {\n  const { disabled } = this;\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\nfunction onPointerDown(event) {\n  const interactiveElement = event.target;\n  if (interactiveElement.disabled) {\n    event.preventDefault();\n  }\n}\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\nfunction onNonBubblingWhenDisabledMouseEvent(event) {\n  const interactiveElement = event.target;\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\nconst captureOnlyOptions = { capture: true };\nfunction updateHostInteraction(component) {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n    if (component.el.contains(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    blockInteraction(component);\n    return;\n  }\n  restoreInteraction(component);\n  component.el.removeAttribute(\"aria-disabled\");\n}\nfunction blockInteraction(component) {\n  component.el.click = interceptedClick;\n  addInteractionListeners(component.el);\n}\nfunction addInteractionListeners(element) {\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) => element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nfunction restoreInteraction(component) {\n  delete component.el.click;\n  removeInteractionListeners(component.el);\n}\nfunction removeInteractionListeners(element) {\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) => element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions));\n}\nconst CSS = {\n  container: \"interaction-container\"\n};\nconst InteractiveContainer = ({ children, disabled }) => html`<div class=${safeClassMap(CSS.container)} .inert=${disabled}>${children}</div>`;\nexport {\n  InteractiveContainer as I,\n  updateHostInteraction as u\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { isServer } from \"lit\";\nfunction createObserver(type, callback, options) {\n  if (isServer) {\n    return void 0;\n  }\n  const Observer = getObserver(type);\n  return new Observer(callback, options);\n}\nfunction getObserver(type) {\n  class ExtendedMutationObserver extends window.MutationObserver {\n    constructor(callback) {\n      super(callback);\n      this.observedEntry = [];\n      this.callback = callback;\n    }\n    observe(target, options) {\n      this.observedEntry.push({ target, options });\n      return super.observe(target, options);\n    }\n    unobserve(target) {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n  return function() {\n    return type === \"intersection\" ? window.IntersectionObserver : type === \"mutation\" ? ExtendedMutationObserver : window.ResizeObserver;\n  }();\n}\nexport {\n  createObserver as c\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { g as getAssetPath, c as customElement } from \"../../chunks/runtime.js\";\nimport { isServer, nothing, svg, html } from \"lit\";\nimport { LitElement, safeClassMap } from \"@arcgis/lumina\";\nimport { g as getElementDir, t as toAriaBoolean } from \"../../chunks/dom.js\";\nimport { c as createObserver } from \"../../chunks/observers.js\";\nimport { l as logger } from \"../../chunks/logger.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst CSS = {\n  flipRtl: \"flip-rtl\"\n};\nconst iconCache = {};\nconst requestCache = {};\nconst scaleToPx = {\n  s: 16,\n  m: 24,\n  l: 32\n};\nfunction generateIconId({ icon, scale }) {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\nasync function fetchIcon(props) {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`)).then((resp) => resp.json()).catch(() => {\n      logger.error(`${props.icon} (${props.scale}) icon failed to load`);\n      return \"\";\n    });\n  }\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n  return path;\n}\nfunction getCachedIconData(props) {\n  return getCachedIconDataByKey(generateIconId(props));\n}\nfunction getCachedIconDataByKey(id) {\n  return iconCache[id];\n}\nfunction normalizeIconName(name) {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n    name = parts.map((part, partIndex) => {\n      return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n        const isFirstCharInName = partIndex === 0 && offset === 0;\n        if (isFirstCharInName) {\n          return match;\n        }\n        return match.toUpperCase();\n      });\n    }).join(\"\");\n  }\n  return numberLeadingName ? `i${name}` : name;\n}\nconst styles = css`:host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}`;\nclass Icon extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.visible = false;\n    this.flipRtl = false;\n    this.icon = null;\n    this.preload = false;\n    this.scale = \"m\";\n  }\n  static {\n    this.properties = { pathData: [16, {}, { state: true }], visible: [16, {}, { state: true }], flipRtl: [7, {}, { reflect: true, type: Boolean }], icon: [3, {}, { reflect: true }], preload: [7, {}, { reflect: true, type: Boolean }], scale: [3, {}, { reflect: true }], textLabel: 1 };\n  }\n  static {\n    this.styles = styles;\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.preload) {\n      this.visible = true;\n      this.loadIconPathData();\n      return;\n    }\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n  willUpdate(changes) {\n    if (changes.has(\"icon\") && (this.hasUpdated || this.icon !== null) || changes.has(\"scale\") && (this.hasUpdated || this.scale !== \"m\")) {\n      this.loadIconPathData();\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n  async loadIconPathData() {\n    const { icon, scale, visible } = this;\n    if (isServer || !icon || !visible) {\n      return;\n    }\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || await fetchIcon(fetchIconProps);\n    if (icon !== this.icon) {\n      return;\n    }\n    this.pathData = pathData;\n  }\n  waitUntilVisible(callback) {\n    this.intersectionObserver = createObserver(\"intersection\", (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.intersectionObserver.disconnect();\n          this.intersectionObserver = null;\n          callback();\n        }\n      });\n    }, { rootMargin: \"50px\" });\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n    this.intersectionObserver.observe(this.el);\n  }\n  render() {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    this.el.ariaHidden = toAriaBoolean(!semantic);\n    this.el.ariaLabel = semantic ? textLabel : null;\n    this.el.role = semantic ? \"img\" : null;\n    return html`<svg aria-hidden=true class=${safeClassMap({\n      [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n      svg: true\n    })} fill=currentColor height=100% viewBox=${`0 0 ${size} ${size}`} width=100% xmlns=http://www.w3.org/2000/svg>${paths.map((path) => typeof path === \"string\" ? svg`<path d=${path ?? nothing} />` : svg`<path d=${path.d ?? nothing} opacity=${(\"opacity\" in path ? path.opacity : 1) ?? nothing} />`)}</svg>`;\n  }\n}\ncustomElement(\"calcite-icon\", Icon);\nexport {\n  Icon\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logLevel } from \"./runtime.js\";\nconst loggedDeprecations = /* @__PURE__ */ new Set();\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10\n};\nfunction willLog(level) {\n  return logLevels[level] >= logLevels[logLevel];\n}\nfunction forwardToConsole(level, ...data) {\n  if (!willLog(level)) {\n    return;\n  }\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\nlet listFormatter;\nconst logger = {\n  debug: (message) => forwardToConsole(\"debug\", message),\n  info: (message) => forwardToConsole(\"info\", message),\n  warn: (message) => forwardToConsole(\"warn\", message),\n  error: (message) => forwardToConsole(\"error\", message),\n  trace: (message) => forwardToConsole(\"trace\", message),\n  deprecated\n};\nfunction deprecated(context, { component, name, suggested, removalVersion }) {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n  loggedDeprecations.add(key);\n  const multiSuggestions = Array.isArray(suggested);\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n  forwardToConsole(\"warn\", message);\n}\nexport {\n  logger as l\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Overview:\n *\n * This module is designed to add support for an async `setValue` API and\n * `disconnected` callback to directives with the least impact on the core\n * runtime or payload when that feature is not used.\n *\n * The strategy is to introduce a `AsyncDirective` subclass of\n * `Directive` that climbs the \"parent\" tree in its constructor to note which\n * branches of lit-html's \"logical tree\" of data structures contain such\n * directives and thus need to be crawled when a subtree is being cleared (or\n * manually disconnected) in order to run the `disconnected` callback.\n *\n * The \"nodes\" of the logical tree include Parts, TemplateInstances (for when a\n * TemplateResult is committed to a value of a ChildPart), and Directives; these\n * all implement a common interface called `DisconnectableChild`. Each has a\n * `_$parent` reference which is set during construction in the core code, and a\n * `_$disconnectableChildren` field which is initially undefined.\n *\n * The sparse tree created by means of the `AsyncDirective` constructor\n * crawling up the `_$parent` tree and placing a `_$disconnectableChildren` Set\n * on each parent that includes each child that contains a\n * `AsyncDirective` directly or transitively via its children. In order to\n * notify connection state changes and disconnect (or reconnect) a tree, the\n * `_$notifyConnectionChanged` API is patched onto ChildParts as a directive\n * climbs the parent tree, which is called by the core when clearing a part if\n * it exists. When called, that method iterates over the sparse tree of\n * Set<DisconnectableChildren> built up by AsyncDirectives, and calls\n * `_$notifyDirectiveConnectionChanged` on any directives that are encountered\n * in that tree, running the required callbacks.\n *\n * A given \"logical tree\" of lit-html data-structures might look like this:\n *\n *  ChildPart(N1) _$dC=[D2,T3]\n *   ._directive\n *     AsyncDirective(D2)\n *   ._value // user value was TemplateResult\n *     TemplateInstance(T3) _$dC=[A4,A6,N10,N12]\n *      ._$parts[]\n *        AttributePart(A4) _$dC=[D5]\n *         ._directives[]\n *           AsyncDirective(D5)\n *        AttributePart(A6) _$dC=[D7,D8]\n *         ._directives[]\n *           AsyncDirective(D7)\n *           Directive(D8) _$dC=[D9]\n *            ._directive\n *              AsyncDirective(D9)\n *        ChildPart(N10) _$dC=[D11]\n *         ._directive\n *           AsyncDirective(D11)\n *         ._value\n *           string\n *        ChildPart(N12) _$dC=[D13,N14,N16]\n *         ._directive\n *           AsyncDirective(D13)\n *         ._value // user value was iterable\n *           Array<ChildPart>\n *             ChildPart(N14) _$dC=[D15]\n *              ._value\n *                string\n *             ChildPart(N16) _$dC=[D17,T18]\n *              ._directive\n *                AsyncDirective(D17)\n *              ._value // user value was TemplateResult\n *                TemplateInstance(T18) _$dC=[A19,A21,N25]\n *                 ._$parts[]\n *                   AttributePart(A19) _$dC=[D20]\n *                    ._directives[]\n *                      AsyncDirective(D20)\n *                   AttributePart(A21) _$dC=[22,23]\n *                    ._directives[]\n *                      AsyncDirective(D22)\n *                      Directive(D23) _$dC=[D24]\n *                       ._directive\n *                         AsyncDirective(D24)\n *                   ChildPart(N25) _$dC=[D26]\n *                    ._directive\n *                      AsyncDirective(D26)\n *                    ._value\n *                      string\n *\n * Example 1: The directive in ChildPart(N12) updates and returns `nothing`. The\n * ChildPart will _clear() itself, and so we need to disconnect the \"value\" of\n * the ChildPart (but not its directive). In this case, when `_clear()` calls\n * `_$notifyConnectionChanged()`, we don't iterate all of the\n * _$disconnectableChildren, rather we do a value-specific disconnection: i.e.\n * since the _value was an Array<ChildPart> (because an iterable had been\n * committed), we iterate the array of ChildParts (N14, N16) and run\n * `setConnected` on them (which does recurse down the full tree of\n * `_$disconnectableChildren` below it, and also removes N14 and N16 from N12's\n * `_$disconnectableChildren`). Once the values have been disconnected, we then\n * check whether the ChildPart(N12)'s list of `_$disconnectableChildren` is empty\n * (and would remove it from its parent TemplateInstance(T3) if so), but since\n * it would still contain its directive D13, it stays in the disconnectable\n * tree.\n *\n * Example 2: In the course of Example 1, `setConnected` will reach\n * ChildPart(N16); in this case the entire part is being disconnected, so we\n * simply iterate all of N16's `_$disconnectableChildren` (D17,T18) and\n * recursively run `setConnected` on them. Note that we only remove children\n * from `_$disconnectableChildren` for the top-level values being disconnected\n * on a clear; doing this bookkeeping lower in the tree is wasteful since it's\n * all being thrown away.\n *\n * Example 3: If the LitElement containing the entire tree above becomes\n * disconnected, it will run `childPart.setConnected()` (which calls\n * `childPart._$notifyConnectionChanged()` if it exists); in this case, we\n * recursively run `setConnected()` over the entire tree, without removing any\n * children from `_$disconnectableChildren`, since this tree is required to\n * re-connect the tree, which does the same operation, simply passing\n * `isConnected: true` down the tree, signaling which callback to run.\n */\n\nimport {AttributePart, ChildPart, Disconnectable, Part} from './lit-html.js';\nimport {isSingleExpression} from './directive-helpers.js';\nimport {Directive, PartInfo, PartType} from './directive.js';\nexport * from './directive.js';\n\nconst DEV_MODE = true;\n\n/**\n * Recursively walks down the tree of Parts/TemplateInstances/Directives to set\n * the connected state of directives and run `disconnected`/ `reconnected`\n * callbacks.\n *\n * @return True if there were children to disconnect; false otherwise\n */\nconst notifyChildrenConnectedChanged = (\n  parent: Disconnectable,\n  isConnected: boolean\n): boolean => {\n  const children = parent._$disconnectableChildren;\n  if (children === undefined) {\n    return false;\n  }\n  for (const obj of children) {\n    // The existence of `_$notifyDirectiveConnectionChanged` is used as a \"brand\" to\n    // disambiguate AsyncDirectives from other DisconnectableChildren\n    // (as opposed to using an instanceof check to know when to call it); the\n    // redundancy of \"Directive\" in the API name is to avoid conflicting with\n    // `_$notifyConnectionChanged`, which exists `ChildParts` which are also in\n    // this list\n    // Disconnect Directive (and any nested directives contained within)\n    // This property needs to remain unminified.\n    (obj as AsyncDirective)['_$notifyDirectiveConnectionChanged']?.(\n      isConnected,\n      false\n    );\n    // Disconnect Part/TemplateInstance\n    notifyChildrenConnectedChanged(obj, isConnected);\n  }\n  return true;\n};\n\n/**\n * Removes the given child from its parent list of disconnectable children, and\n * if the parent list becomes empty as a result, removes the parent from its\n * parent, and so forth up the tree when that causes subsequent parent lists to\n * become empty.\n */\nconst removeDisconnectableFromParent = (obj: Disconnectable) => {\n  let parent, children;\n  do {\n    if ((parent = obj._$parent) === undefined) {\n      break;\n    }\n    children = parent._$disconnectableChildren!;\n    children.delete(obj);\n    obj = parent;\n  } while (children?.size === 0);\n};\n\nconst addDisconnectableToParent = (obj: Disconnectable) => {\n  // Climb the parent tree, creating a sparse tree of children needing\n  // disconnection\n  for (let parent; (parent = obj._$parent); obj = parent) {\n    let children = parent._$disconnectableChildren;\n    if (children === undefined) {\n      parent._$disconnectableChildren = children = new Set();\n    } else if (children.has(obj)) {\n      // Once we've reached a parent that already contains this child, we\n      // can short-circuit\n      break;\n    }\n    children.add(obj);\n    installDisconnectAPI(parent);\n  }\n};\n\n/**\n * Changes the parent reference of the ChildPart, and updates the sparse tree of\n * Disconnectable children accordingly.\n *\n * Note, this method will be patched onto ChildPart instances and called from\n * the core code when parts are moved between different parents.\n */\nfunction reparentDisconnectables(this: ChildPart, newParent: Disconnectable) {\n  if (this._$disconnectableChildren !== undefined) {\n    removeDisconnectableFromParent(this);\n    this._$parent = newParent;\n    addDisconnectableToParent(this);\n  } else {\n    this._$parent = newParent;\n  }\n}\n\n/**\n * Sets the connected state on any directives contained within the committed\n * value of this part (i.e. within a TemplateInstance or iterable of\n * ChildParts) and runs their `disconnected`/`reconnected`s, as well as within\n * any directives stored on the ChildPart (when `valueOnly` is false).\n *\n * `isClearingValue` should be passed as `true` on a top-level part that is\n * clearing itself, and not as a result of recursively disconnecting directives\n * as part of a `clear` operation higher up the tree. This both ensures that any\n * directive on this ChildPart that produced a value that caused the clear\n * operation is not disconnected, and also serves as a performance optimization\n * to avoid needless bookkeeping when a subtree is going away; when clearing a\n * subtree, only the top-most part need to remove itself from the parent.\n *\n * `fromPartIndex` is passed only in the case of a partial `_clear` running as a\n * result of truncating an iterable.\n *\n * Note, this method will be patched onto ChildPart instances and called from the\n * core code when parts are cleared or the connection state is changed by the\n * user.\n */\nfunction notifyChildPartConnectedChanged(\n  this: ChildPart,\n  isConnected: boolean,\n  isClearingValue = false,\n  fromPartIndex = 0\n) {\n  const value = this._$committedValue;\n  const children = this._$disconnectableChildren;\n  if (children === undefined || children.size === 0) {\n    return;\n  }\n  if (isClearingValue) {\n    if (Array.isArray(value)) {\n      // Iterable case: Any ChildParts created by the iterable should be\n      // disconnected and removed from this ChildPart's disconnectable\n      // children (starting at `fromPartIndex` in the case of truncation)\n      for (let i = fromPartIndex; i < value.length; i++) {\n        notifyChildrenConnectedChanged(value[i], false);\n        removeDisconnectableFromParent(value[i]);\n      }\n    } else if (value != null) {\n      // TemplateInstance case: If the value has disconnectable children (will\n      // only be in the case that it is a TemplateInstance), we disconnect it\n      // and remove it from this ChildPart's disconnectable children\n      notifyChildrenConnectedChanged(value as Disconnectable, false);\n      removeDisconnectableFromParent(value as Disconnectable);\n    }\n  } else {\n    notifyChildrenConnectedChanged(this, isConnected);\n  }\n}\n\n/**\n * Patches disconnection API onto ChildParts.\n */\nconst installDisconnectAPI = (obj: Disconnectable) => {\n  if ((obj as ChildPart).type == PartType.CHILD) {\n    (obj as ChildPart)._$notifyConnectionChanged ??=\n      notifyChildPartConnectedChanged;\n    (obj as ChildPart)._$reparentDisconnectables ??= reparentDisconnectables;\n  }\n};\n\n/**\n * An abstract `Directive` base class whose `disconnected` method will be\n * called when the part containing the directive is cleared as a result of\n * re-rendering, or when the user calls `part.setConnected(false)` on\n * a part that was previously rendered containing the directive (as happens\n * when e.g. a LitElement disconnects from the DOM).\n *\n * If `part.setConnected(true)` is subsequently called on a\n * containing part, the directive's `reconnected` method will be called prior\n * to its next `update`/`render` callbacks. When implementing `disconnected`,\n * `reconnected` should also be implemented to be compatible with reconnection.\n *\n * Note that updates may occur while the directive is disconnected. As such,\n * directives should generally check the `this.isConnected` flag during\n * render/update to determine whether it is safe to subscribe to resources\n * that may prevent garbage collection.\n */\nexport abstract class AsyncDirective extends Directive {\n  // As opposed to other Disconnectables, AsyncDirectives always get notified\n  // when the RootPart connection changes, so the public `isConnected`\n  // is a locally stored variable initialized via its part's getter and synced\n  // via `_$notifyDirectiveConnectionChanged`. This is cheaper than using\n  // the _$isConnected getter, which has to look back up the tree each time.\n  /**\n   * The connection state for this Directive.\n   */\n  isConnected!: boolean;\n\n  // @internal\n  override _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /**\n   * Initialize the part with internal fields\n   * @param part\n   * @param parent\n   * @param attributeIndex\n   */\n  override _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    super._$initialize(part, parent, attributeIndex);\n    addDisconnectableToParent(this);\n    this.isConnected = part._$isConnected;\n  }\n  // This property needs to remain unminified.\n  /**\n   * Called from the core code when a directive is going away from a part (in\n   * which case `shouldRemoveFromParent` should be true), and from the\n   * `setChildrenConnected` helper function when recursively changing the\n   * connection state of a tree (in which case `shouldRemoveFromParent` should\n   * be false).\n   *\n   * @param isConnected\n   * @param isClearingDirective - True when the directive itself is being\n   *     removed; false when the tree is being disconnected\n   * @internal\n   */\n  override ['_$notifyDirectiveConnectionChanged'](\n    isConnected: boolean,\n    isClearingDirective = true\n  ) {\n    if (isConnected !== this.isConnected) {\n      this.isConnected = isConnected;\n      if (isConnected) {\n        this.reconnected?.();\n      } else {\n        this.disconnected?.();\n      }\n    }\n    if (isClearingDirective) {\n      notifyChildrenConnectedChanged(this, isConnected);\n      removeDisconnectableFromParent(this);\n    }\n  }\n\n  /**\n   * Sets the value of the directive's Part outside the normal `update`/`render`\n   * lifecycle of a directive.\n   *\n   * This method should not be called synchronously from a directive's `update`\n   * or `render`.\n   *\n   * @param directive The directive to update\n   * @param value The value to set\n   */\n  setValue(value: unknown) {\n    if (isSingleExpression(this.__part as unknown as PartInfo)) {\n      this.__part._$setValue(value, this);\n    } else {\n      // this.__attributeIndex will be defined in this case, but\n      // assert it in dev mode\n      if (DEV_MODE && this.__attributeIndex === undefined) {\n        throw new Error(`Expected this.__attributeIndex to be a number`);\n      }\n      const newValues = [...(this.__part._$committedValue as Array<unknown>)];\n      newValues[this.__attributeIndex!] = value;\n      (this.__part as AttributePart)._$setValue(newValues, this, 0);\n    }\n  }\n\n  /**\n   * User callbacks for implementing logic to release any resources/subscriptions\n   * that may have been retained by this directive. Since directives may also be\n   * re-connected, `reconnected` should also be implemented to restore the\n   * working state of the directive prior to the next render.\n   */\n  protected disconnected() {}\n  protected reconnected() {}\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {nothing, ElementPart} from '../lit-html.js';\nimport {directive, AsyncDirective} from '../async-directive.js';\n\n/**\n * Creates a new Ref object, which is container for a reference to an element.\n */\nexport const createRef = <T = Element>() => new Ref<T>();\n\n/**\n * An object that holds a ref value.\n */\nclass Ref<T = Element> {\n  /**\n   * The current Element value of the ref, or else `undefined` if the ref is no\n   * longer rendered.\n   */\n  readonly value?: T;\n}\n\nexport type {Ref};\n\ninterface RefInternal {\n  value: Element | undefined;\n}\n\n// When callbacks are used for refs, this map tracks the last value the callback\n// was called with, for ensuring a directive doesn't clear the ref if the ref\n// has already been rendered to a new spot. It is double-keyed on both the\n// context (`options.host`) and the callback, since we auto-bind class methods\n// to `options.host`.\nconst lastElementForContextAndCallback = new WeakMap<\n  object,\n  WeakMap<Function, Element | undefined>\n>();\n\nexport type RefOrCallback<T = Element> = Ref<T> | ((el: T | undefined) => void);\n\nclass RefDirective extends AsyncDirective {\n  private _element?: Element;\n  private _ref?: RefOrCallback;\n  private _context?: object;\n\n  render(_ref?: RefOrCallback) {\n    return nothing;\n  }\n\n  override update(part: ElementPart, [ref]: Parameters<this['render']>) {\n    const refChanged = ref !== this._ref;\n    if (refChanged && this._ref !== undefined) {\n      // The ref passed to the directive has changed;\n      // unset the previous ref's value\n      this._updateRefValue(undefined);\n    }\n    if (refChanged || this._lastElementForRef !== this._element) {\n      // We either got a new ref or this is the first render;\n      // store the ref/element & update the ref value\n      this._ref = ref;\n      this._context = part.options?.host;\n      this._updateRefValue((this._element = part.element));\n    }\n    return nothing;\n  }\n\n  private _updateRefValue(element: Element | undefined) {\n    if (!this.isConnected) {\n      element = undefined;\n    }\n    if (typeof this._ref === 'function') {\n      // If the current ref was called with a previous value, call with\n      // `undefined`; We do this to ensure callbacks are called in a consistent\n      // way regardless of whether a ref might be moving up in the tree (in\n      // which case it would otherwise be called with the new value before the\n      // previous one unsets it) and down in the tree (where it would be unset\n      // before being set). Note that element lookup is keyed by\n      // both the context and the callback, since we allow passing unbound\n      // functions that are called on options.host, and we want to treat\n      // these as unique \"instances\" of a function.\n      const context = this._context ?? globalThis;\n      let lastElementForCallback =\n        lastElementForContextAndCallback.get(context);\n      if (lastElementForCallback === undefined) {\n        lastElementForCallback = new WeakMap();\n        lastElementForContextAndCallback.set(context, lastElementForCallback);\n      }\n      if (lastElementForCallback.get(this._ref) !== undefined) {\n        this._ref.call(this._context, undefined);\n      }\n      lastElementForCallback.set(this._ref, element);\n      // Call the ref with the new element value\n      if (element !== undefined) {\n        this._ref.call(this._context, element);\n      }\n    } else {\n      (this._ref as RefInternal)!.value = element;\n    }\n  }\n\n  private get _lastElementForRef() {\n    return typeof this._ref === 'function'\n      ? lastElementForContextAndCallback\n          .get(this._context ?? globalThis)\n          ?.get(this._ref)\n      : this._ref?.value;\n  }\n\n  override disconnected() {\n    // Only clear the box if our element is still the one in it (i.e. another\n    // directive instance hasn't rendered its element to it before us); that\n    // only happens in the event of the directive being cleared (not via manual\n    // disconnection)\n    if (this._lastElementForRef === this._element) {\n      this._updateRefValue(undefined);\n    }\n  }\n\n  override reconnected() {\n    // If we were manually disconnected, we can safely put our element back in\n    // the box, since no rendering could have occurred to change its state\n    this._updateRefValue(this._element);\n  }\n}\n\n/**\n * Sets the value of a Ref object or calls a ref callback with the element it's\n * bound to.\n *\n * A Ref object acts as a container for a reference to an element. A ref\n * callback is a function that takes an element as its only argument.\n *\n * The ref directive sets the value of the Ref object or calls the ref callback\n * during rendering, if the referenced element changed.\n *\n * Note: If a ref callback is rendered to a different element position or is\n * removed in a subsequent render, it will first be called with `undefined`,\n * followed by another call with the new element it was rendered to (if any).\n *\n * ```js\n * // Using Ref object\n * const inputRef = createRef();\n * render(html`<input ${ref(inputRef)}>`, container);\n * inputRef.value.focus();\n *\n * // Using callback\n * const callback = (inputElement) => inputElement.focus();\n * render(html`<input ${ref(callback)}>`, container);\n * ```\n */\nexport const ref = directive(RefDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RefDirective};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { c as customElement } from \"../../chunks/runtime.js\";\nimport { html } from \"lit-html\";\nimport { createRef, ref } from \"lit-html/directives/ref.js\";\nimport { LitElement, createEvent, safeClassMap, nothing, setAttribute } from \"@arcgis/lumina\";\nimport { t as toAriaBoolean } from \"../../chunks/dom.js\";\nimport { c as componentFocusable, g as getIconScale } from \"../../chunks/component.js\";\nimport { u as updateHostInteraction, I as InteractiveContainer } from \"../../chunks/interactive.js\";\nimport { C as CSS } from \"../../chunks/resources6.js\";\nimport { css } from \"@lit/reactive-element/css-tag.js\";\nconst styles = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{position:relative;display:flex;flex-grow:1;align-items:center;outline-color:transparent}.container{position:relative;display:flex;flex-grow:1;cursor:pointer;align-items:center;text-decoration-line:none;color:var(--calcite-dropdown-item-text-color, var(--calcite-color-text-3));text-align:start;outline-color:transparent}.container a{outline:none;position:relative;display:flex;flex-grow:1;cursor:pointer;align-items:center;text-decoration-line:none;color:var(--calcite-dropdown-item-text-color, var(--calcite-color-text-3))}.dropdown-item-content{flex:1 1 auto;padding-block:.125rem}.dropdown-item-icon{position:relative;opacity:0;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1);transform:scale(.9)}:host([scale=s]) .container{padding-block:.25rem;padding-inline:.5rem;font-size:var(--calcite-font-size--2);line-height:1rem}:host([scale=s]) .dropdown-item-icon,:host([scale=s]) .dropdown-item-icon--start{padding-inline-end:var(--calcite-spacing-sm)}:host([scale=s]) .dropdown-item-icon--end{padding-inline-start:var(--calcite-spacing-sm)}:host([scale=m]) .container{padding-block:.5rem;padding-inline:.75rem;font-size:var(--calcite-font-size--1);line-height:1rem}:host([scale=m]) .dropdown-item-icon,:host([scale=m]) .dropdown-item-icon--start{padding-inline-end:var(--calcite-spacing-md)}:host([scale=m]) .dropdown-item-icon--end{padding-inline-start:var(--calcite-spacing-md)}:host([scale=l]) .container{padding-block:.625rem;padding-inline:1rem;font-size:var(--calcite-font-size-0);line-height:1.25rem}:host([scale=l]) .dropdown-item-icon,:host([scale=l]) .dropdown-item-icon--start{padding-inline-end:var(--calcite-spacing-lg)}:host([scale=l]) .dropdown-item-icon--end{padding-inline-start:var(--calcite-spacing-lg)}:host(:focus) .container{text-decoration-line:none;outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}:host(:hover:not([disabled])) .container{background-color:var(--calcite-dropdown-item-background-color-hover, var(--calcite-color-foreground-2))}:host(:active:not([disabled])) .container{background-color:var(--calcite-dropdown-item-background-color-press, var(--calcite-color-foreground-3))}:host(:hover:not([disabled])) .container,:host(:active:not([disabled])) .container{text-decoration-line:none;color:var(--calcite-dropdown-item-text-color-press, var(--calcite-color-text-1))}:host(:hover:not([disabled])) .dropdown-link,:host(:active:not([disabled])) .dropdown-link{color:var(--calcite-dropdown-item-text-color-press, var(--calcite-color-text-1))}:host([selected]) .container:not(.container--none-selection),:host([selected]) .dropdown-link{font-weight:var(--calcite-font-weight-medium);color:var(--calcite-dropdown-item-text-color-press, var(--calcite-color-text-1))}:host([selected]) .container:not(.container--none-selection) calcite-icon,:host([selected]) .dropdown-link calcite-icon{color:var(--calcite-dropdown-item-icon-color-press, var(--calcite-color-brand))}:host(:hover:not([disabled])) .dropdown-item-icon{color:var(--calcite-dropdown-item-icon-color-hover)}:host([selected]) .dropdown-item-icon{opacity:1}:host([hidden]){display:none}[hidden]{display:none}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}`;\nclass DropdownItem extends LitElement {\n  constructor() {\n    super();\n    this.childLink = createRef();\n    this.disabled = false;\n    this.scale = \"m\";\n    this.selected = false;\n    this.selectionMode = \"single\";\n    this.calciteDropdownItemSelect = createEvent({ cancelable: false });\n    this.calciteInternalDropdownCloseRequest = createEvent({ cancelable: false });\n    this.calciteInternalDropdownItemKeyEvent = createEvent({ cancelable: false });\n    this.calciteInternalDropdownItemSelect = createEvent({ cancelable: false });\n    this.listen(\"click\", this.onClick);\n    this.listen(\"keydown\", this.keyDownHandler);\n    this.listenOn(document.body, \"calciteInternalDropdownItemChange\", this.updateActiveItemOnChange);\n  }\n  static {\n    this.properties = { disabled: [7, {}, { reflect: true, type: Boolean }], href: [3, {}, { reflect: true }], iconEnd: [3, {}, { reflect: true }], iconFlipRtl: [3, {}, { reflect: true }], iconStart: [3, {}, { reflect: true }], label: 1, rel: [3, {}, { reflect: true }], scale: [3, {}, { reflect: true }], selected: [7, {}, { reflect: true, type: Boolean }], selectionMode: 1, target: [3, {}, { reflect: true }] };\n  }\n  static {\n    this.styles = styles;\n  }\n  async setFocus() {\n    await componentFocusable(this);\n    this.el?.focus();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this.initialize();\n  }\n  load() {\n    this.initialize();\n  }\n  updated() {\n    updateHostInteraction(this);\n  }\n  onClick() {\n    this.emitRequestedItem();\n  }\n  keyDownHandler(event) {\n    switch (event.key) {\n      case \" \":\n      case \"Enter\":\n        this.emitRequestedItem();\n        if (this.href) {\n          this.childLink.value.click();\n        }\n        event.preventDefault();\n        break;\n      case \"Escape\":\n        this.calciteInternalDropdownCloseRequest.emit();\n        event.preventDefault();\n        break;\n      case \"Tab\":\n        this.calciteInternalDropdownItemKeyEvent.emit({ keyboardEvent: event });\n        break;\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n      case \"Home\":\n      case \"End\":\n        event.preventDefault();\n        this.calciteInternalDropdownItemKeyEvent.emit({ keyboardEvent: event });\n        break;\n    }\n  }\n  updateActiveItemOnChange(event) {\n    const parentEmittedChange = event.composedPath().includes(this.parentDropdownGroupEl);\n    if (parentEmittedChange) {\n      this.requestedDropdownGroup = event.detail.requestedDropdownGroup;\n      this.requestedDropdownItem = event.detail.requestedDropdownItem;\n      this.determineActiveItem();\n    }\n    event.stopPropagation();\n  }\n  initialize() {\n    this.parentDropdownGroupEl = this.el.closest(\"calcite-dropdown-group\");\n    if (this.selectionMode === \"none\") {\n      this.selected = false;\n    }\n  }\n  determineActiveItem() {\n    switch (this.selectionMode) {\n      case \"multiple\":\n        if (this.el === this.requestedDropdownItem) {\n          this.selected = !this.selected;\n        }\n        break;\n      case \"single\":\n        if (this.el === this.requestedDropdownItem) {\n          this.selected = true;\n        } else if (this.requestedDropdownGroup === this.parentDropdownGroupEl) {\n          this.selected = false;\n        }\n        break;\n      case \"none\":\n        this.selected = false;\n        break;\n    }\n  }\n  emitRequestedItem() {\n    this.calciteDropdownItemSelect.emit();\n    this.calciteInternalDropdownItemSelect.emit({\n      requestedDropdownItem: this.el,\n      requestedDropdownGroup: this.parentDropdownGroupEl\n    });\n  }\n  render() {\n    const { href, selectionMode, label, iconFlipRtl } = this;\n    const iconStartEl = html`<calcite-icon class=${safeClassMap(CSS.iconStart)} .flipRtl=${iconFlipRtl === \"start\" || iconFlipRtl === \"both\"} .icon=${this.iconStart} .scale=${getIconScale(this.scale)}></calcite-icon>`;\n    const contentNode = html`<span class=${safeClassMap(CSS.itemContent)}><slot></slot></span>`;\n    const iconEndEl = html`<calcite-icon class=${safeClassMap(CSS.iconEnd)} .flipRtl=${iconFlipRtl === \"end\" || iconFlipRtl === \"both\"} .icon=${this.iconEnd} .scale=${getIconScale(this.scale)}></calcite-icon>`;\n    const slottedContent = this.iconStart && this.iconEnd ? [iconStartEl, contentNode, iconEndEl] : this.iconStart ? [iconStartEl, contentNode] : this.iconEnd ? [contentNode, iconEndEl] : contentNode;\n    const contentEl = !href ? slottedContent : html`<a .ariaLabel=${label} class=${safeClassMap(CSS.link)} href=${href ?? nothing} rel=${this.rel ?? nothing} tabindex=-1 target=${this.target ?? nothing} ${ref(this.childLink)}>${slottedContent}</a>`;\n    const itemRole = href ? null : selectionMode === \"single\" ? \"menuitemradio\" : selectionMode === \"multiple\" ? \"menuitemcheckbox\" : \"menuitem\";\n    const itemAria = selectionMode !== \"none\" ? toAriaBoolean(this.selected) : null;\n    const { disabled } = this;\n    this.el.ariaChecked = itemAria;\n    this.el.ariaLabel = !href ? label : \"\";\n    this.el.role = itemRole;\n    setAttribute(this.el, \"tabIndex\", disabled ? -1 : 0);\n    return InteractiveContainer({ disabled, children: html`<div class=${safeClassMap({\n      [CSS.container]: true,\n      [CSS.containerNone]: selectionMode === \"none\"\n    })}>${selectionMode !== \"none\" ? html`<calcite-icon class=${safeClassMap(CSS.icon)} .icon=${selectionMode === \"multiple\" ? \"check\" : \"bullet-point\"} .scale=${getIconScale(this.scale)}></calcite-icon>` : null}${contentEl}</div>` });\n  }\n}\ncustomElement(\"calcite-dropdown-item\", DropdownItem);\nexport {\n  DropdownItem\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nconst CSS = {\n  container: \"container\",\n  containerNone: \"container--none-selection\",\n  icon: \"dropdown-item-icon\",\n  iconEnd: \"dropdown-item-icon--end\",\n  iconStart: \"dropdown-item-icon--start\",\n  itemContent: \"dropdown-item-content\",\n  link: \"dropdown-link\"\n};\nexport {\n  CSS as C\n};\n","/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { l as logger } from \"./logger.js\";\nfunction getIconScale(componentScale) {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\nfunction warnIfMissingRequiredProp(component, newProp, deprecatedProp) {\n  if (!component[newProp] && !component[deprecatedProp]) {\n    logger.warn(`[${component.el.localName}] \"${newProp.toString()}\" or \"${deprecatedProp.toString()}\" is required.`);\n  }\n}\nfunction isHidden(el) {\n  return el.hidden || el.itemHidden;\n}\nasync function componentFocusable(component) {\n  await component.componentOnReady();\n  await component.updateComplete;\n}\nexport {\n  componentFocusable as c,\n  getIconScale as g,\n  isHidden as i,\n  warnIfMissingRequiredProp as w\n};\n"],"names":["interceptedClick","disabled","this","HTMLElement","prototype","click","call","onPointerDown","event","target","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","component","el","setAttribute","contains","document","activeElement","blur","element","addEventListener","forEach","blockInteraction","removeEventListener","restoreInteraction","removeAttribute","CSS","InteractiveContainer","_ref","children","html","_templateObject","_taggedTemplateLiteral","safeClassMap","createObserver","type","callback","options","isServer","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","observe","push","unobserve","newObservedEntries","filter","observed","takeRecords","disconnect","IntersectionObserver","ResizeObserver","getObserver","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","icon","scale","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","concat","normalizeIconName","filled","iconName","substring","getCachedIconDataByKey","id","styles","css","Icon","LitElement","arguments","visible","flipRtl","preload","connectedCallback","loadIconPathData","waitUntilVisible","willUpdate","changes","has","hasUpdated","disconnectedCallback","_this$intersectionObs","intersectionObserver","fetchIconProps","pathData","async","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","logger","error","path","fetchIcon","entries","entry","isIntersecting","rootMargin","render","textLabel","dir","getElementDir","semantic","paths","ariaHidden","toAriaBoolean","ariaLabel","role","_templateObject2","svg","_path$d","_ref2","_templateObject3","nothing","_templateObject4","d","opacity","_Icon","properties","state","reflect","Boolean","customElement","loggedDeprecations","Set","logLevels","trace","debug","info","warn","off","forwardToConsole","level","logLevel","willLog","_len","data","Array","_key","console","listFormatter","message","deprecated","context","suggested","removalVersion","key","add","multiSuggestions","isArray","Intl","ListFormat","style","format","suggestion","notifyChildrenConnectedChanged","i","t","e","_$AN","_i$_$AO","_$AO","o","_e","_$AM","delete","r","c","h","n","undefined","_$AH","_i$_$AP","_i$_$AQ","CHILD","_$AP","_$AQ","f","_$AT","isConnected","_$AU","_this$reconnected","_this$disconnected","reconnected","disconnected","setValue","_$Ct","_$AI","_$Ci","createRef","WeakMap","update","_i$options","G","rt","lt","ct","ht","host","_this$ht","globalThis","get","set","value","_o$get","_this$ht2","_this$G","DropdownItem","childLink","selected","selectionMode","calciteDropdownItemSelect","createEvent","cancelable","calciteInternalDropdownCloseRequest","calciteInternalDropdownItemKeyEvent","calciteInternalDropdownItemSelect","listen","onClick","keyDownHandler","listenOn","body","updateActiveItemOnChange","setFocus","_this$el","componentFocusable","focus","initialize","load","updated","emitRequestedItem","href","emit","keyboardEvent","composedPath","includes","parentDropdownGroupEl","requestedDropdownGroup","detail","requestedDropdownItem","determineActiveItem","stopPropagation","closest","_this$rel","_this$target","label","iconFlipRtl","iconStartEl","iconStart","getIconScale","contentNode","itemContent","iconEndEl","iconEnd","slottedContent","contentEl","_templateObject5","link","rel","ref","itemRole","itemAria","ariaChecked","_templateObject6","container","containerNone","_templateObject7","_DropdownItem","componentScale","componentOnReady","updateComplete"],"sourceRoot":""}